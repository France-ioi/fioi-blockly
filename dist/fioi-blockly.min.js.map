{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","msgName","Blockly","console","error","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","htmlInput","that","posTop","posLeft","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","parseInt","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","flyoutOptions","disableArgs","includedBlocks","noret","ret","ifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","undefined","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","// Temporarily put fr translations, waiting the NL ones\n\nFioiBlockly.Msg.nl = {};\n\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.nl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.nl.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.nl.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.nl.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.nl.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.nl.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.nl.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.nl.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.nl.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}