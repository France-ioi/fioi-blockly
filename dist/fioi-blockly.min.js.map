{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","posLeft","that","parseInt","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","RENAME_VARIABLE","oldVar","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","nameField","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","addEventListener","bindData","TOUCH_MAP","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","button","idx","splice","sort","caseInsensitiveCompare","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","matrix","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","sl","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","up","code","step","startVar","endVar","incVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","parseFloat","abs","match","getDistinctName","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","undefined","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ADD","ORDER_ADDITION","MINUS","MULTIPLY","ORDER_MULTIPLICATION","DIVIDE","ORDER_DIVISION","DIVIDEFLOOR","POWER","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      });\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.JavaScript.ORDER_ADDITION],\n    'MINUS': [' - ', Blockly.JavaScript.ORDER_SUBTRACTION],\n    'MULTIPLY': [' * ', Blockly.JavaScript.ORDER_MULTIPLICATION],\n    'DIVIDE': [' / ', Blockly.JavaScript.ORDER_DIVISION],\n    // Handled separately :\n    'DIVIDEFLOOR': [null, Blockly.JavaScript.ORDER_NONE],\n    'POWER': [null, Blockly.JavaScript.ORDER_NONE]\n  };\n\n  var op = block.getFieldValue('OP');\n  var tuple = OPERATORS[op];\n  var operator = tuple[0];\n  var order = tuple[1];\n\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'B', order) || '0';\n  var code;\n  if(op == 'DIVIDEFLOOR') {\n    code = 'Math.floor((' + argument0 + ') / (' + argument1 + '))';\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  }\n  // Power in JavaScript requires a special case since it has no operator.\n  if(op == 'POWER') {\n    code = 'Math.pow(' + argument0 + ', ' + argument1 + ')';\n    return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  }\n  code = argument0 + operator + argument1;\n  return [code, order];\n};\n\nBlockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}