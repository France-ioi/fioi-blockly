{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","nameField","incl","xmlList","PROCEDURES_DEFNORETURN_PROCEDURE","push","populateProcedures","procedureList","templateName","args","mutation","j","arg","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","type","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validate_","validationMsg","asserts","assertObject","htmlInput_","htmlInput","addClass_","setWarningText","resizeEditor_","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","Python","PASS","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","Array","n","key","join","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"AAAAA,eACAA,YAAAC,OACAD,YAAAE,kBAEAF,YAAAG,YAAA,KAEAH,YAAAI,sBAEAJ,YAAAK,YAAA,IAGAL,YAAAM,aAAA,SAAAC,GACA,IAAAP,YAAAC,IAAAM,KAAAP,YAAAI,mBAAAG,GAGA,OAFAC,QAAAC,MAAA,YAAAF,EAAA,wCACAP,YAAAI,mBAAAG,IAAA,GAIA,IAAA,IAAAG,KAAAV,YAAAC,IAAAM,GACAI,QAAAV,IAAAS,GAAAV,YAAAC,IAAAM,GAAAG,IAKAV,YAAAY,uBAAA,SAAAC,GACA,IAAA,IAAAC,KAAAd,YAAAE,eACAW,IAAA,GAAAA,EAAAE,QAAAD,KACAH,QAAAK,OAAAF,GAAAd,YAAAE,eAAAY,KCCAG,KAAAC,QAAA,uBAEAD,KAAAE,QAAA,YACAF,KAAAE,QAAA,cAMAR,QAAAS,YAAA,aAQAT,QAAAS,YAAAC,KAAA,KAQAV,QAAAS,YAAAE,eAAA,KAOAX,QAAAS,YAAAG,OAAA,KAOAZ,QAAAS,YAAAI,WAAA,GAOAb,QAAAS,YAAAK,YAAA,EAOAd,QAAAS,YAAAM,yBAAA,GAOAf,QAAAS,YAAAO,UAAA,GAOAhB,QAAAS,YAAAQ,eAAA,IAOAjB,QAAAS,YAAAS,iBAAA,KAMAlB,QAAAS,YAAAU,QAAA,EAGAnB,QAAAS,YAAAW,eAAA,EACApB,QAAAS,YAAAY,mBAAA,KAGArB,QAAAS,YAAAa,gBAAA,EAMAtB,QAAAS,YAAAc,UAAA,WACAvB,QAAAS,YAAAC,OAGAV,QAAAS,YAAAC,KAAAJ,KAAAkB,IAAAD,UAAA,MAAA,sBACAE,SAAAC,KAAAC,YAAA3B,QAAAS,YAAAC,MACAV,QAAAS,YAAAmB,SAAAtB,KAAAkB,IAAAD,UAAA,MAAA,0BACAvB,QAAAS,YAAAC,KAAAiB,YAAA3B,QAAAS,YAAAmB,UACA5B,QAAAS,YAAAoB,OAAAvB,KAAAkB,IAAAD,UAAA,MAAA,wBACAvB,QAAAS,YAAAC,KAAAiB,YAAA3B,QAAAS,YAAAoB,QAGA7B,QAAAS,YAAAC,KAAAoB,MAAAC,WAAA,aACA/B,QAAAS,YAAAQ,eAAA,cACAjB,QAAAS,YAAAQ,eAAA,MAQAjB,QAAAS,YAAAuB,iBAAA,SAAAC,GACAjC,QAAAS,YAAAE,eAAAsB,GAOAjC,QAAAS,YAAAyB,cAAA,WACA,OAAAlC,QAAAS,YAAAmB,UAMA5B,QAAAS,YAAA0B,aAAA,WACAnC,QAAAS,YAAAmB,SAAAQ,UAAA,IAQApC,QAAAS,YAAA4B,UAAA,SAAAC,EAAAC,GACAvC,QAAAS,YAAAC,KAAAoB,MAAAU,gBAAAF,EACAtC,QAAAS,YAAAC,KAAAoB,MAAAW,YAAAF,GAOAvC,QAAAS,YAAAiC,YAAA,SAAAC,GACA3C,QAAAS,YAAAC,KAAAkC,aAAA,gBAAAD,IAIA3C,QAAAS,YAAAoC,sBAAA,SAAAC,EAAAC,EACAC,EAAAC,GACA,IAAAC,EAAAH,EAAAI,UAAAD,MACAE,GAAAC,MAAAN,EAAAM,MAAAC,OAAAP,EAAAO,QACAF,EAAAC,OAAAH,EACAE,EAAAE,QAAAJ,EAEA,IADA,IAAAK,EAAAR,EAAAS,aACAC,EAAA,EAAAA,EAAAF,EAAAG,SAAAC,OAAAF,IACA,GAAA,eAAAF,EAAAG,SAAAD,GAAAG,UAAA,GAAA,CACAL,EAAAA,EAAAG,SAAAD,GACA,MAGA,IAAAI,EAAAN,EAAAO,wBAEAC,EAAAF,EAAAG,KAAAH,EAAAR,MAAA,EACAY,EAAAJ,EAAAK,IAAAL,EAAAP,OAEAa,EAAAJ,EACAK,EAAAP,EAAAK,IAMA,OALAjB,IACAmB,GAAAnB,GAGAjD,QAAAS,YAAAuB,iBAAAe,EAAAI,UAAAkB,eAAAC,YACAtE,QAAAS,YAAA8D,KAAAC,KAAAT,EAAAE,EAAAE,EAAAC,EAAApB,IAIAhD,QAAAS,YAAAgE,eAAA,WACAzE,QAAAS,YAAAa,iBACAtB,QAAA0E,MAAAC,uBACA3E,QAAA4E,aAAA5E,QAAAS,YAAAa,gBACAtB,QAAAS,YAAAa,gBAAA,IAKAtB,QAAAS,YAAAoE,YAAA,WACA7E,QAAAS,YAAAa,iBACAtB,QAAAS,YAAAa,eAAAtB,QAAA8E,qBAAAC,OAAA,YAAA/E,QAAAS,YAAAT,QAAAS,YAAAuE,oBAoBAhF,QAAAS,YAAA8D,KAAA,SAAAzB,EAAAiB,EAAAE,EAAAE,EAAAC,EAAApB,GAEAhD,QAAAS,YAAAW,eAAA,EACApB,QAAAS,YAAAS,mBACA6D,OAAAE,aAAAjF,QAAAS,YAAAS,kBACAlB,QAAAS,YAAAS,iBAAA,MAEAlB,QAAAS,YAAAY,qBACA0D,OAAAE,aAAAjF,QAAAS,YAAAY,oBACArB,QAAAS,YAAAY,mBAAA,MAEArB,QAAAS,YAAAY,mBAAA0D,OAAAG,WAAA,WAAAlF,QAAAS,YAAAW,eAAA,GAAA,IAAApB,QAAAS,YAAAQ,gBAEAjB,QAAAS,YAAAoE,cAEA7E,QAAAS,YAAAG,OAAAkC,EACA9C,QAAAS,YAAAU,QAAA6B,EACA,IAAAmC,EAAAnF,QAAAS,YAAAC,KACA0E,EAAApF,QAAAS,YAAA4E,mBAAAtB,EAAAE,EAAAE,EAAAC,GAEApE,QAAAS,YAAAoB,OAAAC,MAAAwD,UAAA,aACAF,EAAAG,OAAA,MAAAH,EAAAI,OAAA,oBACAxF,QAAAS,YAAAoB,OAAAe,aAAA,QACAwC,EAAAK,WAAA,gCAAA,oCAYAN,EAAArD,MAAAkC,KAAAoB,EAAAM,SAAA,KACAP,EAAArD,MAAAoC,IAAAkB,EAAAO,SAAA,KAEAR,EAAArD,MAAA8D,QAAA,QACAT,EAAArD,MAAA+D,QAAA,EAIA,IAAAC,EAAAV,EAAAW,OAAAX,EAAAM,SACAM,EAAAZ,EAAAa,OAAAb,EAAAO,SAEA,OADAR,EAAArD,MAAAwD,UAAA,aAAAQ,EAAA,MAAAE,EAAA,MACAZ,EAAAK,YAYAzF,QAAAS,YAAA4E,mBAAA,SAAAtB,EAAAE,EAAAE,EAAAC,GACA,IASA8B,EAAAC,EAAAC,EATAjB,EAAAnF,QAAAS,YAAAC,KACA2F,EAAArG,QAAAS,YAAAE,eAAAmD,wBAEAwC,EAAAhG,KAAAwB,MAAAyE,QAAAvG,QAAAS,YAAAE,gBACA6F,EAAAlG,KAAAwB,MAAAyE,QAAApB,GAOAf,EAAAoC,EAAAlD,OAAA+C,EAAAnC,IAEAD,EAAAuC,EAAAlD,OAAA+C,EAAAnC,IAAAoC,EAAAhD,QAEA4C,EAAA/B,EACAgC,EAAA/B,EAAAoC,EAAAlD,OAAAtD,QAAAS,YAAAO,UACAoF,GAAA,IAGAF,EAAAnC,EACAoC,EAAAlC,EAAAjE,QAAAS,YAAAO,UACAoF,GAAA,IAIAF,EAAA/B,EACAgC,EAAA/B,EAAAoC,EAAAlD,OAAAtD,QAAAS,YAAAO,UACAoF,GAAA,GAKA,IAAAb,EAAAW,EAAAlG,QAAAS,YAAAI,WAAA,EAEA0E,EAAAkB,KAAAC,IAAAL,EAAArC,KAAAyC,KAAAE,IAAApB,EAAAc,EAAArC,KAAAsC,EAAAjD,QAIA6C,GADAM,EAAAnD,MAAA,EAQAkC,GALAW,EAAAO,KAAAC,IACAL,EAAArC,KACAyC,KAAAE,IAAAT,EAAAG,EAAArC,KAAAsC,EAAAjD,MAAAmD,EAAAnD,QAMAkC,EAAAkB,KAAAC,IACA1G,QAAAS,YAAAM,yBACA0F,KAAAE,IAAApB,EAAAiB,EAAAnD,MAAArD,QAAAS,YAAAM,yBAAAf,QAAAS,YAAAI,aAKA,IAAA2E,EAAA,EAAAgB,EAAAlD,OAAAtD,QAAAS,YAAAK,YAAA,EAYA,OAXA0E,GAAAxF,QAAAS,YAAAI,WAAA,EAAAb,QAAAS,YAAAK,aAYA4E,SATAQ,EAUAP,UARAS,EACAhC,EAAAoC,EAAAlD,OAEAW,GAKA,GACA8B,OAAAG,EACAD,OAAAE,EAAA,GACAZ,OAAAA,EACAC,OAAAA,EACAC,YAAAW,IAQApG,QAAAS,YAAAmG,UAAA,WACA,QAAA5G,QAAAS,YAAAG,QAQAZ,QAAAS,YAAAoG,YAAA,SAAA/D,GACA,OAAA9C,QAAAS,YAAAG,SAAAkC,IACA9C,QAAAS,YAAAqG,QACA,IAQA9G,QAAAS,YAAAqG,KAAA,WACA9G,QAAAS,YAAAW,eAAA,EAEA,IAAA+D,EAAAnF,QAAAS,YAAAC,KAEAyE,IACAA,EAAArD,MAAAwD,UAAA,sBACAH,EAAArD,MAAA+D,QAAA,EACA7F,QAAAS,YAAAS,iBAAAgE,WAAA,WAEAlF,QAAAS,YAAAsG,wBACA,IAAA/G,QAAAS,YAAAQ,iBAEAjB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,QAAA,OAKAnB,QAAAS,YAAAuE,iBAAA,WACAhF,QAAAS,YAAAW,eACApB,QAAAS,YAAAqG,QAOA9G,QAAAS,YAAAsG,qBAAA,WACA,GAAA/G,QAAAS,YAAAmG,YAAA,CAGA,IAAAzB,EAAAnF,QAAAS,YAAAC,KACAV,QAAAS,YAAAS,kBAAA6D,OAAAE,aAAAjF,QAAAS,YAAAS,kBACAiE,EAAArD,MAAAwD,UAAA,GACAH,EAAArD,MAAAoC,IAAA,GACAiB,EAAArD,MAAAkC,KAAA,GACAmB,EAAArD,MAAA8D,QAAA,OACA5F,QAAAS,YAAA0B,eACAnC,QAAAS,YAAAgE,iBACAzE,QAAAS,YAAAG,OAAA,KACAZ,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,QAAA,QC9bAnB,QAAAgH,cAAAC,UAAAC,eAAA,SAAAC,GACA,IAAAhE,EAAAqB,KAAA4C,aAAAjE,UACA,GAAAgE,GAAAnH,QAAAV,IAAA+H,gBAAA,CACA,IAAAC,EAAA9C,KAAA+C,UACAvH,QAAAwH,YAQA,OAFAL,EAAAnH,QAAAyH,UAAAC,WACA1H,QAAAV,IAAAqI,sBAAAC,QAAA,KAAAN,GAAAA,EANA,SAAAH,GACAA,GACAhE,EAAA0E,eAAAP,EAAAH,KAKA,KACA,GAAAA,GAAAnH,QAAAV,IAAAwI,gBAAAF,QAAA,KACApD,KAAA+C,WAEA,OADApE,EAAA4E,eAAAvD,KAAA+C,WACA,MChBAvH,QAAAgI,MAAAf,UAAAgB,UAAA,SAAAC,GACA,GAAAA,EAEA,CAEA,IADA,IAAAC,EAAA,GACA1E,EAAA,EAAAA,EAAAyE,EAAAvE,OAAAF,IACA,GAAAA,IAAA,GAAA,aAAArD,QAAA8H,EAAAzE,MAEA0E,EAAA,OAEA,KAAAD,EAAAzE,GACA0E,GAAA,KACA,GAAA,eAAA/H,QAAA8H,EAAAzE,IACA0E,GAAAD,EAAAzE,GAEA0E,GAAAC,UAAAF,EAAAzE,IAAAmE,QAAA,SAAA,KAGA,OAAAO,EAhBA,MAAA,WCFAnI,QAAAqI,WAAAC,eACAC,gBAAAC,OAAA,EAAAC,KAAA,EAAAC,OAAA,IAKA1I,QAAAqI,WAAAM,eAAA,SAAAxF,GACA,IAkBAyF,EAQA7F,EA1BA8F,EAAA7I,QAAAqI,WAAAC,cAAAC,eACAO,KACAD,EAAAL,OAAAxI,QAAAK,OAAA,0BAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,0BACAG,EAAAH,aAAA,MAAA,KACAgG,EAAAtI,KAAAkB,IAAAD,UAAA,QAAA,KACAvB,QAAAV,IAAAyJ,mCACAnG,aAAA,OAAA,QACAG,EAAApB,YAAAiH,GACAE,EAAAE,KAAAjG,IAEA8F,EAAAJ,KAAAzI,QAAAK,OAAA,wBAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,wBACAG,EAAAH,aAAA,MAAA,KACAgG,EAAAtI,KAAAkB,IAAAD,UAAA,QAAA,KACAvB,QAAAV,IAAAyJ,mCACAnG,aAAA,OAAA,QACAG,EAAApB,YAAAiH,GACAE,EAAAE,KAAAjG,IAEA8F,EAAAH,OAAA1I,QAAAK,OAAA,uBAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,uBACAG,EAAAH,aAAA,MAAA,IACAkG,EAAAE,KAAAjG,IAOA,SAAAkG,EAAAC,EAAAC,GACA,IAAA,IAAA1F,EAAA,EAAAA,EAAAyF,EAAAvF,OAAAF,IAAA,CACA,IAAAyE,EAAAgB,EAAAzF,GAAA,GACA2F,EAAAF,EAAAzF,GAAA,GAMAV,EAAAzC,KAAAkB,IAAAD,UAAA,SACAwB,EAAAH,aAAA,OAAAuG,GACApG,EAAAH,aAAA,MAAA,IACA,IAAAyG,EAAA/I,KAAAkB,IAAAD,UAAA,YACA8H,EAAAzG,aAAA,OAAAsF,GACAnF,EAAApB,YAAA0H,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAF,EAAAzF,OAAA2F,IAAA,CACA,IAAAC,EAAAjJ,KAAAkB,IAAAD,UAAA,OACAgI,EAAA3G,aAAA,OAAAwG,EAAAE,IACAD,EAAA1H,YAAA4H,GAEAT,EAAAE,KAAAjG,IAzBA+F,EAAAnF,QAEAmF,EAAAA,EAAAnF,OAAA,GAAAf,aAAA,MAAA,IA2BA,IAAA4G,EAAAxJ,QAAAqI,WAAAoB,cAAAtG,GAGA,OAFA8F,EAAAO,EAAA,GAAA,2BACAP,EAAAO,EAAA,GAAA,yBACAV,GCtEA9I,QAAA0J,UAAAC,mBAAA,GAQA3J,QAAA0J,UAAAzC,UAAA2C,qBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,UAAAF,EAAAG,YAAA,EACAxF,KAAAyF,QAEAH,GAAA9J,QAAA0J,UAAAC,oBAEAnF,KAAA0F,mBAAAzD,KAAAC,IAAA,EAAAoD,IAEA,IAAAK,EAAAN,EAAAO,aAAAP,EAAAG,YAAA,GACAxF,KAAAyF,OAAAzF,KAAA6F,WAAAC,MACAH,GAAAnK,QAAA0J,UAAAC,oBAIA,IAAAY,EAAAV,EAAAW,YAAAX,EAAAY,WACAzK,QAAA0J,UAAAC,mBAAA,GACAnF,KAAAkG,YAAAP,EAAAI,GAIA/F,KAAAmG,wBAAAd,IASA7J,QAAA0J,UAAAzC,UAAA0D,wBAAA,SAAAd,GACArF,KAAAyF,OAIAzF,KAAAoG,WAAApG,KAAAqG,gBAAAhB,EAAAiB,cAGAtG,KAAAuG,OAAAvG,KAAAqG,gBAAAhB,EAAAiB,cACAtG,KAAAuG,SAAAC,EAAAA,GAAAxG,KAAAuG,QAAAC,EAAAA,GACAC,MAAAzG,KAAAuG,WACAvG,KAAAuG,OAAA,GAGA,IAAAG,GAAArB,EAAAE,UAAAF,EAAAG,aAAAxF,KAAAuG,OACAvG,KAAA2G,iBAAA1E,KAAAC,IAAA,EAAAwE,IAEA,IAAAE,GAAAvB,EAAAwB,SAAAxB,EAAAyB,aACA9G,KAAAuG,OACAvG,KAAA+G,kBAAA/G,KAAAgH,iBAAAJ,KCxDApL,QAAAyL,WAAA,SAAAC,GACA,IAAAvI,EAAAnD,QAAA2L,mBACAxI,GAAAA,EAAAyI,WAAA5L,QAAA6L,YAGA7L,QAAA0E,MAAAC,uBACA3E,QAAA8L,IAAAC,UAAA/L,QAAA8L,IAAAE,OAAAC,MACA9I,EAAAyI,UAAA5L,QAAA6L,UAEA7L,QAAA0E,MAAAwH,oBACAlM,QAAA4E,aAAA5E,QAAA0E,MAAAwH,mBACAlM,QAAA0E,MAAAwH,kBAAA,MAEAlM,QAAAmM,sBACAnM,QAAA4E,aAAA5E,QAAAmM,qBACAnM,QAAAmM,oBAAA,QChBA9M,YAAA+M,cAAA,GAEApM,QAAAqM,SAAApF,UAAApD,SAAA,WACA,IAAAuB,EAAAZ,KAAA6F,WAAAiC,aACAlH,IAIAZ,KAAA6F,WAAAC,KACA9F,KAAA+H,MAAA/H,KAAAgI,aAAAxM,QAAA0J,UAAAC,mBACAvE,EAAAqH,iBAAAzM,QAAA0M,kBACAlI,KAAA+H,OAAAnH,EAAA4E,YACAxF,KAAA6F,WAAAsC,WACAnI,KAAA+H,OAAAnH,EAAAgF,iBAIA5F,KAAA+H,MAAAnH,EAAA2E,UAAA3E,EAAAgF,aACA5F,KAAAoI,OAAAvN,YAAA+M,cAAA5H,KAAAgI,aAAAxM,QAAA0J,UAAAC,mBAEAvE,EAAAqH,iBAAAzM,QAAA6M,mBACArI,KAAA+H,OAAAnH,EAAA4E,cAGAxF,KAAAsI,KAAA1H,EAAAqF,WAAArF,EAAAoF,aACAhG,KAAAuI,aAAAvI,KAAAwI,aAAA3N,YAAA+M,cAAA5H,KAAAyI,QAEA7H,EAAAqH,iBAAAzM,QAAAkN,oBACA1I,KAAAsI,MAAA1H,EAAA+H,cAEA3I,KAAA4I,UAAAxK,aAAA,YACA,aAAA4B,KAAA+H,MAAA,IAAA/H,KAAAsI,KAAA,WAAAzN,YAAA+M,cAAA,QC5BApM,QAAAqN,OAAArN,QAAAqN,OAAArN,QAAAsN,MAAAD,QAAAE,MAAA,wFAIAvN,QAAAwN,cACAxN,QAAAwN,gBAGAxN,QAAA8E,qBAAA,SAAA2I,EAAAvF,EAAAwF,EAAAC,EACAC,GACA,IAAAC,GAAA,EACAC,EAAA,SAAApC,GAKA,IAJA,IAIAqC,EAJAC,GAAAJ,EAGAK,EAAAjO,QAAA0E,MAAAwJ,oBAAAxC,GACAjI,EAAA,EAAAsK,EAAAE,EAAAxK,GAAAA,IACAuK,IAAAhO,QAAA0E,MAAAyJ,kBAAAJ,KAGA/N,QAAA0E,MAAA0J,mBAAAL,GACAL,EACAC,EAAAU,KAAAX,EAAAK,GAEAJ,EAAAI,GAEAF,GAAA,IAIAJ,EAAAa,iBAAApG,EAAA4F,GAAA,GACA9N,QAAAwN,YAAAxE,MAAAyE,KAAAA,EAAAvF,KAAAA,EAAAyF,KAAAG,IACA,IAAAS,IAAAd,EAAAvF,EAAA4F,IAGA,GAAA5F,KAAAlI,QAAA0E,MAAA8J,UAQA,IAPA,IAOAC,EAPAC,EAAA,SAAAhD,GACAoC,EAAApC,GAEAmC,GACAnC,EAAAiD,kBAGAlL,EAAA,EACAgL,EAAAzO,QAAA0E,MAAA8J,UAAAtG,GAAAzE,GAAAA,IACAgK,EAAAa,iBAAAG,EAAAC,GAAA,GACA1O,QAAAwN,YAAAxE,MAAAyE,KAAAA,EAAAvF,KAAAuG,EAAAd,KAAAA,IACAY,EAAAvF,MAAAyE,EAAAgB,EAAAC,IAGA,OAAAH,GAKAvO,QAAA4O,aAAA,WACA,IAAA,IAAAnL,EAAA,EAAAA,EAAAzD,QAAAwN,YAAA7J,OAAAF,IAAA,CACA,IAAAoL,EAAA7O,QAAAwN,YAAA/J,GACA,IACAoL,EAAApB,KAAAqB,oBAAAD,EAAA3G,KAAA2G,EAAAlB,MACA,MAAAjC,KAEA1L,QAAA+O,uBACAtN,SAAAqN,oBAAA,UAAA9O,QAAAyL,YACAzL,QAAA+O,sBAAA,GAEA/O,QAAAwN,gBAKAxN,QAAAgP,mBAAA,SAAA7H,EAAAhE,GACA,IACA,IAAA8L,EAAAlK,OAAAkK,MAAAlK,OAAAkK,MAAAzO,QAAA,SACA0O,EAAAD,EAAAC,KAAAD,EAAAC,KAAA1O,QAAA,cACA,MAAAkL,GAEA,OADA7L,QAAAC,MAAA,mEACA,KAIA,IAAA,GAAAqH,EAAA/G,QAAA,KAEA,OAAAJ,QAAAV,IAAA6P,qBAIA,IACA,IAAAC,EAAAH,EAAAI,MAAAlI,GACA,MAAAuE,GAEA,OAAA1L,QAAAV,IAAAgQ,kBAGA,IAAAC,EAAA,KACAC,EAAA,KACAC,GAAA,UAAA,aAAA,mBAAA,kBAAA,kBAAA,mBAAA,sBAAA,WA8BA,OAFAP,EAAAQ,KAAAN,EA3BA,SAAA3B,EAAAkC,EAAAC,IACA,GAAAH,EAAArP,QAAAwP,KAMA,oBAAAA,GAAA,KAAAzI,EAAAsG,EAAAoC,OAAAC,MAAArC,EAAAsC,SAAAD,KAAArC,EAAAqC,KAAA,KAAA3I,EAAAsG,EAAAqC,IAAA,IAMA,cAAAF,GAAAzM,IAEA,OAAAqM,IACAA,EAAArM,EAAAqM,cAEAA,IAAA,GAAAA,EAAApP,QAAAqN,EAAAvF,SAEAqH,EAAAvP,QAAAV,IAAA0Q,eAAApI,QAAA,KAAA6F,EAAAvF,OAjBAqH,EAAAvP,QAAAV,IAAA2Q,gBAAArI,QAAA,KAAAgI,KA0BAL,GAIAvP,QAAAkQ,kBAAA,SAAA/I,EAAAhE,GACA,GAAA,OAAAnD,QAAAgP,mBAAA7H,EAAAhE,GAEA,OAAA,KAGA,IACA,IAAA8L,EAAAlK,OAAAkK,MAAAlK,OAAAkK,MAAAzO,QAAA,SACA0O,EAAAD,EAAAC,KAAAD,EAAAC,KAAA1O,QAAA,cACA,MAAAkL,GAEA,OADA7L,QAAAC,MAAA,kEACA,KAIA,IAAAsP,EAAAH,EAAAI,MAAAlI,GAGAgJ,KACAC,EAAAjJ,EAQA+H,EAAAQ,KAAAN,EAPA,SAAA3B,EAAAkC,EAAAC,GACA,oBAAAA,GACAO,EAAAnH,MAAAyE,EAAAoC,OAAAC,IAAArC,EAAAqC,IAAA,MAQA,IAAA,IAAArM,EAAA,EAAAA,EAAA0M,EAAAxM,OAAAF,IAAA,CACA,IAAA4M,EAAAF,EAAA1M,GAAA,GACAqM,EAAAK,EAAA1M,GAAA,GAEA2M,EAAAA,EAAAE,MAAA,EAAAD,EAAA,GAAA,IAAAD,EAAAE,MAAAD,EAAA,EAAAP,GAAA,MAAAM,EAAAE,MAAAR,GAGA,IAAA,IAAAxG,EAAA7F,EAAA,EAAA6F,EAAA6G,EAAAxM,OAAA2F,IACA+G,EAAAF,EAAA7G,GAAA,KACA6G,EAAA7G,GAAA,IAAA,GAEA+G,EAAAF,EAAA7G,GAAA,KACA6G,EAAA7G,GAAA,IAAA,GAEAwG,EAAAK,EAAA7G,GAAA,KACA6G,EAAA7G,GAAA,IAAA,GAEAwG,EAAAK,EAAA7G,GAAA,KACA6G,EAAA7G,GAAA,IAAA,GAKA,OAAA8G,GCzLApQ,QAAAyH,UAAAa,eACAiI,KAAA,EACAC,WAAA,EACAC,SACAlI,gBAAAmI,KAAA,EAAAC,KAAA,EAAAC,MAAA,GACAC,WAAA,GAIA7Q,QAAAyH,UAAAkB,eAAA,SAAAxF,GACA,IAAA2F,KACAgI,EAAA9Q,QAAAyH,UAAAa,cAGAyI,IAAA/Q,QAAA,uBACA,GAAA8Q,EAAAP,IAAA,CACA,GAAApN,EACA,IAAA6N,EAAA7N,EAAAqM,kBAEA,IAAA,EAAAsB,EAAAL,MAAArQ,QAAA,UAAA,CAEA,IADA,IAAA6Q,EAAA,GACA,EAAAH,EAAAL,MAAArQ,QAAA,SAAA6Q,IACAA,IAEAD,GAAA,SAAAC,QAEAD,GAAA,UAGA,IAAA,IAAAvN,EAAA,EAAAA,EAAAqN,EAAAL,MAAA9M,OAAAF,IAAA,CACA,IAAAyN,EAAAF,EAAA5Q,QAAA0Q,EAAAL,MAAAhN,KACA,EAAAyN,GACAF,EAAAG,OAAAD,EAAA,GAKA,GAFAF,EAAAI,KAAA9Q,KAAA+Q,OAAAC,wBAEAR,EAAAN,UAAA,CACA,IAAAe,EAAAjR,KAAAkB,IAAAD,UAAA,UACAgQ,EAAA3O,aAAA,OAAA5C,QAAAV,IAAAkS,cACAT,IAEAQ,EAAA3O,aAAA,cAAA,mBACA5C,QAAAyR,uBAAA,kBAAA,SAAAF,GACAvR,QAAAyH,UAAAiK,eAAAH,EAAAI,yBAGA7I,EAAAE,KAAAuI,SAGAP,KAGA,IAAAxB,EAAAsB,EAAAL,MAAAmB,OAAAZ,GAEA,GAAA,EAAAxB,EAAA7L,OAAA,CACA,GAAAoN,EACA,IAAA7Q,GACAwQ,IAAA,gBACAC,IAAA,qBACAC,KAAA,8BAGA1Q,GACAwQ,IAAA,gBACAC,IAAA,gBACAC,KAAA,eAIA,GAAAE,EAAAvI,eAAAmI,KAAA1Q,QAAAK,OAAAH,EAAAwQ,KACA,IAAAjN,EAAA,EAAAA,EAAA+L,EAAA7L,OAAAF,IAAA,CAeA,IAXAV,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAAwQ,KACAjN,EAAAqN,EAAAL,MAAA9M,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+L,EAAA7L,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAGAmO,EACA,IAAAc,EAAA7R,QAAAyH,UAAAqK,mBAAAtC,EAAA/L,SAEAoO,EAAAvR,KAAAkB,IAAAD,UAAA,QAAA,KAAAiO,EAAA/L,KACAb,aAAA,OAAA,OAGAG,EAAApB,YAAAkQ,GACA/I,EAAAE,KAAAjG,GAIA,GAAA+N,EAAAvI,eAAAoI,KAAA3Q,QAAAK,OAAAH,EAAAyQ,KACA,IAAAlN,EAAA,EAAAA,EAAA+L,EAAA7L,UAIAmN,EAAAD,WAAApN,EAAAqN,EAAAL,MAAA9M,QAJAF,IAAA,CAmBA,IAXAV,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAAyQ,KACAlN,EAAAqN,EAAAL,MAAA9M,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+L,EAAA7L,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAGAmO,EAAA,CACAc,EAAA7R,QAAAyH,UAAAqK,mBAAAtC,EAAA/L,IACAV,EAAApB,YAAAkQ,GACA9O,EAAApB,YAAA3B,QAAAyH,UAAAsK,sBACA,EACAF,EAAAvR,KAAAkB,IAAAD,UAAA,QAAA,KAAAiO,EAAA/L,KACAb,aAAA,OAAA,OACAG,EAAApB,YAAAkQ,GAGA/I,EAAAE,KAAAjG,GAGA,GAAA+N,EAAAvI,eAAAqI,MAAA5Q,QAAAK,OAAAH,EAAA0Q,MACA,IAAAnN,EAAA,EAAAA,EAAA+L,EAAA7L,UAQAmN,EAAAD,WAAApN,EAAAqN,EAAAL,MAAA9M,QARAF,IAAA,CAYA,IAAAV,EAUA,IAVAA,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAA0Q,MACAnN,EAAAqN,EAAAL,MAAA9M,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+L,EAAA7L,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAEAmO,EAAA,CACAc,EAAA7R,QAAAyH,UAAAqK,mBAAAtC,EAAA/L,IACAV,EAAApB,YAAAkQ,GACA9O,EAAApB,YAAA3B,QAAAyH,UAAAuK,4BACA,CACA,IAAAC,EAAA3R,KAAAkB,IAAAD,UAAA,SACA0Q,EAAArP,aAAA,OAAA,SACAG,EAAApB,YAAAsQ,GAEA,IAAAC,EAAA5R,KAAAkB,IAAAD,UAAA,UACA2Q,EAAAtP,aAAA,OAAA,eACAqP,EAAAtQ,YAAAuQ,GAEA,IAAAC,EAAA7R,KAAAkB,IAAAD,UAAA,QAAA,KAAA,KACA4Q,EAAAvP,aAAA,OAAA,OACAsP,EAAAvQ,YAAAwQ,IAEAN,EAAAvR,KAAAkB,IAAAD,UAAA,QAAA,KAAAiO,EAAA/L,KACAb,aAAA,OAAA,OACAG,EAAApB,YAAAkQ,GAGA/I,EAAAE,KAAAjG,IAKA,OAAA+F,GAMA9I,QAAAyH,UAAAiK,eAAA,SAAAvO,GAYA,OADAnD,QAAAyH,UAAAC,WAAA1H,QAAAV,IAAA8S,mBAAA,GAVA,SAAAjL,GACAA,KACA,GAAAhE,EAAAkP,gBAAAlL,GACAmL,cAAAC,iBAAAvS,QAAAV,IAAAkT,wBAAA5K,QAAA,KACAT,EAAAsL,eAAA,WAEAtP,EAAAuO,eAAAvK,MAKA,MAUAnH,QAAAyH,UAAAC,WAAA,SAAAgL,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,SAAAC,GAEA,GAAAA,EAAA,CAGA,GAFAA,EAAAA,EAAAnL,QAAA,aAAA,KAAAA,QAAA,SAAA,IAEA5H,QAAAgI,MAAAf,UAAAgB,UAAA8K,IAAAA,EAEA,YADA/S,QAAAyH,UAAAC,WAAAgL,EAAAK,EAAAH,GAAA,GAGAG,GAAA/S,QAAAV,IAAA+H,iBACA0L,GAAA/S,QAAAV,IAAAkS,eAEAuB,EAAA,MAGAH,EAAAG,IAGA,GAAAF,EACA,IAAAG,EAAA,MAAAhT,QAAAV,IAAA2T,aAAA,aAAAP,OAEAM,EAAAN,EAEAC,EACAL,cAAAC,iBAAAS,EAAA,QAAA,KAAAF,EAAA9S,QAAAV,IAAA4T,KAAA,KAAAP,GAEAL,cAAAC,iBAAAS,EAAA,QAAA,KAAAF,IC5OA9S,QAAAmT,aAAAlM,UAAAmM,YAAA,SAAAC,EAAApB,GACA,IAAAlP,EAAAyB,KAAA8O,aAAAD,GACA,IAAAtQ,EACA,KAAA,sDAEA/C,QAAAS,YAAAc,YACAvB,QAAAS,YAAAsG,uBACA/G,QAAAS,YAAA0B,eACA,IAAAoR,EAAAvT,QAAAS,YAAAyB,gBACAsR,EAAAlT,KAAAkB,IAAAiS,cAAA,OACAD,EAAA5Q,aAAA,QAAA,kBACA4Q,EAAApR,UAAA6P,EACAsB,EAAA5R,YAAA6R,GACAxT,QAAAS,YAAA4B,UAAA,UAAA,WACArC,QAAAS,YAAAoC,sBAAA2B,KAAAzB,IAIA/C,QAAAmT,aAAAlM,UAAAyM,UAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,aAAAF,EAAA,IAAAC,EAAA,WACApP,KAAAtB,MAAA,IACAsB,KAAAsP,iBACAtP,KAAAsP,gBAAAlR,aAAA,YAAAiR,GAEArP,KAAAuP,kBACAvP,KAAAuP,iBAAAnR,aAAA,YAAAiR,GAEArP,KAAAwP,aACAxP,KAAAwP,YAAAC,uBAAAN,EAAAC,EAAApP,KAAAtB,QAKAlD,QAAAmT,aAAAlM,UAAAiN,KAAA,SAAAP,EAAAC,EAAAhE,GACA,IAAAuE,EAAA3P,KAAAsM,QAAAsD,YAAAC,WACAjP,EAAAZ,KAAA8H,aACAgI,EAAA9P,KAAAH,eAAAkQ,iBACAD,EAAAX,EAAA,EACAW,EAAAV,EAAA,EAEAD,GADAW,EAAAA,EAAAE,gBAAAhQ,KAAAiQ,YAAAC,SAAAC,YACAhB,EACAC,EAAAU,EAAAV,EACA,IAAAgB,EAAApQ,KAAAiQ,YAEAI,EAAA,GAAAjF,EAAAuE,EAAA,EAAAA,EAEAW,EAAAtQ,KAAAtB,MAAA2R,EAMA,GALAC,EAAAtQ,KAAAsM,QAAAsD,YAAAW,SACAF,EAAArQ,KAAAsM,QAAAsD,YAAAW,SAAAvQ,KAAAtB,MACA4R,EAAAtQ,KAAAsM,QAAAsD,YAAAY,WACAH,EAAArQ,KAAAsM,QAAAsD,YAAAY,SAAAxQ,KAAAtB,OAEAsB,KAAAtB,OAAA4R,EAAA,CAGA,GAAAtQ,KAAAyQ,UAAA,CACA,IAAAC,EAAAN,EAAAF,SACAhB,UAAAC,GAAA,EAAAkB,GAAAjB,GAAA,EAAAiB,IACA3R,MAAA2R,GAEArQ,KAAA2Q,QAAAD,EAAAxJ,EAAAtG,EAAAgF,aACA5F,KAAA4Q,QAAAF,EAAAG,EAAAjQ,EAAAoF,YAEAhG,KAAA8Q,SAAAR,KChEAzV,YAAAkW,kBAAA,GAEAvV,QAAAwV,aAAAvO,UAAApD,SAAA,WACA,IAAAuB,EAAAZ,KAAA6F,WAAAiC,aACAlH,IAIAZ,KAAA6F,WAAAC,KACA9F,KAAA+H,MAAA/H,KAAAgI,aAAAxM,QAAA0J,UAAAC,mBACAvE,EAAAqH,iBAAAzM,QAAA0M,kBACAlI,KAAA+H,OAAAnH,EAAA4E,YACAxF,KAAA6F,WAAAsC,WACAnI,KAAA+H,OAAAnH,EAAAgF,iBAIA5F,KAAA+H,MAAAnH,EAAA2E,UAAA3E,EAAAgF,aACA5F,KAAAoI,OAAAvN,YAAAkW,kBAAA/Q,KAAAgI,aAAAxM,QAAA0J,UAAAC,mBAEAvE,EAAAqH,iBAAAzM,QAAA6M,mBACArI,KAAA+H,OAAAnH,EAAA4E,cAGAxF,KAAAsI,KAAA1H,EAAAqF,WAAArF,EAAAoF,YACAhG,KAAAiR,QAAApW,YAAAkW,kBAAA/Q,KAAAyI,QACA7H,EAAAqH,iBAAAzM,QAAAkN,oBACA1I,KAAAsI,MAAA1H,EAAA+H,cAEA3I,KAAA4I,UAAAxK,aAAA,YACA,aAAA4B,KAAA+H,MAAA,IAAA/H,KAAAsI,KAAA,WAAAzN,YAAAkW,kBAAA,OC9BAlW,YAAAC,IAAAoW,MAEArW,YAAAC,IAAAoW,GAAAC,uBAAA,UACAtW,YAAAC,IAAAoW,GAAAE,qBAAA5V,QAAAV,IAAAqW,uBAEAtW,YAAAC,IAAAoW,GAAAG,yBAAA,oBACAxW,YAAAC,IAAAoW,GAAAI,sCAAA,uBACAzW,YAAAC,IAAAoW,GAAAK,oCAAA,GACA1W,YAAAC,IAAAoW,GAAAM,6BAAA,4BACA3W,YAAAC,IAAAoW,GAAAO,2BAAA,OACA5W,YAAAC,IAAAoW,GAAAQ,+BAAA,IACA7W,YAAAC,IAAAoW,GAAAS,6BAAA,YACA9W,YAAAC,IAAAoW,GAAAU,+BAAA,GACA/W,YAAAC,IAAAoW,GAAAW,0BAAA,GACAhX,YAAAC,IAAAoW,GAAAY,SAAA,cACAjX,YAAAC,IAAAoW,GAAAa,YAAA,OACAlX,YAAAC,IAAAoW,GAAAc,UAAA,sBACAnX,YAAAC,IAAAoW,GAAAe,eAAA,gBACApX,YAAAC,IAAAoW,GAAAgB,YAAA,gBACArX,YAAAC,IAAAoW,GAAAiB,YAAA,KAEAtX,YAAAC,IAAAoW,GAAAkB,iBAAA,mBACAvX,YAAAC,IAAAoW,GAAAmB,mBAAA,+DACAxX,YAAAC,IAAAoW,GAAAoB,uBAAA,aACAzX,YAAAC,IAAAoW,GAAAqB,yBAAA,0DAEA1X,YAAAC,IAAAoW,GAAAsB,iBAAA,oCACA3X,YAAAC,IAAAoW,GAAAuB,qBAAA,kCACA5X,YAAAC,IAAAoW,GAAAwB,sBAAA,mBACA7X,YAAAC,IAAAoW,GAAAyB,yBAAA,4BACA9X,YAAAC,IAAAoW,GAAA0B,2BAAA,eACA/X,YAAAC,IAAAoW,GAAA2B,oBAAA,YACAhY,YAAAC,IAAAoW,GAAA4B,2BAAA,uBACAjY,YAAAC,IAAAoW,GAAA6B,qBAAA,aACAlY,YAAAC,IAAAoW,GAAA8B,uBAAA,oBACAnY,YAAAC,IAAAoW,GAAA+B,uBAAA,eACApY,YAAAC,IAAAoW,GAAAgC,uBAAA,SACArY,YAAAC,IAAAoW,GAAAiC,iBAAA,mCACAtY,YAAAC,IAAAoW,GAAAkC,qBAAA,wBACAvY,YAAAC,IAAAoW,GAAAmC,yBAAA,4CAEAxY,YAAAC,IAAAoW,GAAAoC,UAAA,yCACAzY,YAAAC,IAAAoW,GAAAqC,kBAAA,yDACA1Y,YAAAC,IAAAoW,GAAAsC,eAAA,mCACA3Y,YAAAC,IAAAoW,GAAAuC,uBAAA,2DACA5Y,YAAAC,IAAAoW,GAAAwC,eAAA,gBACA7Y,YAAAC,IAAAoW,GAAAyC,uBAAA,8CACA9Y,YAAAC,IAAAoW,GAAA0C,WAAA,mBACA/Y,YAAAC,IAAAoW,GAAA2C,mBAAA,0CACAhZ,YAAAC,IAAAoW,GAAA4C,WAAA,cACAjZ,YAAAC,IAAAoW,GAAA6C,mBAAA,qCACAlZ,YAAAC,IAAAoW,GAAA8C,WAAA,cACAnZ,YAAAC,IAAAoW,GAAA+C,mBAAA,qCAEApZ,YAAAC,IAAAoW,GAAAgD,iCAAA,oFAEArZ,YAAAC,IAAAoW,GAAAiD,6BAAA,wCACAtZ,YAAAC,IAAAoW,GAAAkD,sBAAA,mBACAvZ,YAAAC,IAAAoW,GAAAmD,sBAAA,+CAEAxZ,YAAAC,IAAAoW,GAAAzC,aAAA,yGC5DA5T,YAAAC,IAAAoW,MAEArW,YAAAC,IAAAoW,GAAAC,uBAAA,UACAtW,YAAAC,IAAAoW,GAAAE,qBAAA5V,QAAAV,IAAAqW,uBAEAtW,YAAAC,IAAAoW,GAAAG,yBAAA,mBACAxW,YAAAC,IAAAoW,GAAAI,sCAAA,sBACAzW,YAAAC,IAAAoW,GAAAK,oCAAA,GACA1W,YAAAC,IAAAoW,GAAAM,6BAAA,wBACA3W,YAAAC,IAAAoW,GAAAO,2BAAA,OACA5W,YAAAC,IAAAoW,GAAAQ,+BAAA,IACA7W,YAAAC,IAAAoW,GAAAS,6BAAA,YACA9W,YAAAC,IAAAoW,GAAAU,+BAAA,GACA/W,YAAAC,IAAAoW,GAAAW,0BAAA,GACAhX,YAAAC,IAAAoW,GAAAY,SAAA,cACAjX,YAAAC,IAAAoW,GAAAa,YAAA,OACAlX,YAAAC,IAAAoW,GAAAc,UAAA,sBACAnX,YAAAC,IAAAoW,GAAAe,eAAA,gBACApX,YAAAC,IAAAoW,GAAAgB,YAAA,gBACArX,YAAAC,IAAAoW,GAAAiB,YAAA,KAEAtX,YAAAC,IAAAoW,GAAAkB,iBAAA,gBACAvX,YAAAC,IAAAoW,GAAAmB,mBAAA,+DACAxX,YAAAC,IAAAoW,GAAAoB,uBAAA,WACAzX,YAAAC,IAAAoW,GAAAqB,yBAAA,0DAEA1X,YAAAC,IAAAoW,GAAAsB,iBAAA,oCACA3X,YAAAC,IAAAoW,GAAAuB,qBAAA,kCACA5X,YAAAC,IAAAoW,GAAAwB,sBAAA,mBACA7X,YAAAC,IAAAoW,GAAAyB,yBAAA,4BACA9X,YAAAC,IAAAoW,GAAA0B,2BAAA,eACA/X,YAAAC,IAAAoW,GAAA2B,oBAAA,YACAhY,YAAAC,IAAAoW,GAAA4B,2BAAA,uBACAjY,YAAAC,IAAAoW,GAAA6B,qBAAA,aACAlY,YAAAC,IAAAoW,GAAA8B,uBAAA,oBACAnY,YAAAC,IAAAoW,GAAA+B,uBAAA,eACApY,YAAAC,IAAAoW,GAAAgC,uBAAA,SACArY,YAAAC,IAAAoW,GAAAiC,iBAAA,mCACAtY,YAAAC,IAAAoW,GAAAkC,qBAAA,wBACAvY,YAAAC,IAAAoW,GAAAmC,yBAAA,4CAEAxY,YAAAC,IAAAoW,GAAAoC,UAAA,yCACAzY,YAAAC,IAAAoW,GAAAqC,kBAAA,yDACA1Y,YAAAC,IAAAoW,GAAAsC,eAAA,mCACA3Y,YAAAC,IAAAoW,GAAAuC,uBAAA,2DACA5Y,YAAAC,IAAAoW,GAAAwC,eAAA,gBACA7Y,YAAAC,IAAAoW,GAAAyC,uBAAA,8CACA9Y,YAAAC,IAAAoW,GAAA0C,WAAA,mBACA/Y,YAAAC,IAAAoW,GAAA2C,mBAAA,0CACAhZ,YAAAC,IAAAoW,GAAA4C,WAAA,cACAjZ,YAAAC,IAAAoW,GAAA6C,mBAAA,qCACAlZ,YAAAC,IAAAoW,GAAA8C,WAAA,cACAnZ,YAAAC,IAAAoW,GAAA+C,mBAAA,qCAEApZ,YAAAC,IAAAoW,GAAAgD,iCAAA,uDAEArZ,YAAAC,IAAAoW,GAAAiD,6BAAA,wCACAtZ,YAAAC,IAAAoW,GAAAkD,sBAAA,mBACAvZ,YAAAC,IAAAoW,GAAAmD,sBAAA,+CAEAxZ,YAAAC,IAAAoW,GAAAzC,aAAA,4HC5DA5T,YAAAC,IAAAwZ,MAEAzZ,YAAAC,IAAAwZ,GAAAnD,uBAAA,WACAtW,YAAAC,IAAAwZ,GAAAlD,qBAAA5V,QAAAV,IAAAqW,uBAEAtW,YAAAC,IAAAwZ,GAAAjD,yBAAA,oBACAxW,YAAAC,IAAAwZ,GAAAhD,sCAAA,uBACAzW,YAAAC,IAAAwZ,GAAA/C,oCAAA,GACA1W,YAAAC,IAAAwZ,GAAA9C,6BAAA,wBACA3W,YAAAC,IAAAwZ,GAAA7C,2BAAA,QACA5W,YAAAC,IAAAwZ,GAAA5C,+BAAA,IACA7W,YAAAC,IAAAwZ,GAAA3C,6BAAA,cACA9W,YAAAC,IAAAwZ,GAAA1C,+BAAA,GACA/W,YAAAC,IAAAwZ,GAAAzC,0BAAA,GACAhX,YAAAC,IAAAwZ,GAAAxC,SAAA,qBACAjX,YAAAC,IAAAwZ,GAAAvC,YAAA,KACAlX,YAAAC,IAAAwZ,GAAAtC,UAAA,uBACAnX,YAAAC,IAAAwZ,GAAArC,eAAA,qBACApX,YAAAC,IAAAwZ,GAAApC,YAAA,kBACArX,YAAAC,IAAAwZ,GAAAnC,YAAA,IAEAtX,YAAAC,IAAAwZ,GAAAlC,iBAAA,oBACAvX,YAAAC,IAAAwZ,GAAAjC,mBAAA,0EACAxX,YAAAC,IAAAwZ,GAAAhC,uBAAA,cACAzX,YAAAC,IAAAwZ,GAAA/B,yBAAA,gEAEA1X,YAAAC,IAAAwZ,GAAAC,gBAAA,UACA1Z,YAAAC,IAAAwZ,GAAAE,kBAAA,gDACA3Z,YAAAC,IAAAwZ,GAAAG,kBAAA,gDAEA5Z,YAAAC,IAAAwZ,GAAA3J,qBAAA,wCACA9P,YAAAC,IAAAwZ,GAAAxJ,kBAAA,4CACAjQ,YAAAC,IAAAwZ,GAAA7I,gBAAA,8CACA5Q,YAAAC,IAAAwZ,GAAA9I,eAAA,uDAEA3Q,YAAAC,IAAAwZ,GAAA9B,iBAAA,uCACA3X,YAAAC,IAAAwZ,GAAA7B,qBAAA,sCACA5X,YAAAC,IAAAwZ,GAAAI,4BAAA,uEACA7Z,YAAAC,IAAAwZ,GAAA5B,sBAAA,YACA7X,YAAAC,IAAAwZ,GAAA3B,yBAAA,kCACA9X,YAAAC,IAAAwZ,GAAA1B,2BAAA,eACA/X,YAAAC,IAAAwZ,GAAAzB,oBAAA,gBACAhY,YAAAC,IAAAwZ,GAAAxB,2BAAA,0BACAjY,YAAAC,IAAAwZ,GAAAvB,qBAAA,WACAlY,YAAAC,IAAAwZ,GAAAtB,uBAAA,yBACAnY,YAAAC,IAAAwZ,GAAArB,uBAAA,mBACApY,YAAAC,IAAAwZ,GAAApB,uBAAA,WACArY,YAAAC,IAAAwZ,GAAAnB,iBAAA,gDACAtY,YAAAC,IAAAwZ,GAAAlB,qBAAA,kCACAvY,YAAAC,IAAAwZ,GAAAjB,yBAAA,mDAEAxY,YAAAC,IAAAwZ,GAAAhB,UAAA,uCACAzY,YAAAC,IAAAwZ,GAAAf,kBAAA,8DACA1Y,YAAAC,IAAAwZ,GAAAd,eAAA,yCACA3Y,YAAAC,IAAAwZ,GAAAb,uBAAA,qEACA5Y,YAAAC,IAAAwZ,GAAAZ,eAAA,iBACA7Y,YAAAC,IAAAwZ,GAAAX,uBAAA,qDACA9Y,YAAAC,IAAAwZ,GAAAV,WAAA,mBACA/Y,YAAAC,IAAAwZ,GAAAT,mBAAA,iDACAhZ,YAAAC,IAAAwZ,GAAAR,WAAA,mBACAjZ,YAAAC,IAAAwZ,GAAAP,mBAAA,iDACAlZ,YAAAC,IAAAwZ,GAAAN,WAAA,iBACAnZ,YAAAC,IAAAwZ,GAAAL,mBAAA,+CAEApZ,YAAAC,IAAAwZ,GAAAJ,iCAAA,gFAEArZ,YAAAC,IAAAwZ,GAAAH,6BAAA,kDACAtZ,YAAAC,IAAAwZ,GAAAF,sBAAA,oBACAvZ,YAAAC,IAAAwZ,GAAAD,sBAAA,mDAEAxZ,YAAAC,IAAAwZ,GAAA7F,aAAA,yIAEA5T,YAAAC,IAAAwZ,GAAAK,eAAA,wEACA9Z,YAAAC,IAAAwZ,GAAAM,uBAAA,6GACA/Z,YAAAC,IAAAwZ,GAAAO,cAAA,4BACAha,YAAAC,IAAAwZ,GAAAQ,sBAAA,mEACAja,YAAAC,IAAAwZ,GAAAS,cAAA,aACAla,YAAAC,IAAAwZ,GAAAU,sBAAA,+DAEAna,YAAAC,IAAAwZ,GAAAW,eAAA,8EACApa,YAAAC,IAAAwZ,GAAAY,uBAAA,4HACAra,YAAAC,IAAAwZ,GAAAa,cAAA,gCACAta,YAAAC,IAAAwZ,GAAAQ,sBAAA,yEACAja,YAAAC,IAAAwZ,GAAAc,cAAA,iBACAva,YAAAC,IAAAwZ,GAAAe,sBAAA,qEAEAxa,YAAAC,IAAAwZ,GAAAgB,gBAAA,SACAza,YAAAC,IAAAwZ,GAAAiB,eAAA,gDACA1a,YAAAC,IAAAwZ,GAAAkB,qBAAA,uDCxFA3a,YAAAC,IAAA2a,MAEA5a,YAAAC,IAAA2a,GAAAtE,uBAAA,UACAtW,YAAAC,IAAA2a,GAAArE,qBAAA5V,QAAAV,IAAAqW,uBAEAtW,YAAAC,IAAA2a,GAAApE,yBAAA,oBACAxW,YAAAC,IAAA2a,GAAAnE,sCAAA,wBACAzW,YAAAC,IAAA2a,GAAAlE,oCAAA,GACA1W,YAAAC,IAAA2a,GAAAjE,6BAAA,0BACA3W,YAAAC,IAAA2a,GAAAhE,2BAAA,MACA5W,YAAAC,IAAA2a,GAAA/D,+BAAA,IACA7W,YAAAC,IAAA2a,GAAA9D,6BAAA,aACA9W,YAAAC,IAAA2a,GAAA7D,+BAAA,GACA/W,YAAAC,IAAA2a,GAAA5D,0BAAA,GACAhX,YAAAC,IAAA2a,GAAA3D,SAAA,mBACAjX,YAAAC,IAAA2a,GAAA1D,YAAA,KACAlX,YAAAC,IAAA2a,GAAAzD,UAAA,oBACAnX,YAAAC,IAAA2a,GAAAxD,eAAA,kBACApX,YAAAC,IAAA2a,GAAAvD,YAAA,kBACArX,YAAAC,IAAA2a,GAAAtD,YAAA,IAEAtX,YAAAC,IAAA2a,GAAArD,iBAAA,uBACAvX,YAAAC,IAAA2a,GAAApD,mBAAA,4FACAxX,YAAAC,IAAA2a,GAAAnD,uBAAA,cACAzX,YAAAC,IAAA2a,GAAAlD,yBAAA,sFAEA1X,YAAAC,IAAA2a,GAAAlB,gBAAA,UACA1Z,YAAAC,IAAA2a,GAAAjB,kBAAA,8CACA3Z,YAAAC,IAAA2a,GAAAhB,kBAAA,+CAEA5Z,YAAAC,IAAA2a,GAAA9K,qBAAA,0CACA9P,YAAAC,IAAA2a,GAAA3K,kBAAA,+CACAjQ,YAAAC,IAAA2a,GAAAhK,gBAAA,+CACA5Q,YAAAC,IAAA2a,GAAAjK,eAAA,yDAEA3Q,YAAAC,IAAA2a,GAAAjD,iBAAA,qCACA3X,YAAAC,IAAA2a,GAAAhD,qBAAA,qCACA5X,YAAAC,IAAA2a,GAAAf,4BAAA,qEACA7Z,YAAAC,IAAA2a,GAAA/C,sBAAA,WACA7X,YAAAC,IAAA2a,GAAA9C,yBAAA,2BACA9X,YAAAC,IAAA2a,GAAA7C,2BAAA,aACA/X,YAAAC,IAAA2a,GAAA5C,oBAAA,oBACAhY,YAAAC,IAAA2a,GAAA3C,2BAAA,iCACAjY,YAAAC,IAAA2a,GAAA1C,qBAAA,WACAlY,YAAAC,IAAA2a,GAAAzC,uBAAA,wBACAnY,YAAAC,IAAA2a,GAAAxC,uBAAA,sBACApY,YAAAC,IAAA2a,GAAAvC,uBAAA,UACArY,YAAAC,IAAA2a,GAAAtC,iBAAA,uCACAtY,YAAAC,IAAA2a,GAAArC,qBAAA,8BACAvY,YAAAC,IAAA2a,GAAApC,yBAAA,gDAEAxY,YAAAC,IAAA2a,GAAAnC,UAAA,oCACAzY,YAAAC,IAAA2a,GAAAlC,kBAAA,+DACA1Y,YAAAC,IAAA2a,GAAAjC,eAAA,0CACA3Y,YAAAC,IAAA2a,GAAAhC,uBAAA,qEACA5Y,YAAAC,IAAA2a,GAAA/B,eAAA,iBACA7Y,YAAAC,IAAA2a,GAAA9B,uBAAA,oDACA9Y,YAAAC,IAAA2a,GAAA7B,WAAA,oBACA/Y,YAAAC,IAAA2a,GAAA5B,mBAAA,8CACAhZ,YAAAC,IAAA2a,GAAA3B,WAAA,cACAjZ,YAAAC,IAAA2a,GAAA1B,mBAAA,wCACAlZ,YAAAC,IAAA2a,GAAAzB,WAAA,iBACAnZ,YAAAC,IAAA2a,GAAAxB,mBAAA,2CAEApZ,YAAAC,IAAA2a,GAAAvB,iCAAA,4EAEArZ,YAAAC,IAAA2a,GAAAtB,6BAAA,+CACAtZ,YAAAC,IAAA2a,GAAArB,sBAAA,qBACAvZ,YAAAC,IAAA2a,GAAApB,sBAAA,iDAEAxZ,YAAAC,IAAA2a,GAAAhH,aAAA,8IAEA5T,YAAAC,IAAA2a,GAAAd,eAAA,0EACA9Z,YAAAC,IAAA2a,GAAAb,uBAAA,kHACA/Z,YAAAC,IAAA2a,GAAAZ,cAAA,6BACAha,YAAAC,IAAA2a,GAAAX,sBAAA,8DACAja,YAAAC,IAAA2a,GAAAV,cAAA,cACAla,YAAAC,IAAA2a,GAAAT,sBAAA,mEAEAna,YAAAC,IAAA2a,GAAAR,eAAA,oFACApa,YAAAC,IAAA2a,GAAAP,uBAAA,8HACAra,YAAAC,IAAA2a,GAAAN,cAAA,kCACAta,YAAAC,IAAA2a,GAAAX,sBAAA,uEACAja,YAAAC,IAAA2a,GAAAL,cAAA,mBACAva,YAAAC,IAAA2a,GAAAJ,sBAAA,4EAEAxa,YAAAC,IAAA2a,GAAAH,gBAAA,UACAza,YAAAC,IAAA2a,GAAAF,eAAA,uCACA1a,YAAAC,IAAA2a,GAAAD,qBAAA,iDCvFA3a,YAAA6a,aAAA,WACA,IAAA,IAAAna,KAAAV,YAAAC,IAAAD,YAAAG,kBACA,IAAAQ,QAAAV,IAAAS,KACAC,QAAAV,IAAAS,GAAAV,YAAAC,IAAAD,YAAAG,aAAAO,KAIAV,YAAA6a,eCRAla,QAAAK,OAAA8Z,SAEAna,QAAAK,OAAA8Z,MAAAC,IAAA,EAGApa,QAAAK,OAAA,UACAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA8V,iBAAA,QACA9V,KAAA8V,iBAAA,QACAC,SAAA,QACAC,YAAAxa,QAAAV,IAAAiX,aACA/R,KAAAiW,iBAAA,GACAjW,KAAAkW,WAAA,KAMA1a,QAAAK,OAAA,kBACAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA8V,iBAAA,QAEAE,YAAAhW,KAAAmW,WAAA,IACAH,YAAA,IAAAxa,QAAA4a,eACA5a,QAAAV,IAAA2W,4BACA,QACAuE,YAAAhW,KAAAmW,WAAA,IACAJ,SAAA,QACAC,YAAAxa,QAAAV,IAAAiX,aACA/R,KAAAiW,iBAAA,GACAjW,KAAAkW,WAAA,IAUAC,UAAA,SAAAE,GACA,GAAAA,GAAArW,KAAA8F,IACA,IAAAwQ,EAAA,kYAEAA,EAAA,qWAEA,OAAA,IAAA9a,QAAA+a,WAAAD,EAAA,GAAA,GAAA,OAIA9a,QAAAK,OAAA,kBACAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA8V,iBAAA,QACAE,YAAAxa,QAAAV,IAAAmX,gBACA+D,YAAAhW,KAAAmW,WAAA,IACAH,YAAA,IAAAxa,QAAA4a,eACA5a,QAAAV,IAAA2W,4BACA,QACAuE,YAAAhW,KAAAmW,WAAA,IACAJ,SAAA,QACAC,YAAAxa,QAAAV,IAAAoX,aACAlS,KAAA8V,iBAAA,OACAE,YAAAxa,QAAAV,IAAAqX,aACAnS,KAAAiW,iBAAA,GACAjW,KAAAwW,sBAAA,GACAxW,KAAAyW,kBAAA,KAGAjb,QAAAK,OAAA,iBAAAsa,UAAA3a,QAAAK,OAAA,iBAAAsa,UAEA3a,QAAAK,OAAA,WACAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA8V,iBAAA,QACAC,SAAA,QACAC,YAAAxa,QAAAV,IAAAkX,WACAhS,KAAAiW,iBAAA,GACAjW,KAAAkW,WAAA,EAAA,WAMA1a,QAAAK,OAAA,6BAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAAwW,uCACAtR,KAAA2W,qBAAA,SACA3W,KAAA4W,WAAApb,QAAAV,IAAAyW,qCACAvR,KAAA6W,aAAA,IAIArb,QAAAK,OAAA,wBAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA6W,8BACA3R,KAAAwW,sBAAA,GACAxW,KAAAyW,kBAAA,GACAzW,KAAA4W,WAAApb,QAAAV,IAAA8W,gCACA5R,KAAA6W,aAAA,IAGArb,QAAAK,OAAA,mBAKAga,KAAA,WACA7V,KAAAiW,iBAAA,GACAjW,KAAAnC,UAAArC,QAAAK,OAAA8Z,MAAAC,KACA5V,KAAA8W,WAAA,EACA9W,KAAA+W,eACA/W,KAAAkW,WAAA,EAAA,QACAlW,KAAAgX,WAAA,IAAAxb,QAAAyb,SAAA,4BACAjX,KAAA4W,WAAApb,QAAAV,IAAA+W,4BAOAqF,cAAA,SAAAvY,GACA,IAAAwY,EAAAla,SAAAgS,cAAA,YAEA,OADAkI,EAAA/Y,aAAA,QAAA4B,KAAA8W,YACAK,GAOAC,cAAA,SAAAC,GACArX,KAAA8W,WAAAQ,SAAAD,EAAAE,aAAA,SAAA,IACAvX,KAAA+W,gBAOAA,aAAA,WAEA/W,KAAAwX,SAAA,UACAxX,KAAAyX,YAAA,SAEA,IAAA,IAAAxY,EAAA,EAAAe,KAAAwX,SAAA,QAAAvY,GAAAA,IAEAe,KAAAyX,YAAA,QAAAxY,GAGA,GAAA,GAAAe,KAAA8W,WACA9W,KAAA0W,iBAAA,SACAV,YAAAxa,QAAAV,IAAAuW,8BACA,CACArR,KAAA0W,iBAAA,SACAV,YAAAxa,QAAAV,IAAA0W,8BACA,IAAAvS,EAAA,EAAAA,EAAAe,KAAA8W,WAAA7X,IACAe,KAAA8V,iBAAA,QAAA7W,GACA8W,SAAA,MACA2B,SAAAlc,QAAAmc,aACA3B,YACA,IAAAxa,QAAA4a,eACA5a,QAAAV,IAAA2W,4BACA,MAAAxS,GACA+W,YAAAxa,QAAAV,IAAA4W,kCAUAkG,UAAA,SAAAjZ,GACA,IAAAkZ,EACArc,QAAAsc,MAAAC,OAAApZ,EAAA,+BACAkZ,EAAAG,UAEA,IADA,IAAAC,EAAAJ,EAAAL,SAAA,SAAAS,WACA9I,EAAA,EAAAA,EAAAnP,KAAA8W,WAAA3H,IAAA,CACA,IAAA+I,EAAA1c,QAAAsc,MAAAC,OAAApZ,EAAA,0BACAuZ,EAAAF,UACAC,EAAAE,QAAAD,EAAAE,oBACAH,EAAAC,EAAAG,eAEA,OAAAR,GAOAS,QAAA,SAAAT,GAKA,IAJA,IAAAK,EAAAL,EAAAU,oBAAA,SAEAC,KACAvZ,EAAA,EACAiZ,GACAM,EAAAvZ,GAAAiZ,EAAAO,iBACAP,EAAAA,EAAAG,gBACAH,EAAAG,eAAAK,cACAzZ,IAEAe,KAAA8W,WAAA7X,EACAe,KAAA+W,eAEA,IAAA9X,EAAA,EAAAA,EAAAe,KAAA8W,WAAA7X,IACAuZ,EAAAvZ,IACAe,KAAAwX,SAAA,QAAAvY,GAAAgZ,WAAAE,QAAAK,EAAAvZ,KASA0Z,gBAAA,SAAAd,GAIA,IAFA,IAAAK,EAAAL,EAAAU,oBAAA,SACApJ,EAAA,EACA+I,GAAA,CACA,IAAAU,EAAA5Y,KAAAwX,SAAA,QAAArI,GACA+I,EAAAO,iBAAAG,GAAAA,EAAAX,WAAAY,iBACA1J,IACA+I,EAAAA,EAAAG,gBACAH,EAAAG,eAAAK,iBC1OAld,QAAAK,OAAAid,UAEAtd,QAAAK,OAAAid,OAAAlD,IAAA,IAGApa,QAAAK,OAAA,WAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAAwY,WACAtT,KAAAkW,WAAA,EAAA,UACAlW,KAAA4W,WAAApb,QAAAV,IAAAyY,mBACAvT,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,0BAKAxd,QAAAK,OAAA,gBAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA4Y,gBACA1T,KAAAkW,WAAA,EAAA,UACAlW,KAAA4W,WAAApb,QAAAV,IAAA6Y,wBACA3T,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,0BAKAxd,QAAAK,OAAA,YAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA8Y,YACA5T,KAAAkW,WAAA,EAAA,UACAlW,KAAA4W,WAAApb,QAAAV,IAAA+Y,oBACA7T,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,0BAKAxd,QAAAK,OAAA,YAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAAgZ,YACA9T,KAAAkW,WAAA,EAAA,UACAlW,KAAA4W,WAAApb,QAAAV,IAAAiZ,oBACA/T,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,0BAKAxd,QAAAK,OAAA,YAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAAkZ,YACAhU,KAAAkW,WAAA,EAAA,UACAlW,KAAA4W,WAAApb,QAAAV,IAAAmZ,oBACAjU,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,0BAKAxd,QAAAK,OAAA,gBAEAga,KAAA,WACA7V,KAAAnC,UAAArC,QAAAK,OAAAid,OAAAlD,KACA5V,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA0Y,gBACAxT,KAAAkW,WAAA,EAAA,SACAlW,KAAA4W,WAAApb,QAAAV,IAAA2Y,wBACAzT,KAAA+Y,gBACA/Y,KAAA+Y,eAAAvd,QAAAwd,+BCpFA,IAAAxd,QAAAK,OAAAod,QACAzd,QAAAK,OAAAod,UAGAzd,QAAAK,OAAAod,MAAArD,IAAA,IAEApa,QAAAK,OAAA,cAKAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAA0X,iBACA4G,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA,UAGAjO,KAAA,cACA1H,KAAA,OACA4V,MAAA,WAGAC,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAod,MAAArD,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAA2X,qBAAArP,QAAA,KACA6W,EAAAC,cAAA,YAMArf,YAAAE,eAAA,eAAAS,QAAAK,OAAA,eACAL,QAAAK,OAAA,gBAKAga,KAAA,WACA,IAAAsE,IACA3e,QAAAV,IAAAsf,oBAAA,QACA5e,QAAAV,IAAAoY,uBAAA,WACAlT,KAAAqa,gBACA7e,QAAAV,IAAA8X,2BAAA,eACApX,QAAAV,IAAA6X,yBAAA,aACAnX,QAAAV,IAAA4X,sBAAA,UACAlX,QAAAV,IAAAiY,qBAAA,SACAvX,QAAAV,IAAAkY,uBAAA,WACAhT,KAAAsa,WAAA9e,QAAAV,IAAAyf,yBACAva,KAAAnC,UAAArC,QAAAK,OAAAod,MAAArD,KACA5V,KAAA8V,iBAAA,QACAC,SAAA,SACAC,YAAAxa,QAAAV,IAAA0f,+BACAxa,KAAA0W,iBAAA,MACA1W,KAAA0W,iBAAA,aACAV,YAAA,IAAAxa,QAAAif,cAAAN,GAAA,QACAna,KAAA8V,iBAAA,MACA9V,KAAAiW,iBAAA,GACAjW,KAAAwW,sBAAA,GACAxW,KAAAyW,kBAAA,GACAzW,KAAA4W,WAAApb,QAAAV,IAAA4f,yBACA1a,KAAA2a,WAAA,GAEA,IAAAV,EAAAja,KACAA,KAAA4W,WAAA,WACA,IAAAgE,EAAAX,EAAAC,cAAA,QACAW,EAAAZ,EAAAC,cAAA,SACAY,EAAA,GACA,OAAAF,EAAA,IAAAC,GACA,IAAA,iBACA,IAAA,eACAC,EAAAtf,QAAAV,IAAAigB,iCACA,MACA,IAAA,YACAD,EAAAtf,QAAAV,IAAAkgB,kCACA,MACA,IAAA,WACAF,EAAAtf,QAAAV,IAAAmgB,iCACA,MACA,IAAA,aACAH,EAAAtf,QAAAV,IAAAogB,mCACA,MACA,IAAA,oBACA,IAAA,kBACAJ,EAAAtf,QAAAV,IAAAqgB,oCACA,MACA,IAAA,eACAL,EAAAtf,QAAAV,IAAAsgB,qCACA,MACA,IAAA,cACAN,EAAAtf,QAAAV,IAAAugB,oCACA,MACA,IAAA,gBACAP,EAAAtf,QAAAV,IAAAwgB,sCAQA,MALA,cAAAT,GAAA,YAAAA,IACAC,GAAA,KAAAtf,QAAAV,IAAAygB,+BACAnY,QAAA,KACA6W,EAAAtb,UAAA2N,QAAAkP,cAAA,KAAA,OAEAV,KAQA5D,cAAA,WACA,IAAAC,EAAAla,SAAAgS,cAAA,YACAwM,EAAAzb,KAAAwX,SAAA,MAAApM,MAAA5P,QAAAkgB,YAEA,OADAvE,EAAA/Y,aAAA,KAAAqd,GACAtE,GAOAC,cAAA,SAAAC,GAGA,IAAAoE,EAAA,SAAApE,EAAAE,aAAA,MACAvX,KAAA2a,UAAAc,IAQAd,UAAA,SAAAc,GAEAzb,KAAAyX,YAAA,MACAzX,KAAAyX,YAAA,WAAA,GAEAgE,GACAzb,KAAA8V,iBAAA,MAAAC,SAAA,UACAva,QAAAV,IAAA6gB,uBACA3b,KAAA0W,iBAAA,WACAV,YAAAxa,QAAAV,IAAA6gB,wBAGA3b,KAAA0W,iBAAA,MAEA,IAAAkF,EAAA,IAAApgB,QAAAif,cAAAza,KAAAqa,cAAA,SAAA5M,GACA,IAAAoO,EAAA,cAAApO,GAAA,YAAAA,EAEA,GAAAoO,GAAAJ,EAAA,CACA,IAAAld,EAAAyB,KAAA4C,aAIA,OAHArE,EAAAoc,UAAAkB,GAEAtd,EAAAud,cAAArO,EAAA,SACA,QAIAzN,KAAA+b,gBAAA,KAAA,aACA/b,KAAAwX,SAAA,YACAxX,KAAA+b,gBAAA,UAAA,MAGA/b,KAAAwX,SAAA,MAAAxB,YAAA4F,EAAA,WAIApgB,QAAAK,OAAA,kBAKAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAsY,qBACAgG,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA,UAGAE,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAod,MAAArD,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAuY,yBAAAjQ,QAAA,KACA6W,EAAAC,cAAA,YC1MArf,YAAAE,eAAA,cAAAS,QAAAK,OAAA,cAGAL,QAAAK,OAAA,eAKAga,KAAA,WACA,IAgBAmG,EAAAhc,KAAA8F,MAfA,KAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,UAGA,KAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QAGA9F,KAAAsa,WAAA9e,QAAAV,IAAAmhB,uBACAjc,KAAAnC,UAAArC,QAAAK,OAAAqgB,MAAAtG,KACA5V,KAAAkW,WAAA,EAAA,WACAlW,KAAA8V,iBAAA,KACA9V,KAAA8V,iBAAA,KACAE,YAAA,IAAAxa,QAAAif,cAAAuB,GAAA,MACAhc,KAAAiW,iBAAA,GAEA,IAAAgE,EAAAja,KACAA,KAAA4W,WAAA,WACA,IAAAuF,EAAAlC,EAAAC,cAAA,MASA,OAPAkC,GAAA5gB,QAAAV,IAAAuhB,yBACAC,IAAA9gB,QAAAV,IAAAyhB,0BACAC,GAAAhhB,QAAAV,IAAA2hB,yBACAC,IAAAlhB,QAAAV,IAAA6hB,0BACAC,GAAAphB,QAAAV,IAAA+hB,yBACAC,IAAAthB,QAAAV,IAAAiiB,2BAEAZ,KAEAnc,KAAAgd,aAAA,KAAA,OAQAC,SAAA,SAAA/V,GACA,IAAAgW,EAAAld,KAAAuY,oBAAA,KACA4E,EAAAnd,KAAAuY,oBAAA,KAEA,GAAA2E,GAAAC,IACAD,EAAAE,iBAAAC,WAAAF,EAAAC,kBAAA,CAGA5hB,QAAA8hB,OAAAC,SAAArW,EAAAsW,OACA,IAAA,IAAAve,EAAA,EAAAA,EAAAe,KAAAgd,YAAA7d,OAAAF,IAAA,CACA,IAAAV,EAAAyB,KAAAgd,YAAA/d,GACAV,IAAA2e,GAAA3e,IAAA4e,IACA5e,EAAAkf,SACAlf,EAAAmf,mBAGAliB,QAAA8hB,OAAAC,UAAA,GAEAvd,KAAAgd,YAAA,GAAAE,EACAld,KAAAgd,YAAA,GAAAG,IhB1EA3hB,QAAAK,OAAA,yBACAL,QAAAK,OAAA,uBAAAga,KAAA,WACA,IAAAzR,EAAA,IAAA5I,QAAA4a,eAAA,GACA5a,QAAAqI,WAAA8Z,QACAvZ,EAAAwZ,eAAA,GACA5d,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA+iB,8BACA7H,YAAA5R,EAAA,QACA4R,YAAA,GAAA,UACAhW,KAAAgX,WAAA,IAAAxb,QAAAyb,SAAA,4BACAjX,KAAArB,UAAA2N,QAAAwR,UACA9d,KAAArB,UAAA2N,QAAAyR,iBACA/d,KAAArB,UAAA2N,QAAAyR,gBAAAzR,QAAAwR,WACAtiB,QAAAV,IAAAkjB,gCACAhe,KAAAie,eAAAziB,QAAAV,IAAAkjB,gCAEAhe,KAAAnC,UAAArC,QAAAK,OAAAqiB,WAAAtI,KACA5V,KAAA4W,WAAApb,QAAAV,IAAAqjB,gCACAne,KAAAsa,WAAA9e,QAAAV,IAAAsjB,gCACApe,KAAAqe,cACAre,KAAAse,gBAAA,GACAte,KAAAue,qBAAA,OAIA/iB,QAAAK,OAAA,uBACAL,QAAAK,OAAA,qBAAAga,KAAA,WACA,IAAAzR,EAAA,IAAA5I,QAAA4a,eAAA,GACA5a,QAAAqI,WAAA8Z,QACAvZ,EAAAwZ,eAAA,GACA5d,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAA0jB,4BACAxI,YAAA5R,EAAA,QACA4R,YAAA,GAAA,UACAhW,KAAA8V,iBAAA,UACA4B,SAAAlc,QAAAmc,aACA3B,YAAAxa,QAAAV,IAAA2jB,6BACAze,KAAAgX,WAAA,IAAAxb,QAAAyb,SAAA,4BACAjX,KAAArB,UAAA2N,QAAAwR,UACA9d,KAAArB,UAAA2N,QAAAyR,iBACA/d,KAAArB,UAAA2N,QAAAyR,gBAAAzR,QAAAwR,WACAtiB,QAAAV,IAAA4jB,8BACA1e,KAAAie,eAAAziB,QAAAV,IAAA4jB,8BAEA1e,KAAAnC,UAAArC,QAAAK,OAAAqiB,WAAAtI,KACA5V,KAAA4W,WAAApb,QAAAV,IAAA6jB,8BACA3e,KAAAsa,WAAA9e,QAAAV,IAAA8jB,8BACA5e,KAAAqe,cACAre,KAAAse,gBAAA,GACAte,KAAAue,qBAAA,YiBjDA,IAAA/iB,QAAAK,OAAAgjB,SACArjB,QAAAK,OAAAgjB,WAGArjB,QAAAK,OAAAgjB,OAAAjJ,IAAA,IAEApa,QAAAK,OAAA,gBACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAA6Z,eACAyE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,UAGA0H,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,SAGAob,cAAA,EACAvF,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAA8Z,uBAAAxR,QAAA,KACA6W,EAAAC,cAAA,YAKA1e,QAAAK,OAAA,eACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAA+Z,cACAuE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,QAGA0H,KAAA,cACA1H,KAAA,SAGAob,cAAA,EACAvF,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAikB,sBAAA3b,QAAA,KACA6W,EAAAC,cAAA,YAKA1e,QAAAK,OAAA,eACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAia,cACAqE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,QAGAob,cAAA,EACAE,OAAA,KACAC,YAAAzjB,QAAA0jB,mBACAzF,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAka,sBAAA5R,QAAA,KACA6W,EAAAC,cAAA,YAKA1e,QAAAK,OAAA,gBACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAma,eACAmE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,SACA4V,MAAA,WAGAlO,KAAA,cACA1H,KAAA,UAGA0H,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,SAGAob,cAAA,EACAvF,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAoa,uBAAA9R,QAAA,KACA6W,EAAAC,cAAA,YAKA1e,QAAAK,OAAA,eACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAqa,cACAiE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,UAGA0H,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,QAGA0H,KAAA,cACA1H,KAAA,SAGAob,cAAA,EACAvF,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAga,sBAAA1R,QAAA,KACA6W,EAAAC,cAAA,YAKA1e,QAAAK,OAAA,eACAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAsa,cACAgE,QAEAhO,KAAA,iBACA1H,KAAA,MACA2V,SAAA7d,QAAAV,IAAAwa,kBAGAlK,KAAA,cACA1H,KAAA,UAGA0H,KAAA,cACA1H,KAAA,SAGA0H,KAAA,cACA1H,KAAA,QAGAob,cAAA,EACAE,OAAA,KACAC,YAAAzjB,QAAA0jB,mBACAzF,OAAAje,QAAAke,QAAAle,QAAAke,QAAAC,KAAAC,QAAApe,QAAAK,OAAAgjB,OAAAjJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAC,KAAAG,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAja,KACAA,KAAA4W,WAAA,WACA,OAAApb,QAAAV,IAAAua,sBAAAjS,QAAA,KACA6W,EAAAC,cAAA,YChPA1e,QAAAK,OAAA,kBAKAga,KAAA,WACA7V,KAAAkZ,UACAC,SAAA3d,QAAAV,IAAAwX,uBACA8G,QAEAhO,KAAA,cACA1H,KAAA,SAGA6V,kBAAA,KACAC,cAAA,KACAC,OAAAje,QAAAke,QAAAle,QAAAke,QAAAyF,MAAAvF,QAAApe,QAAAK,OAAAsjB,MAAAvJ,IACAiE,gBAAAre,QAAAke,QAAAle,QAAAke,QAAAyF,MAAArF,UAAA,KACAC,eAAAve,QAAAke,QAAAle,QAAAke,QAAAyF,MAAAnF,SAAA,KACAc,QAAAtf,QAAAV,IAAAyX,yBACA6M,QAAA5jB,QAAAV,IAAAukB,uBAKA7jB,QAAAK,OAAA,WAEAga,KAAA,WACAra,QAAAke,QACA1Z,KAAAnC,UAAArC,QAAAke,QAAAyF,MAAAvF,QAAApe,QAAAke,QAAAyF,MAAArF,UAAAte,QAAAke,QAAAyF,MAAAnF,UAEAha,KAAAnC,UAAArC,QAAAK,OAAAsjB,MAAAvJ,KAEA,IAAA0J,EAAA,IAAA9jB,QAAA4a,eAAA,IAGA6D,EAAAja,KACAuf,EAAA,KACAD,EAAAE,UAAA,SAAA7c,GACA,IAAA8c,EAAA,KACA3jB,KAAA4jB,QAAAC,aAAAnkB,QAAA4a,eAAAwJ,YACA,IAAAC,EAAArkB,QAAA4a,eAAAwJ,WACA5f,KAAA4C,eAEA6c,EAAAjkB,QAAAgP,mBAAAqV,EAAApS,MAAAzN,KAAA4C,aAAAjE,YAEA,OAAA8gB,GACAjkB,QAAAskB,UAAAD,EAAA,uBACAN,GAAA9e,aAAA8e,GACAA,EAAA7e,WAAA,WACAuZ,EAAA8F,eAAAvkB,QAAAV,IAAA2Z,kBAAArR,QAAA,KAAAqc,IACAH,EAAAU,iBACA,OAEAxkB,QAAAykB,aAAAJ,EAAA,uBACA5F,EAAA8F,eAAA,MACAR,IACA9e,aAAA8e,GACAA,EAAA,QAKAvf,KAAA0W,mBACAV,YAAAxa,QAAAV,IAAAyZ,iBACAyB,YAAAsJ,EAAA,QACAtf,KAAAkW,WAAA,GACAlW,KAAA4W,WAAApb,QAAAV,IAAA0Z,qBC/DAhZ,QAAA0kB,WAAArK,KAAA,SAAAlX,GAEAnD,QAAA0kB,WAAAC,aAAAC,OAAAC,OAAA,MAGA7kB,QAAA0kB,WAAAI,eAAAF,OAAAC,OAAA,MAEA7kB,QAAA0kB,WAAAK,YAIA/kB,QAAA0kB,WAAAK,YAAAC,QAHAhlB,QAAA0kB,WAAAK,YACA,IAAA/kB,QAAAgI,MAAAhI,QAAA0kB,WAAAO,iBAOAjlB,QAAA0kB,WAAAQ,sBAUAllB,QAAA0kB,WAAAS,OAAA,SAAA9T,GAMA,MAAA,KAHAA,EAAAA,EAAAzJ,QAAA,MAAA,QACAA,QAAA,MAAA,QACAA,QAAA,KAAA,QACA,KAIA5H,QAAA0kB,WAAA,aAAA,SAAA3hB,GAEA,IAUAqiB,EAVAC,EAAArlB,QAAA0kB,WAAAK,YAAAO,QACAviB,EAAA2b,cAAA,OAAA1e,QAAAyH,UAAA8d,WACAC,EAAAxlB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAgB,mBAAA,IACAC,EAAA3lB,QAAA0kB,WAAAe,YAAA1iB,EAAA,KACA/C,QAAA0kB,WAAAgB,mBAAA,IACAE,EAAA5lB,QAAA0kB,WAAAe,YAAA1iB,EAAA,KACA/C,QAAA0kB,WAAAgB,mBAAA,IACAG,EAAA7lB,QAAA0kB,WAAAoB,gBAAA/iB,EAAA,MAGA,GAFA8iB,EAAA7lB,QAAA0kB,WAAAqB,YAAAF,EAAA9iB,EAAAsQ,IAEArT,QAAAgmB,SAAAR,IAAAxlB,QAAAgmB,SAAAL,IACA3lB,QAAAgmB,SAAAJ,GAAA,CAEA,IAAAK,EAAAC,WAAAV,IAAAU,WAAAP,GACAP,EAAA,YAAAC,EAAA,MAAAG,EAAA,KACAH,GAAAY,EAAA,OAAA,QAAAN,EAAA,KACAN,EACA,IAAAc,EAAA1f,KAAA2f,IAAAF,WAAAN,IAEAR,GADA,GAAAe,EACAF,EAAA,KAAA,MAEAA,EAAA,OAAA,QAAAE,EAEAf,GAAA,QAAAS,EAAA,UACA,CACAT,EAAA,GAEA,IAAAiB,EAAAb,EACAA,EAAAc,MAAA,UAAAtmB,QAAAgmB,SAAAR,KAGAJ,GAAA,QAFAiB,EAAArmB,QAAA0kB,WAAAK,YAAAwB,gBACAlB,EAAA,SAAArlB,QAAAyH,UAAA8d,YACA,MAAAC,EAAA,OAEA,IAAAgB,EAAAb,EACA,IAAAA,EAAAW,MAAA,WAAAtmB,QAAAgmB,SAAAL,GAGAP,GAAA,QAFAoB,EAAAxmB,QAAA0kB,WAAAK,YAAAwB,gBACAlB,EAAA,OAAArlB,QAAAyH,UAAA8d,YACA,MAAAI,EAAA,MAIA,IAAAc,EAAAzmB,QAAA0kB,WAAAK,YAAAwB,gBACAlB,EAAA,OAAArlB,QAAAyH,UAAA8d,WACAH,GAAA,OAAAqB,EAAA,MACAzmB,QAAAgmB,SAAAJ,GACAR,GAAA3e,KAAA2f,IAAAR,GAAA,MAEAR,GAAA,YAAAQ,EAAA,OAEAR,GAAA,OAAAiB,EAAA,MAAAG,EAAA,QACApB,GAAAplB,QAAA0kB,WAAAgC,OAAAD,EAAA,OAAAA,EAAA,MACArB,GAAA,MACAA,GAAA,QAAAC,EAAA,MAAAgB,EAAA,KACAI,EAAA,WACApB,EAAA,OAAAmB,EAAA,MACAnB,EAAA,OAAAmB,EAAA,KACAnB,EAAA,OAAAoB,EAAA,QACAZ,EAAA,MAEA,OAAAT,GAGAplB,QAAA0kB,WAAA,cAAA,SAAA3hB,GAEA,IAAAyiB,EAAAxlB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QACA/C,QAAA0kB,WAAAgB,mBAAA,IAGA,MAAA,OAFA1lB,QAAA0kB,WAAAK,YAAAO,QACAviB,EAAA2b,cAAA,OAAA1e,QAAAyH,UAAA8d,WACA,MAAAC,EAAA,OC3GAxlB,QAAA2mB,OAAAtM,KAAA,SAAAlX,GAIAnD,QAAA2mB,OAAAC,KAAApiB,KAAAkiB,OAAA,SAEA1mB,QAAA2mB,OAAAhC,aAAAC,OAAAC,OAAA,MAGA7kB,QAAA2mB,OAAA7B,eAAAF,OAAAC,OAAA,MAEA7kB,QAAA2mB,OAAA5B,YAIA/kB,QAAA2mB,OAAA5B,YAAAC,QAHAhlB,QAAA2mB,OAAA5B,YACA,IAAA/kB,QAAAgI,MAAAhI,QAAA2mB,OAAA1B,kBAYAjlB,QAAA2mB,OAAAxB,OAAA,SAAA9T,GAMA,MAAA,KAJAA,EAAAA,EAAAzJ,QAAA,MAAA,QACAA,QAAA,MAAA,QACAA,QAAA,MAAA,OACAA,QAAA,KAAA,QACA,KPnCA5H,QAAA0kB,WAAA,SAAA,SAAA3hB,GAMA,QALA/C,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAmC,eAAA,OAGA,KAFA7mB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAoC,aAAA,OAEA9mB,QAAA0kB,WAAAqC,eAIA/mB,QAAA0kB,WAAA,iBAAA,SAAA3hB,GAKA,QAJA/C,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAmC,eAAA,OAEA,IADA9jB,EAAA2b,cAAA,QAEA1e,QAAA0kB,WAAAqC,eAIA/mB,QAAA0kB,WAAA,iBAAA,SAAA3hB,GAOA,OANA/C,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAmC,eAAA,OAIA,IAHA9jB,EAAA2b,cAAA,QAGA,OAFA1e,QAAA2mB,OAAAlB,YAAA1iB,EAAA,MACA/C,QAAA2mB,OAAAG,aAAA,OACA,OAKA9mB,QAAA0kB,WAAA,kBAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAe,YAAA1iB,EAAA,OAAA/C,QAAA0kB,WAAAqC,cAIA,IAJA,IAEA3B,EAAA,IAAA4B,MAAAjkB,EAAAuY,YAEA2L,EAAA,EAAAA,EAAAlkB,EAAAuY,WAAA2L,IAAA,CACA,IAAAC,EAAAnkB,EAAA2b,cAAA,MAAAuI,GACAhV,EAAAjS,QAAA0kB,WAAAe,YAAA1iB,EAAA,QAAAkkB,EACAjnB,QAAA0kB,WAAAoC,aAAA,MACA1B,EAAA6B,GAAAC,EAAA,KAAAjV,EAGA,OADAmT,EAAA,WAAAA,EAAA+B,KAAA,MAAA,KACAnnB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,UAAA,SAAA3hB,GAIA,OADA,gBAFA/C,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAmC,eAAA,OACA,IACA7mB,QAAA0kB,WAAAqC,eCjDA/mB,QAAA0kB,WAAA,UAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNASA,OADA,wBACA3kB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,eAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNAQA3kB,QAAA0kB,WAAAC,aAAA,WAAA,oTAWA,OADA,yBACA3kB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,WAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNAQA3kB,QAAA0kB,WAAAC,aAAA,WAAA,wDAMA,OADA,eACA3kB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,WAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNAQA3kB,QAAA0kB,WAAAC,aAAA,WAAA,oTAWA,OADA,eACA3kB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,WAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNASA,OADA,cACA3kB,QAAA0kB,WAAAqC,eAGA/mB,QAAA0kB,WAAA,eAAA,SAAA3hB,GACA/C,QAAA0kB,WAAAC,aAAA,YAAA,oNAQA3kB,QAAA0kB,WAAAC,aAAA,eAAA,yLAQA,OADA,mBACA3kB,QAAA0kB,WAAAqC,eC3GA/mB,QAAA0kB,WAAA,aAAA,SAAA3hB,GAiBA,OAfA/C,QAAA0kB,WAAAQ,kBAAA,YAAA,SAAAjT,EAAAgV,GACA,GAAAA,EAAA5nB,YAAAK,YACA,MAAAM,QAAAV,IAAA4Z,4BAAAtR,QAAA,KAAAqf,GAAArf,QAAA,KAAAvI,YAAAK,aAGA,IADA,IAAA0nB,KACA3jB,EAAA,EAAAA,EAAAwjB,EAAAxjB,IACA2jB,EAAA3jB,GAAAwO,EAEA,OAAAmV,IAMA,gBAJApnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAA2C,cAAA,QAGA,MAFArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,MACA/C,QAAA0kB,WAAA2C,cAAA,KACA,IACArnB,QAAA0kB,WAAA4C,sBAIAtnB,QAAA0kB,WAAA,aAAA,SAAA3hB,GAMA,OAJA/C,QAAA0kB,WAAAK,YAAAO,QAAAviB,EAAA2b,cAAA,OACA1e,QAAAyH,UAAA8d,WAGA,UAFAvlB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAoC,aAAA,OACA,QAGA9mB,QAAA0kB,WAAA,iBAAA,SAAA3hB,GAiBA,OAZA/C,QAAA0kB,WAAAC,aAAA,eAAA,kKAUA3kB,QAAA0kB,WAAAK,YAAAO,QAAAviB,EAAA2b,cAAA,OACA1e,QAAAyH,UAAA8d,WACA,4BAGAvlB,QAAA0kB,WAAA,eAAA,SAAA3hB,GAGA,IAAAwkB,EAAAvnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAmC,eAAA,KACAzH,EAAArc,EAAA2b,cAAA,SAAA,MACAW,EAAAtc,EAAA2b,cAAA,UAAA,aACAzM,EAAAjS,QAAA0kB,WAAAe,YAAA1iB,EAAA,KACA/C,QAAA0kB,WAAAgB,mBAAA,OAGA,SAAA8B,IACA,GAAAD,EAAAjB,MAAA,SACA,MAAA,GAEA,IAAAmB,EAAAznB,QAAA0kB,WAAAK,YAAAwB,gBACA,UAAAvmB,QAAAyH,UAAA8d,WACAH,EAAA,OAAAqC,EAAA,MAAAF,EAAA,MAEA,OADAA,EAAAE,EACArC,EAEA,OAAA/F,GACA,IAAA,QACA,GAAA,OAAAD,EACA,OAAAmI,EAAA,SAAAtV,EAAA,MACA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,YAAAtV,EAAA,OAEA,MACA,IAAA,OACA,GAAA,OAAAmN,EAAA,CACA,IAAAgG,EAAAoC,IAEA,OADApC,GAAAmC,EAAA,IAAAA,EAAA,kBAAAtV,EAAA,MAEA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,SAAAtV,EAAA,OAEA,MACA,IAAA,aACA,IAAAyV,EAAA1nB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,MACA,GAAA,OAAAqc,EAAA,CACAgG,EAAA,MAAAsC,EAAA,kDAEA,OADAtC,GAAAmC,EAAA,IAAAG,EAAA,OAAAzV,EAAA,MAEA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,WAAAG,EAAA,QAAAzV,EAAA,OAEA,MACA,IAAA,WACAyV,EAAA1nB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,KAAA,GAAA,EACA/C,QAAA0kB,WAAAkD,mBACAxC,EAAAoC,IACA,GAAA,OAAApI,EAGA,OAFAgG,GAAA,MAAAmC,EAAA,aAAAG,EAAA,kDACAtC,GAAAmC,EAAA,IAAAA,EAAA,aAAAG,EAAA,OAAAzV,EAAA,MAEA,GAAA,UAAAmN,EAGA,OAFAgG,GAAAmC,EAAA,WAAAA,EAAA,aAAAG,EAAA,QAAAzV,EACA,OAGA,MACA,IAAA,SACAmT,EAAAoC,IAAA,IACAK,EAAA7nB,QAAA0kB,WAAAK,YAAAwB,gBACA,OAAAvmB,QAAAyH,UAAA8d,WAGA,GAFAH,GAAA,OAAAyC,EAAA,iCAAAN,EACA,cACA,OAAAnI,EAEA,OADAgG,GAAAmC,EAAA,IAAAM,EAAA,OAAA5V,EAAA,MAEA,GAAA,UAAAmN,EAEA,OADAgG,GAAAmC,EAAA,WAAAM,EAAA,QAAA5V,EAAA,OAKA,KAAA,2CM/HAjS,QAAA0kB,WAAA,oBAAA,SAAA3hB,GAEA,GAAAA,EAAA+kB,SAAA,SAEA,IAAAC,EAAAC,OAAAC,OAAAllB,EAAA2b,cAAA,gBAGAqJ,EAAA/nB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QACA/C,QAAA0kB,WAAAgB,mBAAA,IAEA,IAAAG,EAAA7lB,QAAA0kB,WAAAoB,gBAAA/iB,EAAA,MACA8iB,EAAA7lB,QAAA0kB,WAAAqB,YAAAF,EAAA9iB,EAAAsQ,IACA,IAAA+R,EAAA,GACA8C,EAAAloB,QAAA0kB,WAAAK,YAAAwB,gBACA,OAAAvmB,QAAAyH,UAAA8d,WACAiB,EAAAuB,EACAA,EAAAzB,MAAA,UAAAtmB,QAAAgmB,SAAA+B,KAGA3C,GAAA,QAFAoB,EAAAxmB,QAAA0kB,WAAAK,YAAAwB,gBACA,aAAAvmB,QAAAyH,UAAA8d,YACA,MAAAwC,EAAA,OAMA,OAJA3C,GAAA,YAAA8C,EAAA,SACAA,EAAA,MAAA1B,EAAA,KACA0B,EAAA,UACArC,EAAA,OAIA7lB,QAAA0kB,WAAA,gBACA1kB,QAAA0kB,WAAA,oBC7BA1kB,QAAA0kB,WAAA,YAAA,SAAA3hB,GAEA,IAAAyiB,EAAAxlB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QACA/C,QAAA0kB,WAAAyD,iBAAA,IACAC,EAAApoB,QAAA0kB,WAAAK,YAAAO,QACAviB,EAAA2b,cAAA,OAAA1e,QAAAyH,UAAA8d,WAOA,OANA6C,EAAA,cAAAA,EAAA,kBAAAA,EACA,WAAA5C,EAAA,OAGA,qBAAAziB,EAAAsQ,GAAA,MAAA+U,EAAA,MAAAA,EAAA,ULVApoB,QAAA0kB,WAAA,eAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAuBA,OAnBApoB,QAAA0kB,WAAAC,aAAA,eAAA,gFAEA3kB,QAAAV,IAAAya,eAAA,gNAiBA,OAAAqO,EAAA,mBALApoB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QAAA/C,QAAA0kB,WAAA2C,cAAA,KAKA,MAJArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OAAA/C,QAAA0kB,WAAA2C,cAAA,KAIA,MAHArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAgB,mBAAA,QAEA,QAGA1lB,QAAA0kB,WAAA,cAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAGA,IAAAE,EAAAtoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,QACAwlB,EAAAvoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,OACAkP,EAAAjS,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAgB,mBAAA,OAEAN,EAAA,aAAAgD,EAAA,IAAAE,EAAA,8BAAAF,EAAA,IAAAE,EAAA,KAAAC,EAAA,+BAAAvoB,QAAAV,IAAA0a,qBAAA,SAEA,OADAoL,GAAAgD,EAAA,IAAAE,EAAA,KAAAC,EAAA,OAAAtW,EAAA,OAIAjS,QAAA0kB,WAAA,cAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAMA,OADAA,EAAA,IAFApoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,QAEA,KADA/C,QAAA0kB,WAAAiD,YAAA5kB,EAAA,OACA,IACA/C,QAAA0kB,WAAAmC,eAGA7mB,QAAA0kB,WAAA,eAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBA4BA,OAxBApoB,QAAA0kB,WAAAC,aAAA,eAAA,kGAEA3kB,QAAAV,IAAAya,eAAA,yTAsBA,OAAAqO,EAAA,mBANApoB,QAAA0kB,WAAAe,YAAA1iB,EAAA,SAAA/C,QAAA0kB,WAAA2C,cAAA,KAMA,MALArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QAAA/C,QAAA0kB,WAAA2C,cAAA,KAKA,MAJArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OAAA/C,QAAA0kB,WAAA2C,cAAA,KAIA,MAHArnB,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAgB,mBAAA,QAEA,QAGA1lB,QAAA0kB,WAAA,cAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAGA,IAAAE,EAAAtoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,SACAwlB,EAAAvoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,QACAylB,EAAAxoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,OACAkP,EAAAjS,QAAA0kB,WAAAe,YAAA1iB,EAAA,OACA/C,QAAA0kB,WAAAgB,mBAAA,OAEAN,EAAA,aAAAgD,EAAA,IAAAE,EAAA,8BAAAF,EAAA,IAAAE,EAAA,KAAAC,EAAA,8BAAAH,EAAA,IAAAE,EAAA,KAAAC,EAAA,KAAAC,EAAA,+BAAAxoB,QAAAV,IAAA0a,qBAAA,SAEA,OADAoL,GAAAgD,EAAA,IAAAE,EAAA,KAAAC,EAAA,KAAAC,EAAA,OAAAvW,EAAA,OAIAjS,QAAA0kB,WAAA,cAAA,SAAA3hB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA0kB,WAAAK,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAOA,OADAA,EAAA,IAHApoB,QAAA0kB,WAAAiD,YAAA5kB,EAAA,SAGA,KAFA/C,QAAA0kB,WAAAiD,YAAA5kB,EAAA,QAEA,KADA/C,QAAA0kB,WAAAiD,YAAA5kB,EAAA,OACA,IACA/C,QAAA0kB,WAAAmC,eClIA7mB,QAAA0kB,WAAA,iBAAA1kB,QAAA0kB,WAAA,WAEA1kB,QAAA0kB,WAAA,UAAA,SAAA3hB,GACA,IAAA0lB,EAAA1lB,EAAA2b,cAAA,QACAgK,EAAA1oB,QAAAkQ,kBAAAuY,GACA,OAAA,OAAAC,GACA,QAAA1oB,QAAA0kB,WAAAqC,eAEA2B,EAAA1oB,QAAA0kB,WAAAoC,abRA9mB,QAAA0kB,WAAA,cAAA,SAAA3hB,GAEA,IAAAyiB,EAAAxlB,QAAA0kB,WAAAe,YAAA1iB,EAAA,QACA/C,QAAA0kB,WAAAgB,mBAAA,IACA0C,EAAApoB,QAAA0kB,WAAAK,YAAAO,QACAviB,EAAA2b,cAAA,OAAA1e,QAAAyH,UAAA8d,WAMA,OALA6C,EAAA,MAAA5C,EAAA,OAGA,qBAAAziB,EAAAsQ,GAAA,MAAA+U,EAAA,MAAAA,EAAA,UQTApoB,QAAA2mB,OAAA,SAAA,SAAA5jB,GAMA,QALA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAE,eAAA,OAGA,KAFA7mB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAG,aAAA,OACA,IACA9mB,QAAA2mB,OAAAI,eAIA/mB,QAAA2mB,OAAA,iBAAA,SAAA5jB,GAKA,QAJA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAE,eAAA,OAEA,IADA7mB,QAAA2mB,OAAAxB,OAAApiB,EAAA2b,cAAA,SACA,IACA1e,QAAA2mB,OAAAI,eAIA/mB,QAAA2mB,OAAA,iBAAA,SAAA5jB,GAOA,OANA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAE,eAAA,OAIA,IAHA7mB,QAAA2mB,OAAAxB,OAAApiB,EAAA2b,cAAA,SAGA,QAFA1e,QAAA2mB,OAAAlB,YAAA1iB,EAAA,MACA/C,QAAA2mB,OAAAG,aAAA,OACA,MAKA9mB,QAAA2mB,OAAA,kBAAA,SAAA5jB,GACA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OAAA/C,QAAA2mB,OAAAI,cAIA,IAJA,IAEA3B,EAAA,IAAA4B,MAAAjkB,EAAAuY,YAEA2L,EAAA,EAAAA,EAAAlkB,EAAAuY,WAAA2L,IAAA,CACA,IAAAC,EAAAlnB,QAAA2mB,OAAAxB,OAAApiB,EAAA2b,cAAA,MAAAuI,IACAhV,EAAAjS,QAAA2mB,OAAAlB,YAAA1iB,EAAA,QAAAkkB,EACAjnB,QAAA2mB,OAAAG,aAAA,MACA1B,EAAA6B,GAAAC,EAAA,KAAAjV,EAGA,OADAmT,EAAA,IAAAA,EAAA+B,KAAA,MAAA,IACAnnB,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,UAAA,SAAA5jB,GAIA,QAHA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAE,eAAA,OACA,UACA7mB,QAAA2mB,OAAAI,eCjDA/mB,QAAA2mB,OAAA,UAAA,SAAA5jB,GAEA,OADA,eACA/C,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,eAAA,SAAA5jB,GAEA/C,QAAA2mB,OAAAhC,aAAA,WAAA,aACA3kB,QAAA2mB,OAAAhC,aAAA,8BAAA,gCACA3kB,QAAA2mB,OAAAhC,aAAA,WAAA,qPAWA,OADA,oBACA3kB,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,WAAA,SAAA5jB,GACA/C,QAAA2mB,OAAAhC,aAAA,WAAA,aAEA,OADA,oBACA3kB,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,WAAA,SAAA5jB,GACA/C,QAAA2mB,OAAAhC,aAAA,WAAA,aACA3kB,QAAA2mB,OAAAhC,aAAA,8BAAA,gCACA3kB,QAAA2mB,OAAAhC,aAAA,WAAA,qPAWA,OADA,eACA3kB,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,WAAA,SAAA5jB,GACA/C,QAAA2mB,OAAAhC,aAAA,WAAA,aAEA,OADA,4BACA3kB,QAAA2mB,OAAAI,eAGA/mB,QAAA2mB,OAAA,eAAA,SAAA5jB,GAEA,OADA,kCACA/C,QAAA2mB,OAAAI,eCtDA/mB,QAAA2mB,OAAA,aAAA,SAAA5jB,GAMA,OAJA/C,QAAA2mB,OAAA5B,YAAAO,QAAAviB,EAAA2b,cAAA,OACA1e,QAAAyH,UAAA8d,WAGA,YAFAvlB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAG,aAAA,OACA,OAGA9mB,QAAA2mB,OAAA,eAAA,SAAA5jB,GAGA,IAAAwkB,EAAAvnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAE,eAAA,KACAzH,EAAArc,EAAA2b,cAAA,SAAA,MACAW,EAAAtc,EAAA2b,cAAA,UAAA,aACAzM,EAAAjS,QAAA2mB,OAAAlB,YAAA1iB,EAAA,KACA/C,QAAA2mB,OAAAG,aAAA,OAyBA,SAAA6B,EAAAC,EAAAC,EAAAC,GAGA,OAAAvB,EAAA,IAAAsB,EAAA,OAAAC,EAAA,KAGA,OAAAzJ,GACA,IAAA,QACA,GAAA,OAAAD,EACA,OAAAuJ,EAAApB,EAAA,EAAAtV,GACA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,cAAAtV,EAAA,MAEA,MACA,IAAA,OACA,GAAA,OAAAmN,EACA,OAAAuJ,EAAApB,GAAA,EAAAtV,GACA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,WAAAtV,EAAA,MAEA,MACA,IAAA,aACA,IAAAyV,EAAA1nB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,MACA,GAAA,OAAAqc,EACA,OAAAuJ,EAAApB,EAAAG,EAAAzV,GACA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,WAAAG,EAAA,KAAAzV,EAAA,MAEA,MACA,IAAA,WACAyV,EAAA1nB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,KAAA,GAAA,GACA,GAAA,OAAAqc,EACA,OAAAuJ,EAAApB,EAAAG,EAAAzV,GACA,GAAA,UAAAmN,EACA,OAAAmI,EAAA,WAAAG,EAAA,KAAAzV,EAAA,MAEA,MACA,IAAA,SACAjS,QAAA2mB,OAAAhC,aAAA,cAAA,gBACA,IAAAS,EA7DA,WACA,GAAAmC,EAAAjB,MAAA,SACA,MAAA,GAEA,IAAAmB,EAAAznB,QAAA2mB,OAAA5B,YAAAwB,gBACA,WAAAvmB,QAAAyH,UAAA8d,WACAH,EAAAqC,EAAA,MAAAF,EAAA,KAEA,OADAA,EAAAE,EACArC,EAqDAoC,GACAK,EAAA7nB,QAAA2mB,OAAA5B,YAAAwB,gBACA,QAAAvmB,QAAAyH,UAAA8d,WAEA,GADAH,GAAAyC,EAAA,gCAAAN,EAAA,OACA,OAAAnI,EAEA,OADAgG,GAAAuD,EAAApB,EAAAM,EAAA5V,GAEA,GAAA,UAAAmN,EAEA,OADAgG,GAAAmC,EAAA,WAAAM,EAAA,KAAA5V,EAAA,MAKA,KAAA,2CAGAjS,QAAA2mB,OAAA,iBAAA,SAAA5jB,GAGA,OAFA/C,QAAA2mB,OAAA5B,YAAAO,QAAAviB,EAAA2b,cAAA,OACA1e,QAAAyH,UAAA8d,WACA,aMpGAvlB,QAAA2mB,OAAA,oBAAA,SAAA5jB,GAEA,GAAAA,EAAA+kB,SAAA,SAEA,IAAAC,EAAAC,OAAAlM,SAAA/Y,EAAA2b,cAAA,SAAA,UAGAqJ,EAAA/nB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,QACA/C,QAAA2mB,OAAAG,aAAA,IAGAiB,EADA/nB,QAAAgmB,SAAA+B,GACAjM,SAAAiM,EAAA,IAEA,OAAAA,EAAA,IAEA,IAAAlC,EAAA7lB,QAAA2mB,OAAAb,gBAAA/iB,EAAA,MAMA,OALA8iB,EAAA7lB,QAAA2mB,OAAAZ,YAAAF,EAAA9iB,EAAAsQ,KACArT,QAAA2mB,OAAAC,KAGA,OAFA5mB,QAAA2mB,OAAA5B,YAAAwB,gBACA,OAAAvmB,QAAAyH,UAAA8d,WACA,aAAAwC,EAAA,OAAAlC,GAIA7lB,QAAA2mB,OAAA,gBAAA3mB,QAAA2mB,OAAA,oBJxBA3mB,QAAA2mB,OAAA,eAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAcA,OAVApoB,QAAA2mB,OAAAhC,aAAA,eAAA,mFAEA3kB,QAAAV,IAAAya,eAAA,6CAQAqO,EAAA,mBALApoB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,QAAA/C,QAAA2mB,OAAAU,cAAA,KAKA,MAJArnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OAAA/C,QAAA2mB,OAAAU,cAAA,KAIA,MAHArnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAjB,mBAAA,QAEA,QAGA1lB,QAAA2mB,OAAA,cAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAGA,IAKAhD,EAAA,GAIA,OADAA,GAAAgD,EAAA,IARApoB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,QAQA,KAPA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,OAOA,QANA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAG,aAAA,QAKA,MAIA9mB,QAAA2mB,OAAA,cAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAMA,OADAA,EAAA,IAFApoB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,QAEA,KADA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,OACA,IACA/C,QAAA2mB,OAAAE,eAGA7mB,QAAA2mB,OAAA,eAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAeA,OAXApoB,QAAA2mB,OAAAhC,aAAA,eAAA,qGAEA3kB,QAAAV,IAAAya,eAAA,iEASAqO,EAAA,mBANApoB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,SAAA/C,QAAA2mB,OAAAU,cAAA,KAMA,MALArnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,QAAA/C,QAAA2mB,OAAAU,cAAA,KAKA,MAJArnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OAAA/C,QAAA2mB,OAAAU,cAAA,KAIA,MAHArnB,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAjB,mBAAA,QAEA,QAGA1lB,QAAA2mB,OAAA,cAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAGA,IAMAhD,EAAA,GAIA,OADAA,GAAAgD,EAAA,IATApoB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,SASA,KARA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,QAQA,KAPA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,OAOA,QANA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAG,aAAA,QAKA,MAIA9mB,QAAA2mB,OAAA,cAAA,SAAA5jB,GACA,IAAAslB,EAAAtlB,EAAA2b,cAAA,OACA,GAAA2J,EACA,IAAAD,EAAApoB,QAAA2mB,OAAA5B,YAAAO,QAAA+C,EAAAroB,QAAAyH,UAAA8d,gBAEA6C,EAAA,mBAOA,OADAA,EAAA,IAHApoB,QAAA2mB,OAAAoC,eAAAhmB,EAAA,SAGA,KAFA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,QAEA,KADA/C,QAAA2mB,OAAAoC,eAAAhmB,EAAA,OACA,IACA/C,QAAA2mB,OAAAE,eChHA7mB,QAAA2mB,OAAA,iBAAA,SAAA5jB,GAIA,MAAA,UAFA/C,QAAA2mB,OAAAlB,YAAA1iB,EAAA,OACA/C,QAAA2mB,OAAAG,aAAA,MACA,eAGA9mB,QAAA2mB,OAAA,UAAA,SAAA5jB,GACA,IAAA0lB,EAAA1lB,EAAA2b,cAAA,QACAgK,EAAA1oB,QAAAkQ,kBAAAuY,GACA,OAAA,OAAAC,GACA,QAAA1oB,QAAA2mB,OAAAI,eAEA2B,EAAA1oB,QAAA2mB,OAAAG","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}