{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","utils.js","variables.js","workspace_svg.js","de.js","en.js","es.js","fr.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","scrollbarThickness","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Touch","clearTouchIdentifier","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","type","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","getMetrics","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","fr","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validate_","validationMsg","asserts","assertObject","htmlInput_","htmlInput","addClass_","setWarningText","resizeEditor_","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","blockVarName","at1","ORDER_COMMA","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}