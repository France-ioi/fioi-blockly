{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","that","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","sl","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","array","element","ORDER_COMMA","repeatCount","ORDER_FUNCTION_CALL","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","incrCode","reportCode","blockVarName","at1","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      });\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}