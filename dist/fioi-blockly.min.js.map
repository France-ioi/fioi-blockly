{"version":3,"sources":["base.js","block.js","blockly.js","dropdowndiv.js","field_label.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","msgName","Blockly","console","error","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","Block","prototype","jsonInit","json","goog","asserts","assert","undefined","this","setColour","i","interpolate_","setInputsInline","setOutput","setPreviousStatement","setNextStatement","setTooltip","setHelpUrl","setOutputShape","setCheckboxInFlyout","setCategory","setTextStyle","getTextStyle","textStyle_","style","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","backgroundColour","borderColour","backgroundColor","borderColor","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","width","height","blockSvg","getSvgRoot","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldLabel","origInit","init","sourceBlock_","textElement_","FieldNumber","showEditor_","opt_quietInput","workspace_","htmlInput","that","posTop","posLeft","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","parseInt","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","initial","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","appendValueInput","setCheck","appendField","newQuote_","open","file","FieldImage","appendDummyInput","appendStatementInput","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","OUTPUT_SHAPE_HEXAGONAL","lists","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.Block.prototype.jsonInit = function (json) {\n    // Validate inputs.\n    goog.asserts.assert(json['output'] == undefined ||\n        json['previousStatement'] == undefined,\n        'Must not have both an output and a previousStatement.');\n\n    // Set basic properties of block.\n    if (json['colour'] !== undefined) {\n        this.setColour(json['colour'], json['colourSecondary'], json['colourTertiary']);\n    }\n\n    // Interpolate the message blocks.\n    var i = 0;\n    while (json['message' + i] !== undefined) {\n        this.interpolate_(json['message' + i], json['args' + i] || [],\n            json['lastDummyAlign' + i]);\n        i++;\n    }\n\n    if (json['inputsInline'] !== undefined) {\n        this.setInputsInline(json['inputsInline']);\n    }\n    // Set output and previous/next connections.\n    if (json['output'] !== undefined) {\n        this.setOutput(true, json['output']);\n    }\n    if (json['previousStatement'] !== undefined) {\n        this.setPreviousStatement(true, json['previousStatement']);\n    }\n    if (json['nextStatement'] !== undefined) {\n        this.setNextStatement(true, json['nextStatement']);\n    }\n    if (json['tooltip'] !== undefined) {\n        this.setTooltip(json['tooltip']);\n    }\n    if (json['helpUrl'] !== undefined) {\n        this.setHelpUrl(json['helpUrl']);\n    }\n    if (json['outputShape'] !== undefined && this.setOutputShape) {\n        this.setOutputShape(json['outputShape']);\n    }\n    if (json['checkboxInFlyout'] !== undefined && this.setCheckboxInFlyout) {\n        this.setCheckboxInFlyout(json['checkboxInFlyout']);\n    }\n    if (json['category'] !== undefined && this.setCategory) {\n        this.setCategory(json['category']);\n    }\n    if (json['textStyle'] !== undefined) {\n        this.setTextStyle(json['textStyle']);\n    }\n};\n\nBlockly.Block.prototype.getTextStyle = function () {\n    return this.textStyle_ || '';\n}\n\nBlockly.Block.prototype.setTextStyle = function (style) {\n    this.textStyle_ = style;\n}","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldLabel.prototype.origInit = Blockly.FieldLabel.prototype.init;\nBlockly.FieldLabel.prototype.init = function () {\n    this.origInit();\n    var style = this.sourceBlock_.getTextStyle();\n    if (style) {\n        this.textElement_.setAttribute('style', style);\n    }\n}","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","FioiBlockly.Msg.nl = {};\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = 'element';\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = 'leeg woordenboek';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = 'sleutel';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = 'sleutel/waarde';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICT_GET = 'de sleutel ophalen';\nFioiBlockly.Msg.nl.DICT_GET_TO = 'van';\nFioiBlockly.Msg.nl.DICT_KEYS = 'lijst van de sleutels van';\nFioiBlockly.Msg.nl.DICT_SET_TITLE = 'de sleutel toewijzen';\nFioiBlockly.Msg.nl.DICT_SET_OF = 'van het woordenboek';\nFioiBlockly.Msg.nl.DICT_SET_TO = 'aan';\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = 'de regel weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, gevolgd door een regeleinde.';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = 'weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, zonder regeleinde.';\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = 'evalueren';\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = 'Evalueert de opgegeven rekenkundige bewerking.';\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Opgelet : %1 ; dit blok zal terugkeren 'fout' !\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"de puntkomma ';' is niet toegestaan\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = 'de uitdrukking is syntactisch niet geldig';\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = 'dit type uitdrukking (%1) is niet toegestaan';\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"deze uitdrukking gebruikt een ongedefinieerde '%1' variabele\";\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = 'voeg element %2 toe aan lijst %1';\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Voeg een element toe aan de lijst '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = 'Lijstgrootte te groot: %1 > maximaal toegestane grootte %2';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = 'in het begin';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = 'aan de index vanaf het einde ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = 'aan de index  ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = 'de waarde bekomen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = 'de waarde bekomen en wissen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = 'op het einde';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = 'naar een willekeurige hint';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = 'de waarde wissen';\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = 'invoegen';\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = 'stuur het gesorteerde terug %1 %2 van de lijst %3';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = 'de lijst sorteren %1 ter plaatse';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Sorteer de lijst ' %1' en wijzig ze onmiddellijk.\";\nFioiBlockly.Msg.nl.INPUT_NUM = 'één enkel getal op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = 'Leest één enkel getal op één regel, op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = 'een lijst met getallen op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = 'Leest een lijst getallen op één regel, uit de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = 'een getal lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = 'Leest het volgende getal op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_CHAR = 'Een karakter lezen';\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = 'Leest een karakter op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_WORD = 'een woord lezen';\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = 'Leest een woord op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_LINE = 'een regel lezen';\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = 'Leest een regel op de programma-invoer.';\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variabele '%1', gebruikt door procedure '%2', kan niet worden verwijderd.\";\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = 'vervang het element %1 in lijst %2 door %3';\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = 'element %1 in %2';\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = 'initialiseer lijst %1 met %2 herhaald %3 keer';\nFioiBlockly.Msg.nl.INVALID_NAME = \"Ongeldige naam, gebruik alleen letters, letters met Franse accenten, cijfers (behalve als eerste teken) en underscore '_'.\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT = 'initialiseer de 2D-tabel %1 met %2 rijen en %3 kolommen die %4 bevatten';\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen en kolommen en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_2D_SET = 'in %1[%2] [%3] zet %4';\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = 'Zet de waarde in het veld [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_2D_GET = '%1[%2] [%3]';\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = 'Haal de waarde op uit het veld [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_3D_INIT = 'initialiseer de 3D-tabel %1 met %2 lagen, %3 rijen, %4 kolommen met %5';\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen, kolommen en niveaus en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_3D_SET = 'in %1[%2] [%3] [%4] zet %5';\nFioiBlockly.Msg.nl.TABLES_3D_GET = '%1[%2] [%3] [%4]';\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = 'Haal de waarde op uit het vak [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = 'tabel';\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = 'Afmetingen van de tabel te groot!';\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = 'Poging tot toegang tot een veld buiten de tabel!';\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = '//';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = 'Geeft het gehele getal van de deling van de twee getallen.';","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}