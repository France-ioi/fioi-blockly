{"version":3,"sources":["base.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","RTL","widgetDispose_","DIV","htmlInput","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","that","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","type","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","sl","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","array","element","ORDER_COMMA","repeatCount","ORDER_FUNCTION_CALL","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","blockVarName","at1","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      });\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}