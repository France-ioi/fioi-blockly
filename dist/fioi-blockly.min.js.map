{"version":3,"sources":["base.js","block.js","blockly.js","dropdowndiv.js","field_label.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","Block","prototype","jsonInit","json","goog","asserts","assert","undefined","this","setColour","i","interpolate_","setInputsInline","setOutput","setPreviousStatement","setNextStatement","setTooltip","setHelpUrl","setOutputShape","setCheckboxInFlyout","setCategory","setTextStyle","getTextStyle","textStyle_","style","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","backgroundColour","borderColour","backgroundColor","borderColor","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldLabel","origInit","init","sourceBlock_","textElement_","FieldNumber","showEditor_","opt_quietInput","workspace_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","fontSize","spellcheck_","FieldTextInput","FONTSIZE","that","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","initial","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","appendValueInput","setCheck","appendField","newQuote_","open","file","FieldImage","appendDummyInput","appendStatementInput","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","OUTPUT_SHAPE_HEXAGONAL","lists","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.Block.prototype.jsonInit = function (json) {\n    // Validate inputs.\n    goog.asserts.assert(json['output'] == undefined ||\n        json['previousStatement'] == undefined,\n        'Must not have both an output and a previousStatement.');\n\n    // Set basic properties of block.\n    if (json['colour'] !== undefined) {\n        this.setColour(json['colour'], json['colourSecondary'], json['colourTertiary']);\n    }\n\n    // Interpolate the message blocks.\n    var i = 0;\n    while (json['message' + i] !== undefined) {\n        this.interpolate_(json['message' + i], json['args' + i] || [],\n            json['lastDummyAlign' + i]);\n        i++;\n    }\n\n    if (json['inputsInline'] !== undefined) {\n        this.setInputsInline(json['inputsInline']);\n    }\n    // Set output and previous/next connections.\n    if (json['output'] !== undefined) {\n        this.setOutput(true, json['output']);\n    }\n    if (json['previousStatement'] !== undefined) {\n        this.setPreviousStatement(true, json['previousStatement']);\n    }\n    if (json['nextStatement'] !== undefined) {\n        this.setNextStatement(true, json['nextStatement']);\n    }\n    if (json['tooltip'] !== undefined) {\n        this.setTooltip(json['tooltip']);\n    }\n    if (json['helpUrl'] !== undefined) {\n        this.setHelpUrl(json['helpUrl']);\n    }\n    if (json['outputShape'] !== undefined && this.setOutputShape) {\n        this.setOutputShape(json['outputShape']);\n    }\n    if (json['checkboxInFlyout'] !== undefined && this.setCheckboxInFlyout) {\n        this.setCheckboxInFlyout(json['checkboxInFlyout']);\n    }\n    if (json['category'] !== undefined && this.setCategory) {\n        this.setCategory(json['category']);\n    }\n    if (json['textStyle'] !== undefined) {\n        this.setTextStyle(json['textStyle']);\n    }\n};\n\nBlockly.Block.prototype.getTextStyle = function () {\n    return this.textStyle_ || '';\n}\n\nBlockly.Block.prototype.setTextStyle = function (style) {\n    this.textStyle_ = style;\n}","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldLabel.prototype.origInit = Blockly.FieldLabel.prototype.init;\nBlockly.FieldLabel.prototype.init = function () {\n    this.origInit();\n    var style = this.sourceBlock_.getTextStyle();\n    if (style) {\n        this.textElement_.setAttribute('style', style);\n    }\n}","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","// Temporarily put fr translations, waiting the NL ones\n\nFioiBlockly.Msg.nl = {};\n\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.nl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.nl.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.nl.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.nl.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.nl.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.nl.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.nl.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.nl.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.nl.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}