{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","utils.js","variables.js","workspace_svg.js","en.js","fr.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","scrollbarThickness","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Touch","clearTouchIdentifier","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","genUid","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","variableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","fr","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","type","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","texts","helpUrl","TEXT_PRINT_HELPURL","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","assignCode","msg"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\nBlockly.genUid.soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nBlockly.eventsBound = [];\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: func});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}