{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","fontSize","spellcheck_","FieldTextInput","FONTSIZE","that","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","undefined","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","// Temporarily put fr translations, waiting the NL ones\n\nFioiBlockly.Msg.nl = {};\n\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.nl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.nl.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.nl.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.nl.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.nl.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.nl.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.nl.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.nl.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.nl.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}