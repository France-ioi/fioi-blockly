{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","type","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","sl","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validate_","validationMsg","asserts","assertObject","htmlInput_","htmlInput","addClass_","setWarningText","resizeEditor_","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","array","element","ORDER_COMMA","repeatCount","ORDER_FUNCTION_CALL","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","blockVarName","at1","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}