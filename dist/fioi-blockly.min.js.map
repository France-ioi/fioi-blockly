{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","fontSize","spellcheck_","FieldTextInput","FONTSIZE","that","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","initial","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","undefined","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","// Temporarily put fr translations, waiting the NL ones\n\nFioiBlockly.Msg.nl = {};\n\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.nl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.nl.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.nl.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.nl.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.nl.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.nl.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.nl.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.nl.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.nl.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.nl.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.nl.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.nl.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.nl.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}