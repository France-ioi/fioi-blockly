{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","utils.js","variables.js","workspace_svg.js","en.js","es.js","fr.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","nameField","incl","xmlList","PROCEDURES_DEFNORETURN_PROCEDURE","push","populateProcedures","procedureList","templateName","args","mutation","j","arg","tuple","allProcedures","Scrollbar","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","scrollbarThickness","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Touch","clearTouchIdentifier","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","genUid","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","variableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","fr","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","type","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","texts","helpUrl","TEXT_PRINT_HELPURL","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","quote_","code","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","Python","PASS","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","Array","n","key","join","getField","repeats","String","Number","loopVar","ORDER_ADDITION","varName"],"mappings":"AAAAA,eACAA,YAAAC,OACAD,YAAAE,kBAEAF,YAAAG,YAAA,KAEAH,YAAAI,sBAGAJ,YAAAK,aAAA,SAAAC,GACA,IAAAN,YAAAC,IAAAK,KAAAN,YAAAI,mBAAAE,GAGA,OAFAC,QAAAC,MAAA,YAAAF,EAAA,wCACAN,YAAAI,mBAAAE,IAAA,GAIA,IAAA,IAAAG,KAAAT,YAAAC,IAAAK,GACAI,QAAAT,IAAAQ,GAAAT,YAAAC,IAAAK,GAAAG,IAKAT,YAAAW,uBAAA,SAAAC,GACA,IAAA,IAAAC,KAAAb,YAAAE,eACAU,IAAA,GAAAA,EAAAE,QAAAD,KACAH,QAAAK,OAAAF,GAAAb,YAAAE,eAAAW,KCGAG,KAAAC,QAAA,uBAEAD,KAAAE,QAAA,YACAF,KAAAE,QAAA,cAMAR,QAAAS,YAAA,aAQAT,QAAAS,YAAAC,KAAA,KAQAV,QAAAS,YAAAE,eAAA,KAOAX,QAAAS,YAAAG,OAAA,KAOAZ,QAAAS,YAAAI,WAAA,GAOAb,QAAAS,YAAAK,YAAA,EAOAd,QAAAS,YAAAM,yBAAA,GAOAf,QAAAS,YAAAO,UAAA,GAOAhB,QAAAS,YAAAQ,eAAA,IAOAjB,QAAAS,YAAAS,iBAAA,KAMAlB,QAAAS,YAAAU,QAAA,EAGAnB,QAAAS,YAAAW,eAAA,EACApB,QAAAS,YAAAY,mBAAA,KAGArB,QAAAS,YAAAa,gBAAA,EAMAtB,QAAAS,YAAAc,UAAA,WACAvB,QAAAS,YAAAC,OAGAV,QAAAS,YAAAC,KAAAJ,KAAAkB,IAAAD,UAAA,MAAA,sBACAE,SAAAC,KAAAC,YAAA3B,QAAAS,YAAAC,MACAV,QAAAS,YAAAmB,SAAAtB,KAAAkB,IAAAD,UAAA,MAAA,0BACAvB,QAAAS,YAAAC,KAAAiB,YAAA3B,QAAAS,YAAAmB,UACA5B,QAAAS,YAAAoB,OAAAvB,KAAAkB,IAAAD,UAAA,MAAA,wBACAvB,QAAAS,YAAAC,KAAAiB,YAAA3B,QAAAS,YAAAoB,QAGA7B,QAAAS,YAAAC,KAAAoB,MAAAC,WAAA,aACA/B,QAAAS,YAAAQ,eAAA,cACAjB,QAAAS,YAAAQ,eAAA,MAQAjB,QAAAS,YAAAuB,iBAAA,SAAAC,GACAjC,QAAAS,YAAAE,eAAAsB,GAOAjC,QAAAS,YAAAyB,cAAA,WACA,OAAAlC,QAAAS,YAAAmB,UAMA5B,QAAAS,YAAA0B,aAAA,WACAnC,QAAAS,YAAAmB,SAAAQ,UAAA,IAQApC,QAAAS,YAAA4B,UAAA,SAAAC,EAAAC,GACAvC,QAAAS,YAAAC,KAAAoB,MAAAU,gBAAAF,EACAtC,QAAAS,YAAAC,KAAAoB,MAAAW,YAAAF,GAOAvC,QAAAS,YAAAiC,YAAA,SAAAC,GACA3C,QAAAS,YAAAC,KAAAkC,aAAA,gBAAAD,IAIA3C,QAAAS,YAAAoC,sBAAA,SAAAC,EAAAC,EACAC,EAAAC,GACA,IAAAC,EAAAH,EAAAI,UAAAD,MACAE,GAAAC,MAAAN,EAAAM,MAAAC,OAAAP,EAAAO,QACAF,EAAAC,OAAAH,EACAE,EAAAE,QAAAJ,EAEA,IADA,IAAAK,EAAAR,EAAAS,aACAC,EAAA,EAAAA,EAAAF,EAAAG,SAAAC,OAAAF,IACA,GAAA,eAAAF,EAAAG,SAAAD,GAAAG,UAAA,GAAA,CACAL,EAAAA,EAAAG,SAAAD,GACA,MAGA,IAAAI,EAAAN,EAAAO,wBAEAC,EAAAF,EAAAG,KAAAH,EAAAR,MAAA,EACAY,EAAAJ,EAAAK,IAAAL,EAAAP,OAEAa,EAAAJ,EACAK,EAAAP,EAAAK,IAMA,OALAjB,IACAmB,GAAAnB,GAGAjD,QAAAS,YAAAuB,iBAAAe,EAAAI,UAAAkB,eAAAC,YACAtE,QAAAS,YAAA8D,KAAAC,KAAAT,EAAAE,EAAAE,EAAAC,EAAApB,IAIAhD,QAAAS,YAAAgE,eAAA,WACAzE,QAAAS,YAAAa,iBACAtB,QAAA0E,aAAA1E,QAAAS,YAAAa,gBACAtB,QAAAS,YAAAa,gBAAA,IAKAtB,QAAAS,YAAAkE,YAAA,WACA3E,QAAAS,YAAAa,iBACAtB,QAAAS,YAAAa,eAAAtB,QAAA4E,qBAAAC,OAAA,YAAA7E,QAAAS,YAAAT,QAAAS,YAAAqE,oBAoBA9E,QAAAS,YAAA8D,KAAA,SAAAzB,EAAAiB,EAAAE,EAAAE,EAAAC,EAAApB,GAEAhD,QAAAS,YAAAW,eAAA,EACApB,QAAAS,YAAAS,mBACA2D,OAAAE,aAAA/E,QAAAS,YAAAS,kBACAlB,QAAAS,YAAAS,iBAAA,MAEAlB,QAAAS,YAAAY,qBACAwD,OAAAE,aAAA/E,QAAAS,YAAAY,oBACArB,QAAAS,YAAAY,mBAAA,MAEArB,QAAAS,YAAAY,mBAAAwD,OAAAG,WAAA,WAAAhF,QAAAS,YAAAW,eAAA,GAAA,IAAApB,QAAAS,YAAAQ,gBAEAjB,QAAAS,YAAAkE,cAEA3E,QAAAS,YAAAG,OAAAkC,EACA9C,QAAAS,YAAAU,QAAA6B,EACA,IAAAiC,EAAAjF,QAAAS,YAAAC,KACAwE,EAAAlF,QAAAS,YAAA0E,mBAAApB,EAAAE,EAAAE,EAAAC,GAEApE,QAAAS,YAAAoB,OAAAC,MAAAsD,UAAA,aACAF,EAAAG,OAAA,MAAAH,EAAAI,OAAA,oBACAtF,QAAAS,YAAAoB,OAAAe,aAAA,QACAsC,EAAAK,WAAA,gCAAA,oCAYAN,EAAAnD,MAAAkC,KAAAkB,EAAAM,SAAA,KACAP,EAAAnD,MAAAoC,IAAAgB,EAAAO,SAAA,KAEAR,EAAAnD,MAAA4D,QAAA,QACAT,EAAAnD,MAAA6D,QAAA,EAIA,IAAAC,EAAAV,EAAAW,OAAAX,EAAAM,SACAM,EAAAZ,EAAAa,OAAAb,EAAAO,SAEA,OADAR,EAAAnD,MAAAsD,UAAA,aAAAQ,EAAA,MAAAE,EAAA,MACAZ,EAAAK,YAYAvF,QAAAS,YAAA0E,mBAAA,SAAApB,EAAAE,EAAAE,EAAAC,GACA,IASA4B,EAAAC,EAAAC,EATAjB,EAAAjF,QAAAS,YAAAC,KACAyF,EAAAnG,QAAAS,YAAAE,eAAAmD,wBAEAsC,EAAA9F,KAAAwB,MAAAuE,QAAArG,QAAAS,YAAAE,gBACA2F,EAAAhG,KAAAwB,MAAAuE,QAAApB,GAOAb,EAAAkC,EAAAhD,OAAA6C,EAAAjC,IAEAD,EAAAqC,EAAAhD,OAAA6C,EAAAjC,IAAAkC,EAAA9C,QAEA0C,EAAA7B,EACA8B,EAAA7B,EAAAkC,EAAAhD,OAAAtD,QAAAS,YAAAO,UACAkF,GAAA,IAGAF,EAAAjC,EACAkC,EAAAhC,EAAAjE,QAAAS,YAAAO,UACAkF,GAAA,IAIAF,EAAA7B,EACA8B,EAAA7B,EAAAkC,EAAAhD,OAAAtD,QAAAS,YAAAO,UACAkF,GAAA,GAKA,IAAAb,EAAAW,EAAAhG,QAAAS,YAAAI,WAAA,EAEAwE,EAAAkB,KAAAC,IAAAL,EAAAnC,KAAAuC,KAAAE,IAAApB,EAAAc,EAAAnC,KAAAoC,EAAA/C,QAIA2C,GADAM,EAAAjD,MAAA,EAQAgC,GALAW,EAAAO,KAAAC,IACAL,EAAAnC,KACAuC,KAAAE,IAAAT,EAAAG,EAAAnC,KAAAoC,EAAA/C,MAAAiD,EAAAjD,QAMAgC,EAAAkB,KAAAC,IACAxG,QAAAS,YAAAM,yBACAwF,KAAAE,IAAApB,EAAAiB,EAAAjD,MAAArD,QAAAS,YAAAM,yBAAAf,QAAAS,YAAAI,aAKA,IAAAyE,EAAA,EAAAgB,EAAAhD,OAAAtD,QAAAS,YAAAK,YAAA,EAYA,OAXAwE,GAAAtF,QAAAS,YAAAI,WAAA,EAAAb,QAAAS,YAAAK,aAYA0E,SATAQ,EAUAP,UARAS,EACA9B,EAAAkC,EAAAhD,OAEAW,GAKA,GACA4B,OAAAG,EACAD,OAAAE,EAAA,GACAZ,OAAAA,EACAC,OAAAA,EACAC,YAAAW,IAQAlG,QAAAS,YAAAiG,UAAA,WACA,QAAA1G,QAAAS,YAAAG,QAQAZ,QAAAS,YAAAkG,YAAA,SAAA7D,GACA,OAAA9C,QAAAS,YAAAG,SAAAkC,IACA9C,QAAAS,YAAAmG,QACA,IAQA5G,QAAAS,YAAAmG,KAAA,WACA5G,QAAAS,YAAAW,eAAA,EAEA,IAAA6D,EAAAjF,QAAAS,YAAAC,KAEAuE,IACAA,EAAAnD,MAAAsD,UAAA,sBACAH,EAAAnD,MAAA6D,QAAA,EACA3F,QAAAS,YAAAS,iBAAA8D,WAAA,WAEAhF,QAAAS,YAAAoG,wBACA,IAAA7G,QAAAS,YAAAQ,iBAEAjB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,QAAA,OAKAnB,QAAAS,YAAAqE,iBAAA,WACA9E,QAAAS,YAAAW,eACApB,QAAAS,YAAAmG,QAOA5G,QAAAS,YAAAoG,qBAAA,WACA,GAAA7G,QAAAS,YAAAiG,YAAA,CAGA,IAAAzB,EAAAjF,QAAAS,YAAAC,KACAV,QAAAS,YAAAS,kBAAA2D,OAAAE,aAAA/E,QAAAS,YAAAS,kBACA+D,EAAAnD,MAAAsD,UAAA,GACAH,EAAAnD,MAAAoC,IAAA,GACAe,EAAAnD,MAAAkC,KAAA,GACAiB,EAAAnD,MAAA4D,QAAA,OACA1F,QAAAS,YAAA0B,eACAnC,QAAAS,YAAAgE,iBACAzE,QAAAS,YAAAG,OAAA,KACAZ,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,UACAnB,QAAAS,YAAAU,QAAA,QC7bAnB,QAAA8G,cAAAC,UAAAC,eAAA,SAAAC,GACA,IAAA9D,EAAAqB,KAAA0C,aAAA/D,UACA,GAAA8D,GAAAjH,QAAAT,IAAA4H,gBAAA,CACA,IAAAC,EAAA5C,KAAA6C,UACArH,QAAAsH,YAQA,OAFAL,EAAAjH,QAAAuH,UAAAC,WACAxH,QAAAT,IAAAkI,sBAAAC,QAAA,KAAAN,GAAAA,EANA,SAAAH,GACAA,GACA9D,EAAAwE,eAAAP,EAAAH,KAKA,KACA,GAAAA,GAAAjH,QAAAT,IAAAqI,gBAAAF,QAAA,KACAlD,KAAA6C,WAEA,OADAlE,EAAA0E,eAAArD,KAAA6C,WACA,MChBArH,QAAA8H,MAAAf,UAAAgB,UAAA,SAAAC,GACA,GAAAA,EAEA,CAEA,IADA,IAAAC,EAAA,GACAxE,EAAA,EAAAA,EAAAuE,EAAArE,OAAAF,IACA,GAAAA,IAAA,GAAA,aAAArD,QAAA4H,EAAAvE,MAEAwE,EAAA,OAEA,KAAAD,EAAAvE,GACAwE,GAAA,KACA,GAAA,eAAA7H,QAAA4H,EAAAvE,IACAwE,GAAAD,EAAAvE,GAEAwE,GAAAC,UAAAF,EAAAvE,IAAAiE,QAAA,SAAA,KAGA,OAAAO,EAhBA,MAAA,WCFAjI,QAAAmI,WAAAC,eACAC,gBAAAC,OAAA,EAAAC,KAAA,EAAAC,OAAA,IAKAxI,QAAAmI,WAAAM,eAAA,SAAAtF,GACA,IAkBAuF,EAQA3F,EA1BA4F,EAAA3I,QAAAmI,WAAAC,cAAAC,eACAO,KACAD,EAAAL,OAAAtI,QAAAK,OAAA,0BAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,0BACAG,EAAAH,aAAA,MAAA,KACA8F,EAAApI,KAAAkB,IAAAD,UAAA,QAAA,KACAvB,QAAAT,IAAAsJ,mCACAjG,aAAA,OAAA,QACAG,EAAApB,YAAA+G,GACAE,EAAAE,KAAA/F,IAEA4F,EAAAJ,KAAAvI,QAAAK,OAAA,wBAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,wBACAG,EAAAH,aAAA,MAAA,KACA8F,EAAApI,KAAAkB,IAAAD,UAAA,QAAA,KACAvB,QAAAT,IAAAsJ,mCACAjG,aAAA,OAAA,QACAG,EAAApB,YAAA+G,GACAE,EAAAE,KAAA/F,IAEA4F,EAAAH,OAAAxI,QAAAK,OAAA,uBAEA0C,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA,uBACAG,EAAAH,aAAA,MAAA,IACAgG,EAAAE,KAAA/F,IAOA,SAAAgG,EAAAC,EAAAC,GACA,IAAA,IAAAxF,EAAA,EAAAA,EAAAuF,EAAArF,OAAAF,IAAA,CACA,IAAAuE,EAAAgB,EAAAvF,GAAA,GACAyF,EAAAF,EAAAvF,GAAA,GAMAV,EAAAzC,KAAAkB,IAAAD,UAAA,SACAwB,EAAAH,aAAA,OAAAqG,GACAlG,EAAAH,aAAA,MAAA,IACA,IAAAuG,EAAA7I,KAAAkB,IAAAD,UAAA,YACA4H,EAAAvG,aAAA,OAAAoF,GACAjF,EAAApB,YAAAwH,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAF,EAAAvF,OAAAyF,IAAA,CACA,IAAAC,EAAA/I,KAAAkB,IAAAD,UAAA,OACA8H,EAAAzG,aAAA,OAAAsG,EAAAE,IACAD,EAAAxH,YAAA0H,GAEAT,EAAAE,KAAA/F,IAzBA6F,EAAAjF,QAEAiF,EAAAA,EAAAjF,OAAA,GAAAf,aAAA,MAAA,IA2BA,IAAA0G,EAAAtJ,QAAAmI,WAAAoB,cAAApG,GAGA,OAFA4F,EAAAO,EAAA,GAAA,2BACAP,EAAAO,EAAA,GAAA,yBACAV,GCjEA5I,QAAAwJ,UAAAzC,UAAA0C,qBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,UAAAF,EAAAG,YAAA,EACArF,KAAAsF,QAEAH,GAAA3J,QAAAwJ,UAAAO,oBAEAvF,KAAAwF,mBAAAzD,KAAAC,IAAA,EAAAmD,IAEA,IAAAM,EAAAP,EAAAQ,aAAAR,EAAAG,YAAA,GACArF,KAAAsF,OAAAtF,KAAA2F,WAAAC,MACAH,GAAAjK,QAAAwJ,UAAAO,oBAIA,IAAAM,EAAAX,EAAAY,YAAAZ,EAAAa,WACAvK,QAAAwJ,UAAAO,mBAAA,GACAvF,KAAAgG,YAAAP,EAAAI,GAIA7F,KAAAiG,wBAAAf,IASA1J,QAAAwJ,UAAAzC,UAAA0D,wBAAA,SAAAf,GACAlF,KAAAsF,OAIAtF,KAAAkG,WAAAlG,KAAAmG,gBAAAjB,EAAAkB,cAGApG,KAAAqG,OAAArG,KAAAmG,gBAAAjB,EAAAkB,cACApG,KAAAqG,SAAAC,EAAAA,GAAAtG,KAAAqG,QAAAC,EAAAA,GACAC,MAAAvG,KAAAqG,WACArG,KAAAqG,OAAA,GAGA,IAAAG,GAAAtB,EAAAE,UAAAF,EAAAG,aAAArF,KAAAqG,OACArG,KAAAyG,iBAAA1E,KAAAC,IAAA,EAAAwE,IAEA,IAAAE,GAAAxB,EAAAyB,SAAAzB,EAAA0B,aACA5G,KAAAqG,OACArG,KAAA6G,kBAAA7G,KAAA8G,iBAAAJ,KCrDAlL,QAAAuL,WAAA,SAAAC,GACA,IAAArI,EAAAnD,QAAAyL,mBACAtI,GAAAA,EAAAuI,WAAA1L,QAAA2L,YAGA3L,QAAA4L,MAAAC,uBACA7L,QAAA8L,IAAAC,UAAA/L,QAAA8L,IAAAE,OAAAC,MACA9I,EAAAuI,UAAA1L,QAAA2L,UAEA3L,QAAA4L,MAAAM,oBACAlM,QAAA0E,aAAA1E,QAAA4L,MAAAM,mBACAlM,QAAA4L,MAAAM,kBAAA,MAEAlM,QAAAmM,sBACAnM,QAAA0E,aAAA1E,QAAAmM,qBACAnM,QAAAmM,oBAAA,QCdAnM,QAAAoM,OAAAC,MAAA,wFAIArM,QAAAsM,eAEAtM,QAAA4E,qBAAA,SAAA2H,EAAAvE,EAAAwE,EAAAC,EACAC,GACA,IAAAC,GAAA,EACAC,EAAA,SAAApB,GAKA,IAJA,IAIAqB,EAJAC,GAAAJ,EAGAK,EAAA/M,QAAA4L,MAAAoB,oBAAAxB,GACA/H,EAAA,EAAAoJ,EAAAE,EAAAtJ,GAAAA,IACAqJ,IAAA9M,QAAA4L,MAAAqB,kBAAAJ,KAGA7M,QAAA4L,MAAAsB,mBAAAL,GACAL,EACAC,EAAAU,KAAAX,EAAAK,GAEAJ,EAAAI,GAEAF,GAAA,IAIAJ,EAAAa,iBAAApF,EAAA4E,GAAA,GACA5M,QAAAsM,YAAAxD,MAAAyD,KAAAA,EAAAvE,KAAAA,EAAAyE,KAAAG,IACA,IAAAS,IAAAd,EAAAvE,EAAA4E,IAGA,GAAA5E,KAAAhI,QAAA4L,MAAA0B,UAQA,IAPA,IAOAC,EAPAC,EAAA,SAAAhC,GACAoB,EAAApB,GAEAmB,GACAnB,EAAAiC,kBAGAhK,EAAA,EACA8J,EAAAvN,QAAA4L,MAAA0B,UAAAtF,GAAAvE,GAAAA,IACA8I,EAAAa,iBAAAG,EAAAC,GAAA,GACAxN,QAAAsM,YAAAxD,MAAAyD,KAAAA,EAAAvE,KAAAuF,EAAAd,KAAAA,IACAY,EAAAvE,MAAAyD,EAAAgB,EAAAC,IAGA,OAAAH,GAKArN,QAAA0N,aAAA,WACA,IAAA,IAAAjK,EAAA,EAAAA,EAAAzD,QAAAsM,YAAA3I,OAAAF,IAAA,CACA,IAAAkK,EAAA3N,QAAAsM,YAAA7I,GACA,IACAkK,EAAApB,KAAAqB,oBAAAD,EAAA3F,KAAA2F,EAAAlB,MACA,MAAAjB,KAEAxL,QAAA6N,uBACApM,SAAAmM,oBAAA,UAAA5N,QAAAuL,YACAvL,QAAA6N,sBAAA,GAEA7N,QAAAsM,gBCjEAtM,QAAAuH,UAAAa,eACA0F,KAAA,EACAC,WAAA,EACAC,SACA3F,gBAAA4F,KAAA,EAAAC,KAAA,EAAAC,MAAA,GACAC,WAAA,GAIApO,QAAAuH,UAAAkB,eAAA,SAAAtF,GACA,IAAAyF,KACAyF,EAAArO,QAAAuH,UAAAa,cAGAkG,IAAAtO,QAAA,uBACA,GAAAqO,EAAAP,IAAA,CACA,GAAA3K,EACA,IAAAoL,EAAApL,EAAAqL,kBAEA,IAAA,EAAAH,EAAAL,MAAA5N,QAAA,UAAA,CAEA,IADA,IAAAqO,EAAA,GACA,EAAAJ,EAAAL,MAAA5N,QAAA,SAAAqO,IACAA,IAEAF,GAAA,SAAAE,QAEAF,GAAA,UAGA,IAAA,IAAA9K,EAAA,EAAAA,EAAA4K,EAAAL,MAAArK,OAAAF,IAAA,CACA,IAAAiL,EAAAH,EAAAnO,QAAAiO,EAAAL,MAAAvK,KACA,EAAAiL,GACAH,EAAAI,OAAAD,EAAA,GAKA,GAFAH,EAAAK,KAAAtO,KAAAuO,OAAAC,wBAEAT,EAAAN,UAAA,CACA,IAAAgB,EAAAzO,KAAAkB,IAAAD,UAAA,UACAwN,EAAAnM,aAAA,OAAA5C,QAAAT,IAAAyP,cACAV,IAEAS,EAAAnM,aAAA,cAAA,mBACA5C,QAAAiP,uBAAA,kBAAA,SAAAF,GACA/O,QAAAuH,UAAA2H,eAAAH,EAAAI,yBAGAvG,EAAAE,KAAAiG,SAGAR,KAGA,IAAAC,EAAAH,EAAAL,MAAAoB,OAAAb,GAEA,GAAA,EAAAC,EAAA7K,OAAA,CACA,GAAA2K,EACA,IAAApO,GACA+N,IAAA,gBACAC,IAAA,qBACAC,KAAA,8BAGAjO,GACA+N,IAAA,gBACAC,IAAA,gBACAC,KAAA,eAIA,GAAAE,EAAAhG,eAAA4F,KAAAjO,QAAAK,OAAAH,EAAA+N,KACA,IAAAxK,EAAA,EAAAA,EAAA+K,EAAA7K,OAAAF,IAAA,CAeA,IAXAV,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAA+N,KACAxK,EAAA4K,EAAAL,MAAArK,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+K,EAAA7K,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAGA0L,EACA,IAAAe,EAAArP,QAAAuH,UAAA+H,mBAAAd,EAAA/K,SAEA4L,EAAA/O,KAAAkB,IAAAD,UAAA,QAAA,KAAAiN,EAAA/K,KACAb,aAAA,OAAA,OAGAG,EAAApB,YAAA0N,GACAzG,EAAAE,KAAA/F,GAIA,GAAAsL,EAAAhG,eAAA6F,KAAAlO,QAAAK,OAAAH,EAAAgO,KACA,IAAAzK,EAAA,EAAAA,EAAA+K,EAAA7K,UAIA0K,EAAAD,WAAA3K,EAAA4K,EAAAL,MAAArK,QAJAF,IAAA,CAmBA,IAXAV,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAAgO,KACAzK,EAAA4K,EAAAL,MAAArK,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+K,EAAA7K,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAGA0L,EAAA,CACAe,EAAArP,QAAAuH,UAAA+H,mBAAAd,EAAA/K,IACAV,EAAApB,YAAA0N,GACAtM,EAAApB,YAAA3B,QAAAuH,UAAAgI,sBACA,EACAF,EAAA/O,KAAAkB,IAAAD,UAAA,QAAA,KAAAiN,EAAA/K,KACAb,aAAA,OAAA,OACAG,EAAApB,YAAA0N,GAGAzG,EAAAE,KAAA/F,GAGA,GAAAsL,EAAAhG,eAAA8F,MAAAnO,QAAAK,OAAAH,EAAAiO,MACA,IAAA1K,EAAA,EAAAA,EAAA+K,EAAA7K,UAQA0K,EAAAD,WAAA3K,EAAA4K,EAAAL,MAAArK,QARAF,IAAA,CAYA,IAAAV,EAUA,IAVAA,EAAAzC,KAAAkB,IAAAD,UAAA,UACAqB,aAAA,OAAA1C,EAAAiO,MACA1K,EAAA4K,EAAAL,MAAArK,QACAZ,EAAAH,aAAA,WAAA,SAEAa,GAAA+K,EAAA7K,OAAA,EACAZ,EAAAH,aAAA,MAAA,IAEAG,EAAAH,aAAA,MAAA,GAEA0L,EAAA,CACAe,EAAArP,QAAAuH,UAAA+H,mBAAAd,EAAA/K,IACAV,EAAApB,YAAA0N,GACAtM,EAAApB,YAAA3B,QAAAuH,UAAAiI,4BACA,CACA,IAAAC,EAAAnP,KAAAkB,IAAAD,UAAA,SACAkO,EAAA7M,aAAA,OAAA,SACAG,EAAApB,YAAA8N,GAEA,IAAAC,EAAApP,KAAAkB,IAAAD,UAAA,UACAmO,EAAA9M,aAAA,OAAA,eACA6M,EAAA9N,YAAA+N,GAEA,IAAAC,EAAArP,KAAAkB,IAAAD,UAAA,QAAA,KAAA,KACAoO,EAAA/M,aAAA,OAAA,OACA8M,EAAA/N,YAAAgO,IAEAN,EAAA/O,KAAAkB,IAAAD,UAAA,QAAA,KAAAiN,EAAA/K,KACAb,aAAA,OAAA,OACAG,EAAApB,YAAA0N,GAGAzG,EAAAE,KAAA/F,IAKA,OAAA6F,GAMA5I,QAAAuH,UAAA2H,eAAA,SAAA/L,GAYA,OADAnD,QAAAuH,UAAAC,WAAAxH,QAAAT,IAAAqQ,mBAAA,GAVA,SAAA3I,GACAA,KACA,GAAA9D,EAAA0M,gBAAA5I,GACA6I,cAAAC,iBAAA/P,QAAAT,IAAAyQ,wBAAAtI,QAAA,KACAT,EAAAgJ,eAAA,WAEA9M,EAAA+L,eAAAjI,MAKA,MAUAjH,QAAAuH,UAAAC,WAAA,SAAA0I,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,SAAAC,GAEA,GAAAA,EAAA,CAGA,GAFAA,EAAAA,EAAA7I,QAAA,aAAA,KAAAA,QAAA,SAAA,IAEA1H,QAAA8H,MAAAf,UAAAgB,UAAAwI,IAAAA,EAEA,YADAvQ,QAAAuH,UAAAC,WAAA0I,EAAAK,EAAAH,GAAA,GAGAG,GAAAvQ,QAAAT,IAAA4H,iBACAoJ,GAAAvQ,QAAAT,IAAAyP,eAEAuB,EAAA,MAGAH,EAAAG,IAGA,GAAAF,EACA,IAAAG,EAAA,MAAAxQ,QAAAT,IAAAkR,aAAA,aAAAP,OAEAM,EAAAN,EAEAC,EACAL,cAAAC,iBAAAS,EAAA,QAAA,KAAAF,EAAAtQ,QAAAT,IAAAmR,KAAA,KAAAP,GAEAL,cAAAC,iBAAAS,EAAA,QAAA,KAAAF,IC5OAtQ,QAAA2Q,aAAA5J,UAAA6J,YAAA,SAAAC,EAAApB,GACA,IAAA1M,EAAAyB,KAAAsM,aAAAD,GACA,IAAA9N,EACA,KAAA,sDAEA/C,QAAAS,YAAAc,YACAvB,QAAAS,YAAAoG,uBACA7G,QAAAS,YAAA0B,eACA,IAAA4O,EAAA/Q,QAAAS,YAAAyB,gBACA8O,EAAA1Q,KAAAkB,IAAAyP,cAAA,OACAD,EAAApO,aAAA,QAAA,kBACAoO,EAAA5O,UAAAqN,EACAsB,EAAApP,YAAAqP,GACAhR,QAAAS,YAAA4B,UAAA,UAAA,WACArC,QAAAS,YAAAoC,sBAAA2B,KAAAzB,IAIA/C,QAAA2Q,aAAA5J,UAAAmK,UAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,aAAAF,EAAA,IAAAC,EAAA,WACA5M,KAAAtB,MAAA,IACAsB,KAAA8M,iBACA9M,KAAA8M,gBAAA1O,aAAA,YAAAyO,GAEA7M,KAAA+M,kBACA/M,KAAA+M,iBAAA3O,aAAA,YAAAyO,GAEA7M,KAAAgN,aACAhN,KAAAgN,YAAAC,uBAAAN,EAAAC,EAAA5M,KAAAtB,QC7BA5D,YAAAC,IAAAmS,MAEApS,YAAAC,IAAAmS,GAAAC,uBAAA,UACArS,YAAAC,IAAAmS,GAAAE,qBAAA5R,QAAAT,IAAAoS,uBAEArS,YAAAC,IAAAmS,GAAAG,yBAAA,mBACAvS,YAAAC,IAAAmS,GAAAI,sCAAA,sBACAxS,YAAAC,IAAAmS,GAAAK,oCAAA,GACAzS,YAAAC,IAAAmS,GAAAM,6BAAA,wBACA1S,YAAAC,IAAAmS,GAAAO,2BAAA,OACA3S,YAAAC,IAAAmS,GAAAQ,+BAAA,IACA5S,YAAAC,IAAAmS,GAAAS,6BAAA,YACA7S,YAAAC,IAAAmS,GAAAU,+BAAA,GACA9S,YAAAC,IAAAmS,GAAAW,0BAAA,GACA/S,YAAAC,IAAAmS,GAAAY,SAAA,cACAhT,YAAAC,IAAAmS,GAAAa,YAAA,OACAjT,YAAAC,IAAAmS,GAAAc,UAAA,sBACAlT,YAAAC,IAAAmS,GAAAe,eAAA,gBACAnT,YAAAC,IAAAmS,GAAAgB,YAAA,gBACApT,YAAAC,IAAAmS,GAAAiB,YAAA,KAEArT,YAAAC,IAAAmS,GAAAkB,iBAAA,gBACAtT,YAAAC,IAAAmS,GAAAmB,mBAAA,+DACAvT,YAAAC,IAAAmS,GAAAoB,uBAAA,WACAxT,YAAAC,IAAAmS,GAAAqB,yBAAA,0DAEAzT,YAAAC,IAAAmS,GAAAsB,iBAAA,oCACA1T,YAAAC,IAAAmS,GAAAuB,qBAAA,kCACA3T,YAAAC,IAAAmS,GAAAwB,sBAAA,mBACA5T,YAAAC,IAAAmS,GAAAyB,yBAAA,4BACA7T,YAAAC,IAAAmS,GAAA0B,2BAAA,eACA9T,YAAAC,IAAAmS,GAAA2B,oBAAA,YACA/T,YAAAC,IAAAmS,GAAA4B,2BAAA,uBACAhU,YAAAC,IAAAmS,GAAA6B,qBAAA,aACAjU,YAAAC,IAAAmS,GAAA8B,uBAAA,oBACAlU,YAAAC,IAAAmS,GAAA+B,uBAAA,eACAnU,YAAAC,IAAAmS,GAAAgC,uBAAA,SACApU,YAAAC,IAAAmS,GAAAiC,iBAAA,mCACArU,YAAAC,IAAAmS,GAAAkC,qBAAA,wBACAtU,YAAAC,IAAAmS,GAAAmC,yBAAA,4CAEAvU,YAAAC,IAAAmS,GAAAoC,UAAA,yCACAxU,YAAAC,IAAAmS,GAAAqC,kBAAA,yDACAzU,YAAAC,IAAAmS,GAAAsC,eAAA,mCACA1U,YAAAC,IAAAmS,GAAAuC,uBAAA,2DACA3U,YAAAC,IAAAmS,GAAAwC,eAAA,gBACA5U,YAAAC,IAAAmS,GAAAyC,uBAAA,8CACA7U,YAAAC,IAAAmS,GAAA0C,WAAA,mBACA9U,YAAAC,IAAAmS,GAAA2C,mBAAA,0CACA/U,YAAAC,IAAAmS,GAAA4C,WAAA,cACAhV,YAAAC,IAAAmS,GAAA6C,mBAAA,qCACAjV,YAAAC,IAAAmS,GAAA8C,WAAA,cACAlV,YAAAC,IAAAmS,GAAA+C,mBAAA,qCAEAnV,YAAAC,IAAAmS,GAAAgD,iCAAA,uDAEApV,YAAAC,IAAAmS,GAAAiD,6BAAA,wCACArV,YAAAC,IAAAmS,GAAAkD,sBAAA,mBACAtV,YAAAC,IAAAmS,GAAAmD,sBAAA,+CAEAvV,YAAAC,IAAAmS,GAAAjB,aAAA,4HC5DAnR,YAAAC,IAAAuV,MAEAxV,YAAAC,IAAAuV,GAAAnD,uBAAA,WACArS,YAAAC,IAAAuV,GAAAlD,qBAAA5R,QAAAT,IAAAoS,uBAEArS,YAAAC,IAAAuV,GAAAjD,yBAAA,oBACAvS,YAAAC,IAAAuV,GAAAhD,sCAAA,uBACAxS,YAAAC,IAAAuV,GAAA/C,oCAAA,GACAzS,YAAAC,IAAAuV,GAAA9C,6BAAA,wBACA1S,YAAAC,IAAAuV,GAAA7C,2BAAA,QACA3S,YAAAC,IAAAuV,GAAA5C,+BAAA,IACA5S,YAAAC,IAAAuV,GAAA3C,6BAAA,cACA7S,YAAAC,IAAAuV,GAAA1C,+BAAA,GACA9S,YAAAC,IAAAuV,GAAAzC,0BAAA,GACA/S,YAAAC,IAAAuV,GAAAxC,SAAA,qBACAhT,YAAAC,IAAAuV,GAAAvC,YAAA,KACAjT,YAAAC,IAAAuV,GAAAtC,UAAA,uBACAlT,YAAAC,IAAAuV,GAAArC,eAAA,qBACAnT,YAAAC,IAAAuV,GAAApC,YAAA,kBACApT,YAAAC,IAAAuV,GAAAnC,YAAA,IAEArT,YAAAC,IAAAuV,GAAAlC,iBAAA,oBACAtT,YAAAC,IAAAuV,GAAAjC,mBAAA,0EACAvT,YAAAC,IAAAuV,GAAAhC,uBAAA,cACAxT,YAAAC,IAAAuV,GAAA/B,yBAAA,gEAEAzT,YAAAC,IAAAuV,GAAA9B,iBAAA,uCACA1T,YAAAC,IAAAuV,GAAA7B,qBAAA,sCACA3T,YAAAC,IAAAuV,GAAA5B,sBAAA,YACA5T,YAAAC,IAAAuV,GAAA3B,yBAAA,kCACA7T,YAAAC,IAAAuV,GAAA1B,2BAAA,eACA9T,YAAAC,IAAAuV,GAAAzB,oBAAA,gBACA/T,YAAAC,IAAAuV,GAAAxB,2BAAA,0BACAhU,YAAAC,IAAAuV,GAAAvB,qBAAA,WACAjU,YAAAC,IAAAuV,GAAAtB,uBAAA,yBACAlU,YAAAC,IAAAuV,GAAArB,uBAAA,mBACAnU,YAAAC,IAAAuV,GAAApB,uBAAA,WACApU,YAAAC,IAAAuV,GAAAnB,iBAAA,gDACArU,YAAAC,IAAAuV,GAAAlB,qBAAA,kCACAtU,YAAAC,IAAAuV,GAAAjB,yBAAA,mDAEAvU,YAAAC,IAAAuV,GAAAhB,UAAA,uCACAxU,YAAAC,IAAAuV,GAAAf,kBAAA,8DACAzU,YAAAC,IAAAuV,GAAAd,eAAA,yCACA1U,YAAAC,IAAAuV,GAAAb,uBAAA,qEACA3U,YAAAC,IAAAuV,GAAAZ,eAAA,iBACA5U,YAAAC,IAAAuV,GAAAX,uBAAA,qDACA7U,YAAAC,IAAAuV,GAAAV,WAAA,mBACA9U,YAAAC,IAAAuV,GAAAT,mBAAA,iDACA/U,YAAAC,IAAAuV,GAAAR,WAAA,mBACAhV,YAAAC,IAAAuV,GAAAP,mBAAA,iDACAjV,YAAAC,IAAAuV,GAAAN,WAAA,iBACAlV,YAAAC,IAAAuV,GAAAL,mBAAA,+CAEAnV,YAAAC,IAAAuV,GAAAJ,iCAAA,gFAEApV,YAAAC,IAAAuV,GAAAH,6BAAA,kDACArV,YAAAC,IAAAuV,GAAAF,sBAAA,oBACAtV,YAAAC,IAAAuV,GAAAD,sBAAA,mDAEAvV,YAAAC,IAAAuV,GAAArE,aAAA,yIC5DAnR,YAAAC,IAAAwV,MAEAzV,YAAAC,IAAAwV,GAAApD,uBAAA,UACArS,YAAAC,IAAAwV,GAAAnD,qBAAA5R,QAAAT,IAAAoS,uBAEArS,YAAAC,IAAAwV,GAAAlD,yBAAA,oBACAvS,YAAAC,IAAAwV,GAAAjD,sCAAA,wBACAxS,YAAAC,IAAAwV,GAAAhD,oCAAA,GACAzS,YAAAC,IAAAwV,GAAA/C,6BAAA,0BACA1S,YAAAC,IAAAwV,GAAA9C,2BAAA,MACA3S,YAAAC,IAAAwV,GAAA7C,+BAAA,IACA5S,YAAAC,IAAAwV,GAAA5C,6BAAA,aACA7S,YAAAC,IAAAwV,GAAA3C,+BAAA,GACA9S,YAAAC,IAAAwV,GAAA1C,0BAAA,GACA/S,YAAAC,IAAAwV,GAAAzC,SAAA,mBACAhT,YAAAC,IAAAwV,GAAAxC,YAAA,KACAjT,YAAAC,IAAAwV,GAAAvC,UAAA,oBACAlT,YAAAC,IAAAwV,GAAAtC,eAAA,kBACAnT,YAAAC,IAAAwV,GAAArC,YAAA,kBACApT,YAAAC,IAAAwV,GAAApC,YAAA,IAEArT,YAAAC,IAAAwV,GAAAnC,iBAAA,uBACAtT,YAAAC,IAAAwV,GAAAlC,mBAAA,4FACAvT,YAAAC,IAAAwV,GAAAjC,uBAAA,cACAxT,YAAAC,IAAAwV,GAAAhC,yBAAA,sFAEAzT,YAAAC,IAAAwV,GAAA/B,iBAAA,qCACA1T,YAAAC,IAAAwV,GAAA9B,qBAAA,qCACA3T,YAAAC,IAAAwV,GAAA7B,sBAAA,WACA5T,YAAAC,IAAAwV,GAAA5B,yBAAA,2BACA7T,YAAAC,IAAAwV,GAAA3B,2BAAA,aACA9T,YAAAC,IAAAwV,GAAA1B,oBAAA,oBACA/T,YAAAC,IAAAwV,GAAAzB,2BAAA,iCACAhU,YAAAC,IAAAwV,GAAAxB,qBAAA,WACAjU,YAAAC,IAAAwV,GAAAvB,uBAAA,wBACAlU,YAAAC,IAAAwV,GAAAtB,uBAAA,sBACAnU,YAAAC,IAAAwV,GAAArB,uBAAA,UACApU,YAAAC,IAAAwV,GAAApB,iBAAA,uCACArU,YAAAC,IAAAwV,GAAAnB,qBAAA,8BACAtU,YAAAC,IAAAwV,GAAAlB,yBAAA,gDAEAvU,YAAAC,IAAAwV,GAAAjB,UAAA,oCACAxU,YAAAC,IAAAwV,GAAAhB,kBAAA,+DACAzU,YAAAC,IAAAwV,GAAAf,eAAA,0CACA1U,YAAAC,IAAAwV,GAAAd,uBAAA,qEACA3U,YAAAC,IAAAwV,GAAAb,eAAA,iBACA5U,YAAAC,IAAAwV,GAAAZ,uBAAA,oDACA7U,YAAAC,IAAAwV,GAAAX,WAAA,oBACA9U,YAAAC,IAAAwV,GAAAV,mBAAA,8CACA/U,YAAAC,IAAAwV,GAAAT,WAAA,cACAhV,YAAAC,IAAAwV,GAAAR,mBAAA,wCACAjV,YAAAC,IAAAwV,GAAAP,WAAA,iBACAlV,YAAAC,IAAAwV,GAAAN,mBAAA,2CAEAnV,YAAAC,IAAAwV,GAAAL,iCAAA,4EAEApV,YAAAC,IAAAwV,GAAAJ,6BAAA,+CACArV,YAAAC,IAAAwV,GAAAH,sBAAA,qBACAtV,YAAAC,IAAAwV,GAAAF,sBAAA,iDAEAvV,YAAAC,IAAAwV,GAAAtE,aAAA,8IC3DAnR,YAAA0V,aAAA,WACA,IAAA,IAAAjV,KAAAT,YAAAC,IAAAD,YAAAG,kBACA,IAAAO,QAAAT,IAAAQ,KACAC,QAAAT,IAAAQ,GAAAT,YAAAC,IAAAD,YAAAG,aAAAM,KAIAT,YAAA0V,eCRAhV,QAAAK,OAAA4U,SAEAjV,QAAAK,OAAA4U,MAAAC,IAAA,EAGAlV,QAAAK,OAAA,UACA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAA4Q,iBAAA,QACA5Q,KAAA4Q,iBAAA,QACAC,SAAA,QACAC,YAAAtV,QAAAT,IAAAgT,aACA/N,KAAA+Q,iBAAA,GACA/Q,KAAAgR,WAAA,KAMAxV,QAAAK,OAAA,kBACA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAA4Q,iBAAA,QAEAE,YAAA9Q,KAAAiR,WAAA,IACAH,YAAA,IAAAtV,QAAA0V,eACA1V,QAAAT,IAAA0S,4BACA,QACAqD,YAAA9Q,KAAAiR,WAAA,IACAJ,SAAA,QACAC,YAAAtV,QAAAT,IAAAgT,aACA/N,KAAA+Q,iBAAA,GACA/Q,KAAAgR,WAAA,IAUAC,UAAA,SAAAE,GACA,GAAAA,GAAAnR,KAAA4F,IACA,IAAAwL,EAAA,kYAEAA,EAAA,qWAEA,OAAA,IAAA5V,QAAA6V,WAAAD,EAAA,GAAA,GAAA,OAIA5V,QAAAK,OAAA,kBACA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAA4Q,iBAAA,QACAE,YAAAtV,QAAAT,IAAAkT,gBACA6C,YAAA9Q,KAAAiR,WAAA,IACAH,YAAA,IAAAtV,QAAA0V,eACA1V,QAAAT,IAAA0S,4BACA,QACAqD,YAAA9Q,KAAAiR,WAAA,IACAJ,SAAA,QACAC,YAAAtV,QAAAT,IAAAmT,aACAlO,KAAA4Q,iBAAA,OACAE,YAAAtV,QAAAT,IAAAoT,aACAnO,KAAA+Q,iBAAA,GACA/Q,KAAAsR,sBAAA,GACAtR,KAAAuR,kBAAA,KAGA/V,QAAAK,OAAA,iBAAAoV,UAAAzV,QAAAK,OAAA,iBAAAoV,UAEAzV,QAAAK,OAAA,WACA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAA4Q,iBAAA,QACAC,SAAA,QACAC,YAAAtV,QAAAT,IAAAiT,WACAhO,KAAA+Q,iBAAA,GACA/Q,KAAAgR,WAAA,EAAA,WAMAxV,QAAAK,OAAA,6BAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAAuS,uCACAtN,KAAAyR,qBAAA,SACAzR,KAAA0R,WAAAlW,QAAAT,IAAAwS,qCACAvN,KAAA2R,aAAA,IAIAnW,QAAAK,OAAA,wBAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAA4S,8BACA3N,KAAAsR,sBAAA,GACAtR,KAAAuR,kBAAA,GACAvR,KAAA0R,WAAAlW,QAAAT,IAAA6S,gCACA5N,KAAA2R,aAAA,IAGAnW,QAAAK,OAAA,mBAKA8U,KAAA,WACA3Q,KAAA+Q,iBAAA,GACA/Q,KAAAnC,UAAArC,QAAAK,OAAA4U,MAAAC,KACA1Q,KAAA4R,WAAA,EACA5R,KAAA6R,eACA7R,KAAAgR,WAAA,EAAA,QACAhR,KAAA8R,WAAA,IAAAtW,QAAAuW,SAAA,4BACA/R,KAAA0R,WAAAlW,QAAAT,IAAA8S,4BAOAmE,cAAA,SAAArT,GACA,IAAAsT,EAAAhV,SAAAwP,cAAA,YAEA,OADAwF,EAAA7T,aAAA,QAAA4B,KAAA4R,YACAK,GAOAC,cAAA,SAAAC,GACAnS,KAAA4R,WAAAQ,SAAAD,EAAAE,aAAA,SAAA,IACArS,KAAA6R,gBAOAA,aAAA,WAEA7R,KAAAsS,SAAA,UACAtS,KAAAuS,YAAA,SAEA,IAAA,IAAAtT,EAAA,EAAAe,KAAAsS,SAAA,QAAArT,GAAAA,IAEAe,KAAAuS,YAAA,QAAAtT,GAGA,GAAA,GAAAe,KAAA4R,WACA5R,KAAAwR,iBAAA,SACAV,YAAAtV,QAAAT,IAAAsS,8BACA,CACArN,KAAAwR,iBAAA,SACAV,YAAAtV,QAAAT,IAAAyS,8BACA,IAAAvO,EAAA,EAAAA,EAAAe,KAAA4R,WAAA3S,IACAe,KAAA4Q,iBAAA,QAAA3R,GACA4R,SAAA,MACA2B,SAAAhX,QAAAiX,aACA3B,YACA,IAAAtV,QAAA0V,eACA1V,QAAAT,IAAA0S,4BACA,MAAAxO,GACA6R,YAAAtV,QAAAT,IAAA2S,kCAUAgF,UAAA,SAAA/T,GACA,IAAAgU,EACAnX,QAAAoX,MAAAC,OAAAlU,EAAA,+BACAgU,EAAAG,UAEA,IADA,IAAAC,EAAAJ,EAAAL,SAAA,SAAAS,WACApG,EAAA,EAAAA,EAAA3M,KAAA4R,WAAAjF,IAAA,CACA,IAAAqG,EAAAxX,QAAAoX,MAAAC,OAAAlU,EAAA,0BACAqU,EAAAF,UACAC,EAAAE,QAAAD,EAAAE,oBACAH,EAAAC,EAAAG,eAEA,OAAAR,GAOAS,QAAA,SAAAT,GAKA,IAJA,IAAAK,EAAAL,EAAAU,oBAAA,SAEAC,KACArU,EAAA,EACA+T,GACAM,EAAArU,GAAA+T,EAAAO,iBACAP,EAAAA,EAAAG,gBACAH,EAAAG,eAAAK,cACAvU,IAEAe,KAAA4R,WAAA3S,EACAe,KAAA6R,eAEA,IAAA5S,EAAA,EAAAA,EAAAe,KAAA4R,WAAA3S,IACAqU,EAAArU,IACAe,KAAAsS,SAAA,QAAArT,GAAA8T,WAAAE,QAAAK,EAAArU,KASAwU,gBAAA,SAAAd,GAIA,IAFA,IAAAK,EAAAL,EAAAU,oBAAA,SACA1G,EAAA,EACAqG,GAAA,CACA,IAAAU,EAAA1T,KAAAsS,SAAA,QAAA3F,GACAqG,EAAAO,iBAAAG,GAAAA,EAAAX,WAAAY,iBACAhH,IACAqG,EAAAA,EAAAG,gBACAH,EAAAG,eAAAK,iBC1OAhY,QAAAK,OAAA+X,UAEApY,QAAAK,OAAA+X,OAAAlD,IAAA,IAGAlV,QAAAK,OAAA,WAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAAuU,WACAtP,KAAAgR,WAAA,EAAA,UACAhR,KAAA0R,WAAAlW,QAAAT,IAAAwU,mBACAvP,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,0BAKAtY,QAAAK,OAAA,gBAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAA2U,gBACA1P,KAAAgR,WAAA,EAAA,UACAhR,KAAA0R,WAAAlW,QAAAT,IAAA4U,wBACA3P,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,0BAKAtY,QAAAK,OAAA,YAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAA6U,YACA5P,KAAAgR,WAAA,EAAA,UACAhR,KAAA0R,WAAAlW,QAAAT,IAAA8U,oBACA7P,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,0BAKAtY,QAAAK,OAAA,YAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAA+U,YACA9P,KAAAgR,WAAA,EAAA,UACAhR,KAAA0R,WAAAlW,QAAAT,IAAAgV,oBACA/P,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,0BAKAtY,QAAAK,OAAA,YAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAAiV,YACAhQ,KAAAgR,WAAA,EAAA,UACAhR,KAAA0R,WAAAlW,QAAAT,IAAAkV,oBACAjQ,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,0BAKAtY,QAAAK,OAAA,gBAEA8U,KAAA,WACA3Q,KAAAnC,UAAArC,QAAAK,OAAA+X,OAAAlD,KACA1Q,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAAyU,gBACAxP,KAAAgR,WAAA,EAAA,SACAhR,KAAA0R,WAAAlW,QAAAT,IAAA0U,wBACAzP,KAAA6T,gBACA7T,KAAA6T,eAAArY,QAAAsY,+BCpFA,IAAAtY,QAAAK,OAAAkY,QACAvY,QAAAK,OAAAkY,UAGAvY,QAAAK,OAAAkY,MAAArD,IAAA,IAEAlV,QAAAK,OAAA,cAKA8U,KAAA,WACA3Q,KAAAgU,UACAC,SAAAzY,QAAAT,IAAAyT,iBACA0F,QAEAC,KAAA,iBACA3Q,KAAA,MACA4Q,SAAA,UAGAD,KAAA,cACA3Q,KAAA,OACA6Q,MAAA,WAGAC,kBAAA,KACAC,cAAA,KACAC,OAAAhZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAC,QAAAnZ,QAAAK,OAAAkY,MAAArD,IACAkE,gBAAApZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAG,UAAA,KACAC,eAAAtZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAhV,KACAA,KAAA0R,WAAA,WACA,OAAAlW,QAAAT,IAAA0T,qBAAAvL,QAAA,KACA8R,EAAAC,cAAA,YAMAna,YAAAE,eAAA,eAAAQ,QAAAK,OAAA,eACAL,QAAAK,OAAA,gBAKA8U,KAAA,WACA,IAAAuE,IACA1Z,QAAAT,IAAAoa,oBAAA,QACA3Z,QAAAT,IAAAmU,uBAAA,WACAlP,KAAAoV,gBACA5Z,QAAAT,IAAA6T,2BAAA,eACApT,QAAAT,IAAA4T,yBAAA,aACAnT,QAAAT,IAAA2T,sBAAA,UACAlT,QAAAT,IAAAgU,qBAAA,SACAvT,QAAAT,IAAAiU,uBAAA,WACAhP,KAAAqV,WAAA7Z,QAAAT,IAAAua,yBACAtV,KAAAnC,UAAArC,QAAAK,OAAAkY,MAAArD,KACA1Q,KAAA4Q,iBAAA,QACAC,SAAA,SACAC,YAAAtV,QAAAT,IAAAwa,+BACAvV,KAAAwR,iBAAA,MACAxR,KAAAwR,iBAAA,aACAV,YAAA,IAAAtV,QAAAga,cAAAN,GAAA,QACAlV,KAAA4Q,iBAAA,MACA5Q,KAAA+Q,iBAAA,GACA/Q,KAAAsR,sBAAA,GACAtR,KAAAuR,kBAAA,GACAvR,KAAA0R,WAAAlW,QAAAT,IAAA0a,yBACAzV,KAAA0V,WAAA,GAEA,IAAAV,EAAAhV,KACAA,KAAA0R,WAAA,WACA,IAAAiE,EAAAX,EAAAC,cAAA,QACAW,EAAAZ,EAAAC,cAAA,SACAY,EAAA,GACA,OAAAF,EAAA,IAAAC,GACA,IAAA,iBACA,IAAA,eACAC,EAAAra,QAAAT,IAAA+a,iCACA,MACA,IAAA,YACAD,EAAAra,QAAAT,IAAAgb,kCACA,MACA,IAAA,WACAF,EAAAra,QAAAT,IAAAib,iCACA,MACA,IAAA,aACAH,EAAAra,QAAAT,IAAAkb,mCACA,MACA,IAAA,oBACA,IAAA,kBACAJ,EAAAra,QAAAT,IAAAmb,oCACA,MACA,IAAA,eACAL,EAAAra,QAAAT,IAAAob,qCACA,MACA,IAAA,cACAN,EAAAra,QAAAT,IAAAqb,oCACA,MACA,IAAA,gBACAP,EAAAra,QAAAT,IAAAsb,sCAQA,MALA,cAAAT,GAAA,YAAAA,IACAC,GAAA,KAAAra,QAAAT,IAAAub,+BACApT,QAAA,KACA8R,EAAArW,UAAAkL,QAAA0M,cAAA,KAAA,OAEAV,KAQA7D,cAAA,WACA,IAAAC,EAAAhV,SAAAwP,cAAA,YACA+J,EAAAxW,KAAAsS,SAAA,MAAA6B,MAAA3Y,QAAAib,YAEA,OADAxE,EAAA7T,aAAA,KAAAoY,GACAvE,GAOAC,cAAA,SAAAC,GAGA,IAAAqE,EAAA,SAAArE,EAAAE,aAAA,MACArS,KAAA0V,UAAAc,IAQAd,UAAA,SAAAc,GAEAxW,KAAAuS,YAAA,MACAvS,KAAAuS,YAAA,WAAA,GAEAiE,GACAxW,KAAA4Q,iBAAA,MAAAC,SAAA,UACArV,QAAAT,IAAA2b,uBACA1W,KAAAwR,iBAAA,WACAV,YAAAtV,QAAAT,IAAA2b,wBAGA1W,KAAAwR,iBAAA,MAEA,IAAAmF,EAAA,IAAAnb,QAAAga,cAAAxV,KAAAoV,cAAA,SAAAnK,GACA,IAAA2L,EAAA,cAAA3L,GAAA,YAAAA,EAEA,GAAA2L,GAAAJ,EAAA,CACA,IAAAjY,EAAAyB,KAAA0C,aAIA,OAHAnE,EAAAmX,UAAAkB,GAEArY,EAAAsY,cAAA5L,EAAA,SACA,QAIAjL,KAAA8W,gBAAA,KAAA,aACA9W,KAAAsS,SAAA,YACAtS,KAAA8W,gBAAA,UAAA,MAGA9W,KAAAsS,SAAA,MAAAxB,YAAA6F,EAAA,WAIAnb,QAAAK,OAAA,kBAKA8U,KAAA,WACA3Q,KAAAgU,UACAC,SAAAzY,QAAAT,IAAAqU,qBACA8E,QAEAC,KAAA,iBACA3Q,KAAA,MACA4Q,SAAA,UAGAE,kBAAA,KACAC,cAAA,KACAC,OAAAhZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAC,QAAAnZ,QAAAK,OAAAkY,MAAArD,IACAkE,gBAAApZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAG,UAAA,KACAC,eAAAtZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAC,KAAAK,SAAA,OAGA,IAAAC,EAAAhV,KACAA,KAAA0R,WAAA,WACA,OAAAlW,QAAAT,IAAAsU,yBAAAnM,QAAA,KACA8R,EAAAC,cAAA,YC1MAna,YAAAE,eAAA,cAAAQ,QAAAK,OAAA,cAGAL,QAAAK,OAAA,eAKA8U,KAAA,WACA,IAgBAoG,EAAA/W,KAAA4F,MAfA,KAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,UAGA,KAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QACA,IAAA,OACA,KAAA,QAGA5F,KAAAqV,WAAA7Z,QAAAT,IAAAic,uBACAhX,KAAAnC,UAAArC,QAAAK,OAAAob,MAAAvG,KACA1Q,KAAAgR,WAAA,EAAA,WACAhR,KAAA4Q,iBAAA,KACA5Q,KAAA4Q,iBAAA,KACAE,YAAA,IAAAtV,QAAAga,cAAAuB,GAAA,MACA/W,KAAA+Q,iBAAA,GAEA,IAAAiE,EAAAhV,KACAA,KAAA0R,WAAA,WACA,IAAAwF,EAAAlC,EAAAC,cAAA,MASA,OAPAkC,GAAA3b,QAAAT,IAAAqc,yBACAC,IAAA7b,QAAAT,IAAAuc,0BACAC,GAAA/b,QAAAT,IAAAyc,yBACAC,IAAAjc,QAAAT,IAAA2c,0BACAC,GAAAnc,QAAAT,IAAA6c,yBACAC,IAAArc,QAAAT,IAAA+c,2BAEAZ,KAEAlX,KAAA+X,aAAA,KAAA,OAQAC,SAAA,SAAAhR,GACA,IAAAiR,EAAAjY,KAAAqT,oBAAA,KACA6E,EAAAlY,KAAAqT,oBAAA,KAEA,GAAA4E,GAAAC,IACAD,EAAAE,iBAAAC,WAAAF,EAAAC,kBAAA,CAGA3c,QAAA6c,OAAAC,SAAAtR,EAAAuR,OACA,IAAA,IAAAtZ,EAAA,EAAAA,EAAAe,KAAA+X,YAAA5Y,OAAAF,IAAA,CACA,IAAAV,EAAAyB,KAAA+X,YAAA9Y,GACAV,IAAA0Z,GAAA1Z,IAAA2Z,IACA3Z,EAAAia,SACAja,EAAAka,mBAGAjd,QAAA6c,OAAAC,UAAA,GAEAtY,KAAA+X,YAAA,GAAAE,EACAjY,KAAA+X,YAAA,GAAAG,Ib1EA1c,QAAAK,OAAA,yBACAL,QAAAK,OAAA,uBAAA8U,KAAA,WACA,IAAAzM,EAAA,IAAA1I,QAAA0V,eAAA,GACA1V,QAAAmI,WAAA+U,QACAxU,EAAAyU,eAAA,GACA3Y,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAA6d,8BACA9H,YAAA5M,EAAA,QACA4M,YAAA,GAAA,UACA9Q,KAAA8R,WAAA,IAAAtW,QAAAuW,SAAA,4BACA/R,KAAArB,UAAAkL,QAAAgP,UACA7Y,KAAArB,UAAAkL,QAAAiP,iBACA9Y,KAAArB,UAAAkL,QAAAiP,gBAAAjP,QAAAgP,WACArd,QAAAT,IAAAge,gCACA/Y,KAAAgZ,eAAAxd,QAAAT,IAAAge,gCAEA/Y,KAAAnC,UAAArC,QAAAK,OAAAod,WAAAvI,KACA1Q,KAAA0R,WAAAlW,QAAAT,IAAAme,gCACAlZ,KAAAqV,WAAA7Z,QAAAT,IAAAoe,gCACAnZ,KAAAoZ,cACApZ,KAAAqZ,gBAAA,GACArZ,KAAAsZ,qBAAA,OAIA9d,QAAAK,OAAA,uBACAL,QAAAK,OAAA,qBAAA8U,KAAA,WACA,IAAAzM,EAAA,IAAA1I,QAAA0V,eAAA,GACA1V,QAAAmI,WAAA+U,QACAxU,EAAAyU,eAAA,GACA3Y,KAAAwR,mBACAV,YAAAtV,QAAAT,IAAAwe,4BACAzI,YAAA5M,EAAA,QACA4M,YAAA,GAAA,UACA9Q,KAAA4Q,iBAAA,UACA4B,SAAAhX,QAAAiX,aACA3B,YAAAtV,QAAAT,IAAAye,6BACAxZ,KAAA8R,WAAA,IAAAtW,QAAAuW,SAAA,4BACA/R,KAAArB,UAAAkL,QAAAgP,UACA7Y,KAAArB,UAAAkL,QAAAiP,iBACA9Y,KAAArB,UAAAkL,QAAAiP,gBAAAjP,QAAAgP,WACArd,QAAAT,IAAA0e,8BACAzZ,KAAAgZ,eAAAxd,QAAAT,IAAA0e,8BAEAzZ,KAAAnC,UAAArC,QAAAK,OAAAod,WAAAvI,KACA1Q,KAAA0R,WAAAlW,QAAAT,IAAA2e,8BACA1Z,KAAAqV,WAAA7Z,QAAAT,IAAA4e,8BACA3Z,KAAAoZ,cACApZ,KAAAqZ,gBAAA,GACArZ,KAAAsZ,qBAAA,OcjDA9d,QAAAK,OAAA,kBAKA8U,KAAA,WACA3Q,KAAAgU,UACAC,SAAAzY,QAAAT,IAAAuT,uBACA4F,QAEAC,KAAA,cACA3Q,KAAA,SAGA8Q,kBAAA,KACAC,cAAA,KACAC,OAAAhZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAmF,MAAAjF,QAAAnZ,QAAAK,OAAA+d,MAAAlJ,IACAkE,gBAAApZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAmF,MAAA/E,UAAA,KACAC,eAAAtZ,QAAAiZ,QAAAjZ,QAAAiZ,QAAAmF,MAAA7E,SAAA,KACAc,QAAAra,QAAAT,IAAAwT,yBACAsL,QAAAre,QAAAT,IAAA+e,uBChBAte,QAAAue,WAAApJ,KAAA,SAAAhS,GAEAnD,QAAAue,WAAAC,aAAAC,OAAAC,OAAA,MAGA1e,QAAAue,WAAAI,eAAAF,OAAAC,OAAA,MAEA1e,QAAAue,WAAAK,YAIA5e,QAAAue,WAAAK,YAAAC,QAHA7e,QAAAue,WAAAK,YACA,IAAA5e,QAAA8H,MAAA9H,QAAAue,WAAAO,kBAaA9e,QAAAue,WAAAQ,OAAA,SAAAlQ,GAMA,MAAA,KAHAA,EAAAA,EAAAnH,QAAA,MAAA,QACAA,QAAA,MAAA,QACAA,QAAA,KAAA,QACA,KAIA1H,QAAAue,WAAA,aAAA,SAAAxb,GAEA,IAUAic,EAVAC,EAAAjf,QAAAue,WAAAK,YAAAM,QACAnc,EAAA0W,cAAA,OAAAzZ,QAAAuH,UAAA4X,WACAC,EAAApf,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAe,mBAAA,IACAC,EAAAvf,QAAAue,WAAAc,YAAAtc,EAAA,KACA/C,QAAAue,WAAAe,mBAAA,IACAE,EAAAxf,QAAAue,WAAAc,YAAAtc,EAAA,KACA/C,QAAAue,WAAAe,mBAAA,IACAG,EAAAzf,QAAAue,WAAAmB,gBAAA3c,EAAA,MAGA,GAFA0c,EAAAzf,QAAAue,WAAAoB,YAAAF,EAAA1c,EAAA8N,IAEA7Q,QAAA4f,SAAAR,IAAApf,QAAA4f,SAAAL,IACAvf,QAAA4f,SAAAJ,GAAA,CAEA,IAAAK,EAAAC,WAAAV,IAAAU,WAAAP,GACAP,EAAA,YAAAC,EAAA,MAAAG,EAAA,KACAH,GAAAY,EAAA,OAAA,QAAAN,EAAA,KACAN,EACA,IAAAc,EAAAxZ,KAAAyZ,IAAAF,WAAAN,IAEAR,GADA,GAAAe,EACAF,EAAA,KAAA,MAEAA,EAAA,OAAA,QAAAE,EAEAf,GAAA,QAAAS,EAAA,UACA,CACAT,EAAA,GAEA,IAAAiB,EAAAb,EACAA,EAAAc,MAAA,UAAAlgB,QAAA4f,SAAAR,KAGAJ,GAAA,QAFAiB,EAAAjgB,QAAAue,WAAAK,YAAAuB,gBACAlB,EAAA,SAAAjf,QAAAuH,UAAA4X,YACA,MAAAC,EAAA,OAEA,IAAAgB,EAAAb,EACA,IAAAA,EAAAW,MAAA,WAAAlgB,QAAA4f,SAAAL,GAGAP,GAAA,QAFAoB,EAAApgB,QAAAue,WAAAK,YAAAuB,gBACAlB,EAAA,OAAAjf,QAAAuH,UAAA4X,YACA,MAAAI,EAAA,MAIA,IAAAc,EAAArgB,QAAAue,WAAAK,YAAAuB,gBACAlB,EAAA,OAAAjf,QAAAuH,UAAA4X,WACAH,GAAA,OAAAqB,EAAA,MACArgB,QAAA4f,SAAAJ,GACAR,GAAAzY,KAAAyZ,IAAAR,GAAA,MAEAR,GAAA,YAAAQ,EAAA,OAEAR,GAAA,OAAAiB,EAAA,MAAAG,EAAA,QACApB,GAAAhf,QAAAue,WAAA+B,OAAAD,EAAA,OAAAA,EAAA,MACArB,GAAA,MACAA,GAAA,QAAAC,EAAA,MAAAgB,EAAA,KACAI,EAAA,WACApB,EAAA,OAAAmB,EAAA,MACAnB,EAAA,OAAAmB,EAAA,KACAnB,EAAA,OAAAoB,EAAA,QACAZ,EAAA,MAEA,OAAAT,GAGAhf,QAAAue,WAAA,cAAA,SAAAxb,GAEA,IAAAqc,EAAApf,QAAAue,WAAAc,YAAAtc,EAAA,QACA/C,QAAAue,WAAAe,mBAAA,IAGA,MAAA,OAFAtf,QAAAue,WAAAK,YAAAM,QACAnc,EAAA0W,cAAA,OAAAzZ,QAAAuH,UAAA4X,WACA,MAAAC,EAAA,OCvGApf,QAAAugB,OAAApL,KAAA,SAAAhS,GAIAnD,QAAAugB,OAAAC,KAAAhc,KAAA8b,OAAA,SAEAtgB,QAAAugB,OAAA/B,aAAAC,OAAAC,OAAA,MAGA1e,QAAAugB,OAAA5B,eAAAF,OAAAC,OAAA,MAEA1e,QAAAugB,OAAA3B,YAIA5e,QAAAugB,OAAA3B,YAAAC,QAHA7e,QAAAugB,OAAA3B,YACA,IAAA5e,QAAA8H,MAAA9H,QAAAugB,OAAAzB,kBAYA9e,QAAAugB,OAAAxB,OAAA,SAAAlQ,GAMA,MAAA,KAJAA,EAAAA,EAAAnH,QAAA,MAAA,QACAA,QAAA,MAAA,QACAA,QAAA,MAAA,OACAA,QAAA,KAAA,QACA,KNnCA1H,QAAAue,WAAA,SAAA,SAAAxb,GAMA,QALA/C,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAkC,eAAA,OAGA,KAFAzgB,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAmC,aAAA,OAEA1gB,QAAAue,WAAAoC,eAIA3gB,QAAAue,WAAA,iBAAA,SAAAxb,GAKA,QAJA/C,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAkC,eAAA,OAEA,IADA1d,EAAA0W,cAAA,QAEAzZ,QAAAue,WAAAoC,eAIA3gB,QAAAue,WAAA,iBAAA,SAAAxb,GAOA,OANA/C,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAkC,eAAA,OAIA,IAHA1d,EAAA0W,cAAA,QAGA,OAFAzZ,QAAAugB,OAAAlB,YAAAtc,EAAA,MACA/C,QAAAugB,OAAAG,aAAA,OACA,OAKA1gB,QAAAue,WAAA,kBAAA,SAAAxb,GACA/C,QAAAue,WAAAc,YAAAtc,EAAA,OAAA/C,QAAAue,WAAAoC,cAIA,IAJA,IAEA3B,EAAA,IAAA4B,MAAA7d,EAAAqT,YAEAyK,EAAA,EAAAA,EAAA9d,EAAAqT,WAAAyK,IAAA,CACA,IAAAC,EAAA/d,EAAA0W,cAAA,MAAAoH,GACApR,EAAAzP,QAAAue,WAAAc,YAAAtc,EAAA,QAAA8d,EACA7gB,QAAAue,WAAAmC,aAAA,MACA1B,EAAA6B,GAAAC,EAAA,KAAArR,EAGA,OADAuP,EAAA,WAAAA,EAAA+B,KAAA,MAAA,KACA/gB,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,UAAA,SAAAxb,GAIA,OADA,gBAFA/C,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAkC,eAAA,OACA,IACAzgB,QAAAue,WAAAoC,eCjDA3gB,QAAAue,WAAA,UAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNASA,OADA,wBACAxe,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,eAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNAQAxe,QAAAue,WAAAC,aAAA,WAAA,gTAWA,OADA,yBACAxe,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,WAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNAQAxe,QAAAue,WAAAC,aAAA,WAAA,wDAMA,OADA,eACAxe,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,WAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNAQAxe,QAAAue,WAAAC,aAAA,WAAA,gTAWA,OADA,eACAxe,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,WAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNASA,OADA,cACAxe,QAAAue,WAAAoC,eAGA3gB,QAAAue,WAAA,eAAA,SAAAxb,GACA/C,QAAAue,WAAAC,aAAA,YAAA,oNAQAxe,QAAAue,WAAAC,aAAA,eAAA,uLAQA,OADA,mBACAxe,QAAAue,WAAAoC,eC3GA3gB,QAAAue,WAAA,aAAA,SAAAxb,GAMA,OAJA/C,QAAAue,WAAAK,YAAAM,QAAAnc,EAAA0W,cAAA,OACAzZ,QAAAuH,UAAA4X,WAGA,UAFAnf,QAAAue,WAAAc,YAAAtc,EAAA,OACA/C,QAAAue,WAAAmC,aAAA,OACA,QAGA1gB,QAAAue,WAAA,iBAAA,SAAAxb,GAiBA,OAZA/C,QAAAue,WAAAC,aAAA,eAAA,kKAUAxe,QAAAue,WAAAK,YAAAM,QAAAnc,EAAA0W,cAAA,OACAzZ,QAAAuH,UAAA4X,WACA,4BK1BAnf,QAAAue,WAAA,oBAAA,SAAAxb,GAEA,GAAAA,EAAAie,SAAA,SAEA,IAAAC,EAAAC,OAAAC,OAAApe,EAAA0W,cAAA,gBAGAwH,EAAAjhB,QAAAue,WAAAc,YAAAtc,EAAA,QACA/C,QAAAue,WAAAe,mBAAA,IAEA,IAAAG,EAAAzf,QAAAue,WAAAmB,gBAAA3c,EAAA,MACA0c,EAAAzf,QAAAue,WAAAoB,YAAAF,EAAA1c,EAAA8N,IACA,IAAAmO,EAAA,GACAoC,EAAAphB,QAAAue,WAAAK,YAAAuB,gBACA,OAAAngB,QAAAuH,UAAA4X,WACAiB,EAAAa,EACAA,EAAAf,MAAA,UAAAlgB,QAAA4f,SAAAqB,KAGAjC,GAAA,QAFAoB,EAAApgB,QAAAue,WAAAK,YAAAuB,gBACA,aAAAngB,QAAAuH,UAAA4X,YACA,MAAA8B,EAAA,OAMA,OAJAjC,GAAA,YAAAoC,EAAA,SACAA,EAAA,MAAAhB,EAAA,KACAgB,EAAA,UACA3B,EAAA,OAIAzf,QAAAue,WAAA,gBACAve,QAAAue,WAAA,oBC7BAve,QAAAue,WAAA,YAAA,SAAAxb,GAEA,IAAAqc,EAAApf,QAAAue,WAAAc,YAAAtc,EAAA,QACA/C,QAAAue,WAAA8C,iBAAA,IACAC,EAAAthB,QAAAue,WAAAK,YAAAM,QACAnc,EAAA0W,cAAA,OAAAzZ,QAAAuH,UAAA4X,WAOA,OANAmC,EAAA,cAAAA,EAAA,kBAAAA,EACA,WAAAlC,EAAA,OAGA,qBAAArc,EAAA8N,GAAA,MAAAyQ,EAAA,MAAAA,EAAA,UJVAthB,QAAAue,WAAA,iBAAAve,QAAAue,WAAA,WVAAve,QAAAue,WAAA,cAAA,SAAAxb,GAEA,IAAAqc,EAAApf,QAAAue,WAAAc,YAAAtc,EAAA,QACA/C,QAAAue,WAAAe,mBAAA,IACAgC,EAAAthB,QAAAue,WAAAK,YAAAM,QACAnc,EAAA0W,cAAA,OAAAzZ,QAAAuH,UAAA4X,WAMA,OALAmC,EAAA,MAAAlC,EAAA,OAGA,qBAAArc,EAAA8N,GAAA,MAAAyQ,EAAA,MAAAA,EAAA,UMTAthB,QAAAugB,OAAA,SAAA,SAAAxd,GAMA,QALA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAE,eAAA,OAGA,KAFAzgB,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAG,aAAA,OACA,IACA1gB,QAAAugB,OAAAI,eAIA3gB,QAAAugB,OAAA,iBAAA,SAAAxd,GAKA,QAJA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAE,eAAA,OAEA,IADAzgB,QAAAugB,OAAAxB,OAAAhc,EAAA0W,cAAA,SACA,IACAzZ,QAAAugB,OAAAI,eAIA3gB,QAAAugB,OAAA,iBAAA,SAAAxd,GAOA,OANA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAE,eAAA,OAIA,IAHAzgB,QAAAugB,OAAAxB,OAAAhc,EAAA0W,cAAA,SAGA,QAFAzZ,QAAAugB,OAAAlB,YAAAtc,EAAA,MACA/C,QAAAugB,OAAAG,aAAA,OACA,MAKA1gB,QAAAugB,OAAA,kBAAA,SAAAxd,GACA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OAAA/C,QAAAugB,OAAAI,cAIA,IAJA,IAEA3B,EAAA,IAAA4B,MAAA7d,EAAAqT,YAEAyK,EAAA,EAAAA,EAAA9d,EAAAqT,WAAAyK,IAAA,CACA,IAAAC,EAAA9gB,QAAAugB,OAAAxB,OAAAhc,EAAA0W,cAAA,MAAAoH,IACApR,EAAAzP,QAAAugB,OAAAlB,YAAAtc,EAAA,QAAA8d,EACA7gB,QAAAugB,OAAAG,aAAA,MACA1B,EAAA6B,GAAAC,EAAA,KAAArR,EAGA,OADAuP,EAAA,IAAAA,EAAA+B,KAAA,MAAA,IACA/gB,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,UAAA,SAAAxd,GAIA,QAHA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAE,eAAA,OACA,UACAzgB,QAAAugB,OAAAI,eCjDA3gB,QAAAugB,OAAA,UAAA,SAAAxd,GAEA,OADA,eACA/C,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,eAAA,SAAAxd,GAEA/C,QAAAugB,OAAA/B,aAAA,WAAA,aACAxe,QAAAugB,OAAA/B,aAAA,8BAAA,gCACAxe,QAAAugB,OAAA/B,aAAA,WAAA,qPAWA,OADA,oBACAxe,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,WAAA,SAAAxd,GACA/C,QAAAugB,OAAA/B,aAAA,WAAA,aAEA,OADA,oBACAxe,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,WAAA,SAAAxd,GACA/C,QAAAugB,OAAA/B,aAAA,WAAA,aACAxe,QAAAugB,OAAA/B,aAAA,8BAAA,gCACAxe,QAAAugB,OAAA/B,aAAA,WAAA,qPAWA,OADA,eACAxe,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,WAAA,SAAAxd,GACA/C,QAAAugB,OAAA/B,aAAA,WAAA,aAEA,OADA,4BACAxe,QAAAugB,OAAAI,eAGA3gB,QAAAugB,OAAA,eAAA,SAAAxd,GAEA,OADA,kCACA/C,QAAAugB,OAAAI,eCtDA3gB,QAAAugB,OAAA,aAAA,SAAAxd,GAMA,OAJA/C,QAAAugB,OAAA3B,YAAAM,QAAAnc,EAAA0W,cAAA,OACAzZ,QAAAuH,UAAA4X,WAGA,YAFAnf,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAG,aAAA,OACA,OAGA1gB,QAAAugB,OAAA,iBAAA,SAAAxd,GAGA,OAFA/C,QAAAugB,OAAA3B,YAAAM,QAAAnc,EAAA0W,cAAA,OACAzZ,QAAAuH,UAAA4X,WACA,aKZAnf,QAAAugB,OAAA,oBAAA,SAAAxd,GAEA,GAAAA,EAAAie,SAAA,SAEA,IAAAC,EAAAC,OAAAtK,SAAA7T,EAAA0W,cAAA,SAAA,UAGAwH,EAAAjhB,QAAAugB,OAAAlB,YAAAtc,EAAA,QACA/C,QAAAugB,OAAAG,aAAA,IAGAO,EADAjhB,QAAA4f,SAAAqB,GACArK,SAAAqK,EAAA,IAEA,OAAAA,EAAA,IAEA,IAAAxB,EAAAzf,QAAAugB,OAAAb,gBAAA3c,EAAA,MAMA,OALA0c,EAAAzf,QAAAugB,OAAAZ,YAAAF,EAAA1c,EAAA8N,KACA7Q,QAAAugB,OAAAC,KAGA,OAFAxgB,QAAAugB,OAAA3B,YAAAuB,gBACA,OAAAngB,QAAAuH,UAAA4X,WACA,aAAA8B,EAAA,OAAAxB,GAIAzf,QAAAugB,OAAA,gBAAAvgB,QAAAugB,OAAA,oBHxBAvgB,QAAAugB,OAAA,iBAAA,SAAAxd,GAIA,MAAA,UAFA/C,QAAAugB,OAAAlB,YAAAtc,EAAA,OACA/C,QAAAugB,OAAAG,aAAA,MACA","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\nBlockly.genUid.soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nBlockly.eventsBound = [];\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}