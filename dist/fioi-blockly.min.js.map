{"version":3,"sources":["base.js","block.js","block_svg.js","blockly.js","dropdowndiv.js","field_label.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","helpHooks","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","Block","prototype","jsonInit","json","goog","asserts","assert","undefined","this","setColour","i","interpolate_","setInputsInline","setOutput","setPreviousStatement","setNextStatement","setTooltip","setHelpUrl","setOutputShape","setCheckboxInFlyout","setCategory","setTextStyle","getTextStyle","textStyle_","style","BlockSvg","originalShowContextMenu_","showContextMenu_","helpUrl","exists","apply","arguments","showHelp_","display","url","isFunction","window","open","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","backgroundColour","borderColour","backgroundColor","borderColor","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldLabel","origInit","init","sourceBlock_","textElement_","FieldNumber","showEditor_","opt_quietInput","workspace_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","fontSize","spellcheck_","FieldTextInput","FONTSIZE","that","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","initial","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","noifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","TEXT_STR_TITLE","TEXT_STR_TOOLTIP","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","appendValueInput","setCheck","appendField","newQuote_","file","FieldImage","appendDummyInput","appendStatementInput","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","OUTPUT_SHAPE_HEXAGONAL","lists","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","hasReturnValue_","Number","legal","FUNCTION_TYPES","getSurroundParent","setWarningText","PROCEDURES_IFRETURN_WARNING","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","assertObject","addClass_","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Set to null to use the default help behavior\n// Set to false to disable help completely (the button still displays)\n// Set to an object with two functions to enable custom help:\n// * exists : function(block) { return true/false; }\n// * display : function(block) { ... }\nFioiBlockly.helpHooks = false;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.Block.prototype.jsonInit = function (json) {\n    // Validate inputs.\n    goog.asserts.assert(json['output'] == undefined ||\n        json['previousStatement'] == undefined,\n        'Must not have both an output and a previousStatement.');\n\n    // Set basic properties of block.\n    if (json['colour'] !== undefined) {\n        this.setColour(json['colour'], json['colourSecondary'], json['colourTertiary']);\n    }\n\n    // Interpolate the message blocks.\n    var i = 0;\n    while (json['message' + i] !== undefined) {\n        this.interpolate_(json['message' + i], json['args' + i] || [],\n            json['lastDummyAlign' + i]);\n        i++;\n    }\n\n    if (json['inputsInline'] !== undefined) {\n        this.setInputsInline(json['inputsInline']);\n    }\n    // Set output and previous/next connections.\n    if (json['output'] !== undefined) {\n        this.setOutput(true, json['output']);\n    }\n    if (json['previousStatement'] !== undefined) {\n        this.setPreviousStatement(true, json['previousStatement']);\n    }\n    if (json['nextStatement'] !== undefined) {\n        this.setNextStatement(true, json['nextStatement']);\n    }\n    if (json['tooltip'] !== undefined) {\n        this.setTooltip(json['tooltip']);\n    }\n    if (json['helpUrl'] !== undefined) {\n        this.setHelpUrl(json['helpUrl']);\n    }\n    if (json['outputShape'] !== undefined && this.setOutputShape) {\n        this.setOutputShape(json['outputShape']);\n    }\n    if (json['checkboxInFlyout'] !== undefined && this.setCheckboxInFlyout) {\n        this.setCheckboxInFlyout(json['checkboxInFlyout']);\n    }\n    if (json['category'] !== undefined && this.setCategory) {\n        this.setCategory(json['category']);\n    }\n    if (json['textStyle'] !== undefined) {\n        this.setTextStyle(json['textStyle']);\n    }\n};\n\nBlockly.Block.prototype.getTextStyle = function () {\n    return this.textStyle_ || '';\n}\n\nBlockly.Block.prototype.setTextStyle = function (style) {\n    this.textStyle_ = style;\n}","Blockly.BlockSvg.prototype.originalShowContextMenu_ = Blockly.BlockSvg.prototype.showContextMenu_;\n\nBlockly.BlockSvg.prototype.showContextMenu_ = function () {\n    if (FioiBlockly.helpHooks === false) {\n        this.helpUrl = null;\n    } else if (FioiBlockly.helpHooks) {\n        this.helpUrl = FioiBlockly.helpHooks.exists(this) && '#';\n    }\n    this.originalShowContextMenu_.apply(this, arguments);\n};\n\nBlockly.BlockSvg.prototype.showHelp_ = function () {\n    if (FioiBlockly.helpHooks) {\n        return FioiBlockly.helpHooks.display(this);\n    }\n    var url = goog.isFunction(this.helpUrl) ? this.helpUrl() : this.helpUrl;\n    if (url) {\n        window.open(url);\n    }\n};","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldLabel.prototype.origInit = Blockly.FieldLabel.prototype.init;\nBlockly.FieldLabel.prototype.init = function () {\n    this.origInit();\n    var style = this.sourceBlock_.getTextStyle();\n    if (style) {\n        this.textElement_.setAttribute('style', style);\n    }\n}","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","Blockly.Python['procedures_return'] = function (block) {\n    // Conditionally return value from a procedure.\n    if (block.hasReturnValue_) {\n        var value = Blockly.Python.valueToCode(block, 'VALUE',\n            Blockly.Python.ORDER_NONE) || 'None';\n        return 'return ' + value + '\\n';\n    } else {\n        return 'return\\n';\n    }\n};\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.TEXT_STR_TITLE = \"convert to text %1\";\nFioiBlockly.Msg.en.TEXT_STR_TOOLTIP = \"Convert a value to text.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.TEXT_STR_TITLE = \"convertir en texte %1\";\nFioiBlockly.Msg.fr.TEXT_STR_TOOLTIP = \"Convertir une valeur en texte.\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","FioiBlockly.Msg.nl = {};\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = 'element';\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = 'leeg woordenboek';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = 'sleutel';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = 'sleutel/waarde';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICT_GET = 'de sleutel ophalen';\nFioiBlockly.Msg.nl.DICT_GET_TO = 'van';\nFioiBlockly.Msg.nl.DICT_KEYS = 'lijst van de sleutels van';\nFioiBlockly.Msg.nl.DICT_SET_TITLE = 'de sleutel toewijzen';\nFioiBlockly.Msg.nl.DICT_SET_OF = 'van het woordenboek';\nFioiBlockly.Msg.nl.DICT_SET_TO = 'aan';\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = 'de regel weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, gevolgd door een regeleinde.';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = 'weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, zonder regeleinde.';\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = 'evalueren';\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = 'Evalueert de opgegeven rekenkundige bewerking.';\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Opgelet : %1 ; dit blok zal terugkeren 'fout' !\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"de puntkomma ';' is niet toegestaan\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = 'de uitdrukking is syntactisch niet geldig';\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = 'dit type uitdrukking (%1) is niet toegestaan';\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"deze uitdrukking gebruikt een ongedefinieerde '%1' variabele\";\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = 'voeg element %2 toe aan lijst %1';\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Voeg een element toe aan de lijst '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = 'Lijstgrootte te groot: %1 > maximaal toegestane grootte %2';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = 'in het begin';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = 'aan de index vanaf het einde ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = 'aan de index  ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = 'de waarde bekomen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = 'de waarde bekomen en wissen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = 'op het einde';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = 'naar een willekeurige hint';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = 'de waarde wissen';\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = 'invoegen';\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = 'stuur het gesorteerde terug %1 %2 van de lijst %3';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = 'de lijst sorteren %1 ter plaatse';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Sorteer de lijst ' %1' en wijzig ze onmiddellijk.\";\nFioiBlockly.Msg.nl.INPUT_NUM = 'één enkel getal op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = 'Leest één enkel getal op één regel, op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = 'een lijst met getallen op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = 'Leest een lijst getallen op één regel, uit de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = 'een getal lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = 'Leest het volgende getal op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_CHAR = 'Een karakter lezen';\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = 'Leest een karakter op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_WORD = 'een woord lezen';\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = 'Leest een woord op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_LINE = 'een regel lezen';\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = 'Leest een regel op de programma-invoer.';\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variabele '%1', gebruikt door procedure '%2', kan niet worden verwijderd.\";\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = 'vervang het element %1 in lijst %2 door %3';\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = 'element %1 in %2';\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = 'initialiseer lijst %1 met %2 herhaald %3 keer';\nFioiBlockly.Msg.nl.INVALID_NAME = \"Ongeldige naam, gebruik alleen letters, letters met Franse accenten, cijfers (behalve als eerste teken) en underscore '_'.\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT = 'initialiseer de 2D-tabel %1 met %2 rijen en %3 kolommen die %4 bevatten';\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen en kolommen en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_2D_SET = 'in %1[%2] [%3] zet %4';\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = 'Zet de waarde in het veld [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_2D_GET = '%1[%2] [%3]';\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = 'Haal de waarde op uit het veld [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_3D_INIT = 'initialiseer de 3D-tabel %1 met %2 lagen, %3 rijen, %4 kolommen met %5';\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen, kolommen en niveaus en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_3D_SET = 'in %1[%2] [%3] [%4] zet %5';\nFioiBlockly.Msg.nl.TABLES_3D_GET = '%1[%2] [%3] [%4]';\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = 'Haal de waarde op uit het vak [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = 'tabel';\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = 'Afmetingen van de tabel te groot!';\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = 'Poging tot toegang tot een veld buiten de tabel!';\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = '//';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = 'Geeft het gehele getal van de deling van de twee getallen.';","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n\nBlockly.Python['text_str'] = function (block) {\n  var expr = Blockly.JavaScript.valueToCode(block, 'EXPR', Blockly.JavaScript.ORDER_NONE) || 'null';\n  return 'str(' + expr + ')';\n}","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}