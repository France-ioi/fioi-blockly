{"version":3,"sources":["base.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","tables.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","RTL","widgetDispose_","DIV","htmlInput","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","that","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","sl","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","inputsInline","TABLES_2D_SET_TOOLTIP","output","outputShape","OUTPUT_SHAPE_ROUND","texts","helpUrl","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","Array","n","join","array","element","ORDER_COMMA","repeatCount","ORDER_FUNCTION_CALL","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","blockVarName","at1","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      });\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}