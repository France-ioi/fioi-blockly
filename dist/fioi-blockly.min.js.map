{"version":3,"sources":["base.js","blockly.js","dropdowndiv.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","window","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldNumber","prototype","showEditor_","opt_quietInput","workspace_","sourceBlock_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","spellcheck_","fontSize","FieldTextInput","FONTSIZE","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","that","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","flyoutOptions","disableArgs","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","setScrollViewSize_","xCoordinate","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","addEventListener","bindData","eventName","touchWrapFunc","preventDefault","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","checkAst","state","allowedTypes","msg","EVAL_ERROR_TYPE","object","end","property","variableList","EVAL_ERROR_VAR","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","full","reindexExpression","getReindexes","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","wasInvalid","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","matrixTransform","getCanvas","getCTM","inverse","canvas","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","open","file","FieldImage","setPreviousStatement","setNextStatement","appendDummyInput","appendStatementInput","setTooltip","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","helpUrl","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","asserts","assertObject","addClass_","setWarningText","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","undefined","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","key","n","array","element","ORDER_COMMA","repeatCount","ORDER_FUNCTION_CALL","cacheList","list","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","getField","repeats","Number","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","incrCode","reportCode","blockVarName","at1","at2","at3","expr","reindexExpr","assignCode","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      });\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    if(!Blockly.Procedures.flyoutOptions.disableArgs) {\n      this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    }\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}