{"version":3,"sources":["base.js","block.js","block_svg.js","blockly.js","dropdowndiv.js","field_label.js","field_number.js","field_variable.js","names.js","procedures.js","scrollbar.js","touch.js","trashcan.js","utils.js","variables.js","workspace.js","workspace_svg.js","zoom_controls.js","de.js","en.js","es.js","fr.js","it.js","nl.js","sl.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","math.js","tables.js","text.js","javascript.js","python.js","loops.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","langErrorDisplayed","maxListSize","helpHooks","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","Block","prototype","jsonInit","json","goog","asserts","assert","undefined","this","setColour","i","interpolate_","setInputsInline","setOutput","setPreviousStatement","setNextStatement","setTooltip","setHelpUrl","setOutputShape","setCheckboxInFlyout","setCategory","setTextStyle","getTextStyle","textStyle_","style","BlockSvg","terminateDragCallback","originalShowContextMenu_","showContextMenu_","helpUrl","exists","apply","arguments","showHelp_","display","url","isFunction","window","open","originalTerminateDrag","terminateDrag","dragMode_","DRAG_FREE","e","copy_","block","xmlBlock","Xml","blockToDom","xy","getRelativeToSurfaceXY","setAttribute","RTL","x","y","clipboardXml_","clipboardSource_","workspace","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","backgroundColour","borderColour","backgroundColor","borderColor","category","showPositionedByBlock","owner","opt_onHide","opt_secondaryYOffset","scale","bBox","width","height","blockSvg","getSvgRoot","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","removeListener","Touch","clearTouchIdentifier","unbindEvent_","addListener","bindEventWithChecks_","hideIfNotShowing","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","opacity","dx","finalX","dy","finalY","renderX","renderY","boundPosition","boundSize","getSize","divSize","renderedSecondary","Math","max","min","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldLabel","origInit","init","sourceBlock_","textElement_","FieldNumber","showEditor_","opt_quietInput","workspace_","quietInput","quickAlgoInterface","displayKeypad","userAgent","MOBILE","ANDROID","IPAD","newValue","prompt","CHANGE_VALUE_TITLE","text_","callValidator","setValue","WidgetDiv","widgetDispose_","DIV","htmlInput","TagName","INPUT","fontSize","spellcheck_","FieldTextInput","FONTSIZE","that","className","htmlInput_","value","defaultValue","oldValue_","validate_","resizeEditor_","focus","select","posTop","parseInt","posLeft","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","onHtmlInputChange_","validated","minimum","min_","maximum","max_","precision","precision_","onKeyDownWrapper_","onHtmlInputKeyDown_","onKeyUpWrapper_","onKeyPressWrapper_","onWorkspaceChangeWrapper_","bind","onInputWrapper_","addChangeListener","FieldVariable","classValidator","text","oldVar","RENAME_VARIABLE","getText","hideChaff","Variables","promptName","RENAME_VARIABLE_TITLE","replace","renameVariable","DELETE_VARIABLE","deleteVariable","Names","safeName_","name","newname","encodeURI","Procedures","resetFlyoutOptions","initial","flyoutOptions","disableArgs","inlineArgs","includedBlocks","noret","ret","ifret","noifret","flyoutCategory","incl","xmlList","populateProcedures","procedureList","templateName","args","mutation","j","arg","push","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","scrollbarThickness","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","xCoordinate","pair_","setScrollViewSize_","absoluteLeft","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","handlePosition","setHandleLength_","viewLeft","contentLeft","setHandlePosition","constrainHandle_","events","BrowserFeature","TOUCH_ENABLED","TOUCH_MAP","mousedown","mousemove","mouseup","onMouseUp_","getMainWorkspace","DRAG_NONE","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","onMouseMoveWrapper_","trashcanScale","Trashcan","getMetrics","left_","MARGIN_SIDE_","toolboxPosition","TOOLBOX_AT_LEFT","toolbox_","WIDTH_","TOOLBOX_AT_RIGHT","top_","BODY_HEIGHT_","LID_HEIGHT_","bottom_","TOOLBOX_AT_BOTTOM","flyoutHeight","svgGroup_","genUid","utils","soup_","eventsBound","node","thisObject","func","opt_noCaptureIdentifier","wrapFunc","string","startsWith","type","touchDetected","event","captureIdentifier","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","handled","bindData","addEventListener","touchWrapFunc","preventDefault","eventName","removeEvents","eData","removeEventListener","documentEventsBound_","validateExpression","acorn","walk","EVAL_ERROR_SEMICOLON","ast","parse","EVAL_ERROR_SYNTAX","msg","variableList","allowedTypes","full","state","object","end","property","EVAL_ERROR_VAR","EVAL_ERROR_TYPE","reindexExpression","reindexes","newText","start","slice","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","newVarIdx","idx","splice","sort","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","shadowBlock","numberField","createMathNumberDom_","NEW_VARIABLE_TITLE","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","promptText","defaultText","callback","wasInvalid","cb","newVar","fullPromptText","INVALID_NAME","UNDO","Workspace","remainingCapacity","maxBlocks","allBlocks","getAllBlocks","nbBlocks","substring","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","zoom","speed","zoomOptions","scaleSpeed","center","createSVGPoint","canvas","matrixTransform","getCanvas","getCTM","inverse","scaleChange","newScale","maxScale","minScale","scrollbar","matrix","scrollX","scrollY","f","setScale","traceOn","armed","traceOn_","traceWrapper_","zoomControlsScale","ZoomControls","HEIGHT_","en","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","DICT_SET_TITLE","DICT_SET_OF","DICT_SET_TO","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","LISTS_SORT_TITLE","LISTS_SORT_PLACE_MSG","LISTS_SORT_PLACE_TOOLTIP","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_NUM_LIST","INPUT_NUM_LIST_TOOLTIP","INPUT_NUM_NEXT","INPUT_NUM_NEXT_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","TEXT_STR_TITLE","TEXT_STR_TOOLTIP","MATH_DIVISIONFLOOR_SYMBOL","MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR","es","TEXT_EVAL_TITLE","TEXT_EVAL_TOOLTIP","TEXT_EVAL_INVALID","LISTS_CREATE_WITH_TOO_LARGE","TABLES_2D_INIT","TABLES_2D_INIT_TOOLTIP","TABLES_2D_SET","TABLES_3D_SET_TOOLTIP","TABLES_2D_GET","TABLES_2D_GET_TOOLTIP","TABLES_3D_INIT","TABLES_3D_INIT_TOOLTIP","TABLES_3D_SET","TABLES_3D_GET","TABLES_3D_GET_TOOLTIP","TABLES_VAR_NAME","TABLES_TOO_BIG","TABLES_OUT_OF_BOUNDS","fr","it","nl","sl","LISTS_SORT_TYPE_NUMERIC","LISTS_SORT_TYPE_TEXT","LISTS_SORT_TYPE_IGNORECASE","fillLanguage","dicts","HUE","appendValueInput","setCheck","appendField","newQuote_","file","FieldImage","appendDummyInput","appendStatementInput","contextMenu","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","obtain","connection","initSvg","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","OUTPUT_SHAPE_HEXAGONAL","lists","message0","args0","variable","check","previousStatement","nextStatement","colour","Colours","data","primary","colourSecondary","secondary","colourTertiary","tertiary","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","MATH_ADDITION_SYMBOL","MATH_SUBTRACTION_SYMBOL","MATH_MULTIPLICATION_SYMBOL","MATH_DIVISION_SYMBOL","MATH_POWER_SYMBOL","inputsInline","output","math","MATH_ARITHMETIC_HELPURL","ADD","MATH_ARITHMETIC_TOOLTIP_ADD","MINUS","MATH_ARITHMETIC_TOOLTIP_MINUS","MULTIPLY","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","DIVIDE","MATH_ARITHMETIC_TOOLTIP_DIVIDE","DIVIDEFLOOR","POWER","MATH_ARITHMETIC_TOOLTIP_POWER","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","hasReturnValue_","Number","legal","FUNCTION_TYPES","getSurroundParent","setWarningText","PROCEDURES_IFRETURN_WARNING","tables","TABLES_2D_SET_TOOLTIP","outputShape","OUTPUT_SHAPE_ROUND","texts","TEXT_PRINT_HELPURL","textInput","msgTimeout","validationMsg","assertObject","addClass_","removeClass_","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","RESERVED_WORDS_","externalFunctions","quote_","code","endVar","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","incVar","INDENT","Python","PASS","blockToCodeUnaltered","blockToCode","opt_thisOnly","pyfeAltered","sortedBlocksList","codeOfBlock","String","blocksToCommentedCode","codeGenerator","codeLines","split","blocksAtLines","Array","firstLine","lastLineStack","iEvent","blockId","pop","blockCode","iLine","trim","lastLine","startAt","iCodeLine","blockIsHere","iBlockLine","join","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","n","key","array","ORDER_COMMA","ORDER_FUNCTION_CALL","list","cacheList","listVar","at","getAdjusted","ORDER_SUBTRACTION","xVar","repeats","getField","loopVar","ORDER_ADDITION","ORDER_MULTIPLICATION","ORDER_DIVISION","operator","order","varName","blockVarName","at1","at2","at3","expr","reindexExpr","makeAssignIndex","l","a","v","getAdjustedInt","ORDER_ADDITIVE","ORDER_MULTIPLICATIVE","ORDER_EXPONENTIATION"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\nFioiBlockly.langErrorDisplayed = {};\n\nFioiBlockly.maxListSize = 100;\n\n// Set to null to use the default help behavior\n// Set to false to disable help completely (the button still displays)\n// Set to an object with two functions to enable custom help:\n// * exists : function(block) { return true/false; }\n// * display : function(block) { ... }\nFioiBlockly.helpHooks = false;\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang] && !FioiBlockly.langErrorDisplayed[lang]) {\n    console.error(\"Language \"+lang+\" doesn't exist in fioi-blockly!\");\n    FioiBlockly.langErrorDisplayed[lang] = true; // Avoid spamming console\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","Blockly.Block.prototype.jsonInit = function (json) {\n    // Validate inputs.\n    goog.asserts.assert(json['output'] == undefined ||\n        json['previousStatement'] == undefined,\n        'Must not have both an output and a previousStatement.');\n\n    // Set basic properties of block.\n    if (json['colour'] !== undefined) {\n        this.setColour(json['colour'], json['colourSecondary'], json['colourTertiary']);\n    }\n\n    // Interpolate the message blocks.\n    var i = 0;\n    while (json['message' + i] !== undefined) {\n        this.interpolate_(json['message' + i], json['args' + i] || [],\n            json['lastDummyAlign' + i]);\n        i++;\n    }\n\n    if (json['inputsInline'] !== undefined) {\n        this.setInputsInline(json['inputsInline']);\n    }\n    // Set output and previous/next connections.\n    if (json['output'] !== undefined) {\n        this.setOutput(true, json['output']);\n    }\n    if (json['previousStatement'] !== undefined) {\n        this.setPreviousStatement(true, json['previousStatement']);\n    }\n    if (json['nextStatement'] !== undefined) {\n        this.setNextStatement(true, json['nextStatement']);\n    }\n    if (json['tooltip'] !== undefined) {\n        this.setTooltip(json['tooltip']);\n    }\n    if (json['helpUrl'] !== undefined) {\n        this.setHelpUrl(json['helpUrl']);\n    }\n    if (json['outputShape'] !== undefined && this.setOutputShape) {\n        this.setOutputShape(json['outputShape']);\n    }\n    if (json['checkboxInFlyout'] !== undefined && this.setCheckboxInFlyout) {\n        this.setCheckboxInFlyout(json['checkboxInFlyout']);\n    }\n    if (json['category'] !== undefined && this.setCategory) {\n        this.setCategory(json['category']);\n    }\n    if (json['textStyle'] !== undefined) {\n        this.setTextStyle(json['textStyle']);\n    }\n};\n\nBlockly.Block.prototype.getTextStyle = function () {\n    return this.textStyle_ || '';\n}\n\nBlockly.Block.prototype.setTextStyle = function (style) {\n    this.textStyle_ = style;\n}","Blockly.BlockSvg.terminateDragCallback = null;\n\nBlockly.BlockSvg.prototype.originalShowContextMenu_ = Blockly.BlockSvg.prototype.showContextMenu_;\n\nBlockly.BlockSvg.prototype.showContextMenu_ = function () {\n    if (FioiBlockly.helpHooks === false) {\n        this.helpUrl = null;\n    } else if (FioiBlockly.helpHooks) {\n        this.helpUrl = FioiBlockly.helpHooks.exists(this) && '#';\n    }\n    this.originalShowContextMenu_.apply(this, arguments);\n};\n\nBlockly.BlockSvg.prototype.showHelp_ = function () {\n    if (FioiBlockly.helpHooks) {\n        return FioiBlockly.helpHooks.display(this);\n    }\n    var url = goog.isFunction(this.helpUrl) ? this.helpUrl() : this.helpUrl;\n    if (url) {\n        window.open(url);\n    }\n};\n\nBlockly.BlockSvg.originalTerminateDrag = Blockly.BlockSvg.terminateDrag;\n\nBlockly.BlockSvg.terminateDrag = function () {\n    if (Blockly.BlockSvg.terminateDragCallback && Blockly.dragMode_ == Blockly.DRAG_FREE) {\n        try {\n            Blockly.BlockSvg.terminateDragCallback();\n        } catch (e) { }\n    }\n    Blockly.BlockSvg.originalTerminateDrag.apply(this, arguments);\n}","Blockly.copy_ = function(block) {\n  var xmlBlock = Blockly.Xml.blockToDom(block);\n  // Encode start position in XML.\n  var xy = block.getRelativeToSurfaceXY();\n  xmlBlock.setAttribute('x', block.RTL ? -xy.x : xy.x);\n  xmlBlock.setAttribute('y', xy.y);\n  Blockly.clipboardXml_ = xmlBlock;\n  Blockly.clipboardSource_ = block.workspace;\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    Blockly.Touch.clearTouchIdentifier();\n    Blockly.unbindEvent_(Blockly.DropDownDiv.listenerActive);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    Blockly.DropDownDiv.listenerActive = Blockly.bindEventWithChecks_(window, 'mousedown', Blockly.DropDownDiv, Blockly.DropDownDiv.hideIfNotShowing);\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","Blockly.FieldLabel.prototype.origInit = Blockly.FieldLabel.prototype.init;\nBlockly.FieldLabel.prototype.init = function () {\n    this.origInit();\n    var style = this.sourceBlock_.getTextStyle();\n    if (style) {\n        this.textElement_.setAttribute('style', style);\n    }\n}","Blockly.FieldNumber.prototype.showEditor_ = function(opt_quietInput) {\n  this.workspace_ = this.sourceBlock_.workspace;\n  var quietInput = opt_quietInput || false;\n\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    quietInput = true;\n  }\n\n  if (!quietInput && (goog.userAgent.MOBILE || goog.userAgent.ANDROID ||\n                      goog.userAgent.IPAD)) {\n    // Mobile browsers have issues with in-line textareas (focus & keyboards).\n    var newValue = window.prompt(Blockly.Msg.CHANGE_VALUE_TITLE, this.text_);\n    if (this.sourceBlock_) {\n      newValue = this.callValidator(newValue);\n    }\n    this.setValue(newValue);\n    return;\n  }\n\n  Blockly.WidgetDiv.show(this, this.sourceBlock_.RTL, this.widgetDispose_());\n  var div = Blockly.WidgetDiv.DIV;\n  // Create the input.\n  var htmlInput =\n      goog.dom.createDom(goog.dom.TagName.INPUT, 'blocklyHtmlInput');\n  htmlInput.setAttribute('spellcheck', this.spellcheck_);\n  var fontSize =\n      (Blockly.FieldTextInput.FONTSIZE * this.workspace_.scale) + 'pt';\n  div.style.fontSize = fontSize;\n  htmlInput.style.fontSize = fontSize;\n\n  // Scratch compatibility\n  div.className += ' fieldTextInput';\n\n  /** @type {!HTMLInputElement} */\n  Blockly.FieldTextInput.htmlInput_ = htmlInput;\n  div.appendChild(htmlInput);\n\n  htmlInput.value = htmlInput.defaultValue = this.text_;\n  htmlInput.oldValue_ = null;\n  this.validate_();\n  this.resizeEditor_();\n  if (!quietInput) {\n    htmlInput.focus();\n    htmlInput.select();\n  }\n\n  var that = this;\n  if(window.quickAlgoInterface && quickAlgoInterface.displayKeypad) {\n    var posTop = parseInt(Blockly.WidgetDiv.DIV.style.top) + 24;\n    var posLeft = parseInt(Blockly.WidgetDiv.DIV.style.left);\n    posTop = Math.max(posTop, 0);\n    posLeft = Math.max(posLeft, 0);\n    posTop = Math.min(posTop, (window.innerHeight || document.documentElement.clientHeight) - 270);\n    posLeft = Math.min(posLeft, (window.innerWidth || document.documentElement.clientWidth) - 238);\n    quickAlgoInterface.displayKeypad(\n      this.text_,\n      {top: posTop + 'px',\n       left: posLeft + 'px'},\n      function(value) {\n        htmlInput.value = value;\n        that.onHtmlInputChange_({});\n      },\n      function(value, validated) {\n        htmlInput.value = value;\n        if(validated) {\n          Blockly.WidgetDiv.hide();\n        } else {\n          htmlInput.focus();\n          htmlInput.select();\n        }\n      }, {minimum: this.min_, maximum: this.max_, precision: this.precision_});\n       \n  }\n\n  // Bind to keydown -- trap Enter without IME and Esc to hide.\n  htmlInput.onKeyDownWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keydown', this,\n      this.onHtmlInputKeyDown_);\n  // Bind to keyup -- trap Enter; resize after every keystroke.\n  htmlInput.onKeyUpWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keyup', this,\n      this.onHtmlInputChange_);\n  // Bind to keyPress -- repeatedly resize when holding down a key.\n  htmlInput.onKeyPressWrapper_ =\n      Blockly.bindEventWithChecks_(htmlInput, 'keypress', this,\n      this.onHtmlInputChange_);\n  htmlInput.onWorkspaceChangeWrapper_ = this.resizeEditor_.bind(this);\n  // Scratch compatibility\n  htmlInput.onInputWrapper_ = [];\n  this.workspace_.addChangeListener(htmlInput.onWorkspaceChangeWrapper_);\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","// Allow some special characters\nBlockly.Names.prototype.safeName_ = function(name) {\n  if (!name) {\n    return 'unnamed';\n  } else {\n    var newname = '';\n    for(var i=0; i<name.length; i++) {\n      if(i == 0 && '0123456789'.indexOf(name[i]) != -1) {\n      // Most languages don't allow names with leading numbers.\n        newname = 'my_';\n      }\n      if(name[i] == ' ')  {\n        newname += '_';\n      } else if('àâçéèêëïîôùü'.indexOf(name[i]) != -1) {\n        newname += name[i];\n      } else {\n        newname += encodeURI(name[i]).replace(/[^\\w]/g, '_');\n      }\n    }\n    return newname;\n  }\n};\n","Blockly.Python['procedures_return'] = function (block) {\n    // Conditionally return value from a procedure.\n    if (block.hasReturnValue_) {\n        var value = Blockly.Python.valueToCode(block, 'VALUE',\n            Blockly.Python.ORDER_NONE) || 'None';\n        return 'return ' + value + '\\n';\n    } else {\n        return 'return\\n';\n    }\n};\n","// Force thickness to always be 15\nBlockly.Scrollbar.scrollbarThickness = 15;\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Always enable touch events, especially as the detection is bad\n// (computers with a touch screen won't be detected)\ngoog.events.BrowserFeature.TOUCH_ENABLED = true;\nBlockly.Touch.TOUCH_MAP = {\n  'mousedown': ['touchstart'],\n  'mousemove': ['touchmove'],\n  'mouseup': ['touchend', 'touchcancel']\n};\n\n// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","FioiBlockly.trashcanScale = 0.8;\n\nBlockly.Trashcan.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.trashcanScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      (this.BODY_HEIGHT_ + this.LID_HEIGHT_) * FioiBlockly.trashcanScale - this.bottom_;\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.trashcanScale + ')');\n};\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\n\n(Blockly.genUid ? Blockly.genUid : Blockly.utils.genUid).soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nif(!Blockly.eventsBound) {\n  Blockly.eventsBound = [];\n}\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    // Set touchDetected on touch events\n    if(goog.string.startsWith(e.type, 'touch')) {\n       window.touchDetected = true;\n    }\n\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: wrapFunc});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n    Blockly.documentEventsBound_ = false;\n  }\n  Blockly.eventsBound = [];\n}\n\n// Validate contents of the expression block\n// Returns null if the expression is valid\nBlockly.validateExpression = function(text, workspace) {\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't validate expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // acorn parses programs, it won't tell if there's a ';'\n  if(text.indexOf(';') != -1) {\n    // Semi-colon is not allowed\n    return Blockly.Msg.EVAL_ERROR_SEMICOLON;\n  }\n\n  // Parse the expression\n  try {\n    var ast = acorn.parse(text);\n  } catch(e) {\n    // Couldn't parse\n    return Blockly.Msg.EVAL_ERROR_SYNTAX;\n  }\n\n  var msg = null;\n  var variableList = null;\n  var allowedTypes = [\"Literal\", \"Identifier\", \"BinaryExpression\", \"UnaryExpression\", \"ArrayExpression\", \"MemberExpression\", \"ExpressionStatement\", \"Program\"];\n  function checkAst(node, state, type) {\n    if(allowedTypes.indexOf(type) == -1) {\n      // Type is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"MemberExpression\" && (text[node.object.end] != '[' || node.property.end == node.end || text[node.end-1] != ']')) {\n      // This type of MemberExpression is not allowed\n      msg = Blockly.Msg.EVAL_ERROR_TYPE.replace('%1', type);\n      return;\n    }\n\n    if(type == \"Identifier\" && workspace) {\n      // Check if variable is defined\n      if(variableList === null) {\n        variableList = workspace.variableList;\n      }\n      if(variableList && variableList.indexOf(node.name) == -1) {\n        // Variable is not defined\n        msg = Blockly.Msg.EVAL_ERROR_VAR.replace('%1', node.name);\n        return;\n      }\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, checkAst);\n\n  return msg;\n};\n\n// Reindex 1-based array indexes to 0-based\nBlockly.reindexExpression = function(text, workspace) {\n  if(Blockly.validateExpression(text, workspace) !== null) {\n    // We shouldn't be generating code for an invalid block\n    return null;\n  }\n\n  try {\n    var acorn = window.acorn ? window.acorn : require('acorn');\n    var walk = acorn.walk ? acorn.walk : require('acorn-walk');\n  } catch(e) {\n    console.error(\"Couldn't reindex expression as acorn or acorn-walk is missing.\");\n    return null;\n  }\n\n  // Parsing worked for validate, it will work this time too\n  var ast = acorn.parse(text);\n\n  // This array will contain the pairs of positions for '[' and ']'\n  var reindexes = [];\n  var newText = text;\n  function getReindexes(node, state, type) {\n    if(type == \"MemberExpression\") {\n      reindexes.push([node.object.end, node.end-1]);\n    }\n  }\n\n  // Walk the AST\n  walk.full(ast, getReindexes);\n\n  // Apply reindexing\n  for(var i=0; i < reindexes.length; i++) {\n    var start = reindexes[i][0];\n    var end = reindexes[i][1];\n\n    newText = newText.slice(0, start+1) + '(' + newText.slice(start+1, end) + ')-1' + newText.slice(end);\n\n    // Adjust start and end for next reindexes\n    for(var j=i+1; j < reindexes.length; j++) {\n      if(start < reindexes[j][0]) {\n        reindexes[j][0] += 1;\n      }\n      if(start < reindexes[j][1]) {\n        reindexes[j][1] += 1;\n      }\n      if(end < reindexes[j][0]) {\n        reindexes[j][0] += 3;\n      }\n      if(end < reindexes[j][1]) {\n        reindexes[j][1] += 3;\n      }\n    }\n  }\n\n  return newText;\n};\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","Blockly.Workspace.prototype.remainingCapacity = function(maxBlocks) {\n  if(!maxBlocks) {\n    maxBlocks = this.options.maxBlocks;\n  }\n  if (isNaN(maxBlocks)) {\n    return Infinity;\n  }\n  var allBlocks = this.getAllBlocks();\n  var nbBlocks = 0;\n  for(var i = 0; i < allBlocks.length; i++) {\n    var block = allBlocks[i];\n    // Ignore placeholders\n    if(block.type.substring(0, 12) == 'placeholder_') {\n      continue;\n    }\n    nbBlocks++;\n  }\n  return maxBlocks - nbBlocks;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n\n// Change zoom origin to be x = 0, y = 0 instead of the center of the screen\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, type) {\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var metrics = this.getMetrics();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = 0;\n  center.y = 0;\n  center = center.matrixTransform(this.getCanvas().getCTM().inverse());\n  x = center.x;\n  y = center.y;\n  var canvas = this.getCanvas();\n  // Scale factor.\n  var scaleChange = (type == 1) ? speed : 1 / speed;\n  // Clamp scale within valid range.\n  var newScale = this.scale * scaleChange;\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n  if (this.scrollbar) {\n    var matrix = canvas.getCTM()\n        .translate(x * (1 - scaleChange), y * (1 - scaleChange))\n        .scale(scaleChange);\n    // newScale and matrix.a should be identical (within a rounding error).\n    this.scrollX = matrix.e - metrics.absoluteLeft;\n    this.scrollY = matrix.f - metrics.absoluteTop;\n  }\n  this.setScale(newScale);\n};\n\nBlockly.WorkspaceSvg.prototype.traceOn = function(armed) {\n  this.traceOn_ = armed;\n  if (this.traceWrapper_) {\n    Blockly.unbindEvent_(this.traceWrapper_);\n    this.traceWrapper_ = null;\n  }\n  if (armed && this.svgBlockCanvas_) {\n    this.traceWrapper_ = Blockly.bindEventWithChecks_(this.svgBlockCanvas_,\n        'blocklySelectChange', this, function() {this.traceOn_ = false;});\n  }\n};\n","FioiBlockly.zoomControlsScale = 0.8;\n\nBlockly.ZoomControls.prototype.position = function() {\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (this.workspace_.RTL) {\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n      this.left_ += metrics.flyoutWidth;\n      if (this.workspace_.toolbox_) {\n        this.left_ += metrics.absoluteLeft;\n      }\n    }\n  } else {\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ * FioiBlockly.zoomControlsScale - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n\n    if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      this.left_ -= metrics.flyoutWidth;\n    }\n  }\n  this.top_ = metrics.viewHeight + metrics.absoluteTop -\n      this.HEIGHT_ * FioiBlockly.zoomControlsScale - this.bottom_;\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ -= metrics.flyoutHeight;\n  }\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ') scale(' + FioiBlockly.zoomControlsScale + ')');\n};\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"Leeres Wörterbuch\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Wörterbuch erstellen\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"Wörterbuch erstellen aus:\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"gib aus Zeile %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"gib aus %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variable '%1' kann nicht gelöscht werden weil sie von Funktion '%2' genutzt wird.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Ungültiger Name. Erlaubt sind nur Buchstaben, Ziffern (außer als erstes Zeichen) und Unterstriche '_'.\";\n","FioiBlockly.Msg.en = {};\n\nFioiBlockly.Msg.en.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.en.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.en.DICTS_CREATE_EMPTY_TITLE = \"empty dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Create a dictionary\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_INPUT_WITH = \"create a dictionary :\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_KEY = \"ckey\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TITLE = \"key/value\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.en.DICT_GET = \"get the key\";\nFioiBlockly.Msg.en.DICT_GET_TO = \"from\";\nFioiBlockly.Msg.en.DICT_KEYS = \"list of the keys of\";\nFioiBlockly.Msg.en.DICT_SET_TITLE = \"assign to key\";\nFioiBlockly.Msg.en.DICT_SET_OF = \"of dictionary\";\nFioiBlockly.Msg.en.DICT_SET_TO = \"to\";\n\nFioiBlockly.Msg.en.TEXT_PRINT_TITLE = \"print line %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_TOOLTIP = \"Print the text, number or other value, with a newline after.\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TITLE = \"print %1\";\nFioiBlockly.Msg.en.TEXT_PRINT_NOEND_TOOLTIP = \"Print the text, number or other value, without newline.\";\n\nFioiBlockly.Msg.en.TEXT_STR_TITLE = \"convert to text %1\";\nFioiBlockly.Msg.en.TEXT_STR_TOOLTIP = \"Convert a value to text.\";\n\nFioiBlockly.Msg.en.LISTS_APPEND_MSG = \"to the list %1 add the element %2\";\nFioiBlockly.Msg.en.LISTS_APPEND_TOOLTIP = \"Add an element to the list '%1'\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FIRST = \"at the beginning\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_END = \"at the index from the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_FROM_START = \"at the index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET = \"get value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_GET_REMOVE = \"get and remove value\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_LAST = \"at the end\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_RANDOM = \"at a random index\";\nFioiBlockly.Msg.en.LISTS_GET_INDEX_REMOVE = \"remove value\";\nFioiBlockly.Msg.en.LISTS_SET_INDEX_INSERT = \"insert\";\nFioiBlockly.Msg.en.LISTS_SORT_TITLE = \"return the sort %1 %2 of list %3\"\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_MSG = \"sort list %1 in place\";\nFioiBlockly.Msg.en.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\n\nFioiBlockly.Msg.en.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.en.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.en.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.en.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.en.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.en.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.en.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.en.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.en.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.en.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.en.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.en.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.en.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.en.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.en.INVALID_NAME = \"Invalid name, please only use letters, some letters with accents, digits (except as first character), and underscore '_'.\";\n\nFioiBlockly.Msg.en.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.en.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Return the whole part of the division of the two numbers.\";\n","FioiBlockly.Msg.es = {};\n\nFioiBlockly.Msg.es.VARIABLES_DEFAULT_NAME = \"elemento\";\nFioiBlockly.Msg.es.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.es.DICTS_CREATE_EMPTY_TITLE = \"diccionario vacío\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crear un diccionario\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_INPUT_WITH = \"crear un diccionario:\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_KEY = \"llave\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TITLE = \"llave/valor\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.es.DICT_GET = \"recuperar la llave\";\nFioiBlockly.Msg.es.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.es.DICT_KEYS = \"listado de llaves de\";\nFioiBlockly.Msg.es.DICT_SET_TITLE = \"modificar la llave\";\nFioiBlockly.Msg.es.DICT_SET_OF = \"del diccionario\";\nFioiBlockly.Msg.es.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.es.TEXT_PRINT_TITLE = \"imprimir línea %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_TOOLTIP = \"Imprimir el texto, número u otro valor, seguido de un retorno de línea.\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TITLE = \"imprimir %1\";\nFioiBlockly.Msg.es.TEXT_PRINT_NOEND_TOOLTIP = \"Imprimir el texto, número u otro valor, sin retorno de línea.\";\n\nFioiBlockly.Msg.es.TEXT_EVAL_TITLE = \"evaluar\";\nFioiBlockly.Msg.es.TEXT_EVAL_TOOLTIP = \"Evaluar la expresión aritmética especificada.\";\nFioiBlockly.Msg.es.TEXT_EVAL_INVALID = \"Atención: %1; este bloque retornará 'falso' !\";\n\nFioiBlockly.Msg.es.EVAL_ERROR_SEMICOLON = \"el punto y coma ';' no está permitido\";\nFioiBlockly.Msg.es.EVAL_ERROR_SYNTAX = \"la expresión no es sintácticamente válida\";\nFioiBlockly.Msg.es.EVAL_ERROR_TYPE = \"este tipo de expresión (%1) no es permitida\";\nFioiBlockly.Msg.es.EVAL_ERROR_VAR = \"esta expresión utiliza una variable '%1' no definida\";\n\nFioiBlockly.Msg.es.LISTS_APPEND_MSG = \"a la lista %1 agregar el elemento %2\";\nFioiBlockly.Msg.es.LISTS_APPEND_TOOLTIP = \"Agregar un elemento a la lista '%1'\";\nFioiBlockly.Msg.es.LISTS_CREATE_WITH_TOO_LARGE = \"El tamaño de la lista es muy grande: %1 > tamaño máximo permitido %2\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FIRST = \"al inicio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_END = \"en el índice a partir del final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_FROM_START = \"en el índice\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET = \"obtener valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_GET_REMOVE = \"obtener y remover valor\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_LAST = \"al final\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_RANDOM = \"en un índice aleatorio\";\nFioiBlockly.Msg.es.LISTS_GET_INDEX_REMOVE = \"remover el valor\";\nFioiBlockly.Msg.es.LISTS_SET_INDEX_INSERT = \"insertar\";\nFioiBlockly.Msg.es.LISTS_SORT_TITLE = \"retornar el ordenamiento %1 %2 de la lista %3\"\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_MSG = \"ordenar la lista %1 en su lugar\";\nFioiBlockly.Msg.es.LISTS_SORT_PLACE_TOOLTIP = \"Ordena la lista '%1' y la modifica directamente.\";\n\nFioiBlockly.Msg.es.INPUT_NUM = \"leer un sólo número en toda la línea\";\nFioiBlockly.Msg.es.INPUT_NUM_TOOLTIP = \"Lee un sólo número en una lína, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST = \"leer una lista de números en una línea\";\nFioiBlockly.Msg.es.INPUT_NUM_LIST_TOOLTIP = \"Lee una lista de números en una línea, en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT = \"leer un número\";\nFioiBlockly.Msg.es.INPUT_NUM_NEXT_TOOLTIP = \"Leer el próximo número en la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_CHAR = \"leer un caracter\";\nFioiBlockly.Msg.es.INPUT_CHAR_TOOLTIP = \"Lee un caracter desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_WORD = \"leer una palabra\";\nFioiBlockly.Msg.es.INPUT_WORD_TOOLTIP = \"Lee una palabra desde la entrada del programa.\";\nFioiBlockly.Msg.es.INPUT_LINE = \"leer una línea\";\nFioiBlockly.Msg.es.INPUT_LINE_TOOLTIP = \"Lee una línea desde la entrada del programa.\";\n\nFioiBlockly.Msg.es.CANNOT_DELETE_VARIABLE_PROCEDURE = \"No es posible borrar la variable '%1', es utilizada en el procedimiento '%2'.\";\n\nFioiBlockly.Msg.es.DATA_REPLACEITEMOFLIST_TITLE = \"reemplazar el elemento %1 de la lista %2 con %3\";\nFioiBlockly.Msg.es.DATA_ITEMOFLIST_TITLE = \"elemento %1 en %2\";\nFioiBlockly.Msg.es.DATA_LISTREPEAT_TITLE = \"inicializar la lista %1 con %2 repetido %3 veces\";\n\nFioiBlockly.Msg.es.INVALID_NAME = \"Nombre inválido. Favor utilice únicamente letras, algunas letras acentuadas, dígitos (excepto como primer caracter), y guión bajo '_'.\";\n\nFioiBlockly.Msg.es.TABLES_2D_INIT = \"inicializar la tabla 2D %1 con %2 líneas y %3 columnas conteniendo %4\";\nFioiBlockly.Msg.es.TABLES_2D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas y columnas, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_2D_SET = \"en %1[%2][%3] escribir %4\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_2D_GET = \"%1[%2][%3]\";\nFioiBlockly.Msg.es.TABLES_2D_GET_TOOLTIP = \"Leer el valor de la casilla [línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_3D_INIT = \"inicializar la tabla %1 con %2 capas, %3 líneas, %4 columnas conteniendo %5\";\nFioiBlockly.Msg.es.TABLES_3D_INIT_TOOLTIP = \"Crear una tabla con el número especificado de líneas, de columnas y de niveles, e inicializar cada casilla al valor dado.\";\nFioiBlockly.Msg.es.TABLES_3D_SET = \"en %1[%2][%3][%4] escribir %5\";\nFioiBlockly.Msg.es.TABLES_3D_SET_TOOLTIP = \"Escribir el valor en la casilla [capa][línea][columna] de la tabla %1.\";\nFioiBlockly.Msg.es.TABLES_3D_GET = \"%1[%2][%3][%4]\";\nFioiBlockly.Msg.es.TABLES_3D_GET_TOOLTIP = \"Leer el valor de la casilla [capa][línea][columna] de la tabla %1.\";\n\nFioiBlockly.Msg.es.TABLES_VAR_NAME = \"tablas\";\nFioiBlockly.Msg.es.TABLES_TOO_BIG = \"¡Las dimensiones de la tabla son muy grandes!\";\nFioiBlockly.Msg.es.TABLES_OUT_OF_BOUNDS = \"¡Se intentó acceder a una casilla fuera de la tabla!\";\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.DICT_SET_TITLE = \"affecter la clé\";\nFioiBlockly.Msg.fr.DICT_SET_OF = \"du dictionnaire\";\nFioiBlockly.Msg.fr.DICT_SET_TO = \"à\";\n\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.TEXT_EVAL_TITLE = \"évaluer\";\nFioiBlockly.Msg.fr.TEXT_EVAL_TOOLTIP = \"Évalue l'expression arithmétique spécifiée.\";\nFioiBlockly.Msg.fr.TEXT_EVAL_INVALID = \"Attention : %1 ; ce bloc retournera 'faux' !\";\n\nFioiBlockly.Msg.fr.TEXT_STR_TITLE = \"convertir en texte %1\";\nFioiBlockly.Msg.fr.TEXT_STR_TOOLTIP = \"Convertir une valeur en texte.\";\n\nFioiBlockly.Msg.fr.EVAL_ERROR_SEMICOLON = \"le point-virgule ';' n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_SYNTAX = \"l'expression n'est pas syntaxiquement valide\";\nFioiBlockly.Msg.fr.EVAL_ERROR_TYPE = \"ce type d'expression (%1) n'est pas autorisé\";\nFioiBlockly.Msg.fr.EVAL_ERROR_VAR = \"cette expression utilise une variable '%1' non définie\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_CREATE_WITH_TOO_LARGE = \"Taille de la liste trop grande : %1 > taille maximale autorisée %2\"\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\nFioiBlockly.Msg.fr.LISTS_SORT_TITLE = \"renvoyer le tri %1 %2 de la liste %3\"\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_MSG = \"trier la liste %1 sur place\";\nFioiBlockly.Msg.fr.LISTS_SORT_PLACE_TOOLTIP = \"Trie la liste '%1' et la modifie directement.\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre seul sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre seul sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST = \"lire une liste de nombres sur une ligne\";\nFioiBlockly.Msg.fr.INPUT_NUM_LIST_TOOLTIP = \"Lit une liste de nombres sur une ligne, sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_NEXT_TOOLTIP = \"Lit le prochain nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n\nFioiBlockly.Msg.fr.INVALID_NAME = \"Nom invalide, veuillez n'utiliser que des lettres, lettres accentuées françaises, chiffres (sauf comme premier caractère) et tiret bas '_'.\";\n\nFioiBlockly.Msg.fr.TABLES_2D_INIT = \"initialiser le tableau 2D %1 avec %2 lignes et %3 colonnes contenant %4\";\nFioiBlockly.Msg.fr.TABLES_2D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes et de colonnes, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_2D_SET = \"dans %1[%2] [%3] mettre %4\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.fr.TABLES_2D_GET_TOOLTIP = \"Récupère la valeur dans la case [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_3D_INIT = \"initialiser le tableau 3D %1 avec %2 couches, %3 lignes, %4 colonnes contenant %5\";\nFioiBlockly.Msg.fr.TABLES_3D_INIT_TOOLTIP = \"Crée un tableau avec le nombre spécifié de lignes, de colonnes et de niveaux, et initialise chaque case à la valeur donnée.\";\nFioiBlockly.Msg.fr.TABLES_3D_SET = \"dans %1[%2] [%3] [%4] mettre %5\";\nFioiBlockly.Msg.fr.TABLES_3D_SET_TOOLTIP = \"Met la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\nFioiBlockly.Msg.fr.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.fr.TABLES_3D_GET_TOOLTIP = \"Récupère la valeur dans la case [couche] [ligne] [colonne] du tableau %1.\";\n\nFioiBlockly.Msg.fr.TABLES_VAR_NAME = \"tableau\";\nFioiBlockly.Msg.fr.TABLES_TOO_BIG = \"Dimensions du tableau trop grandes !\";\nFioiBlockly.Msg.fr.TABLES_OUT_OF_BOUNDS = \"Tentative d'accès à une case hors du tableau !\";\n\nFioiBlockly.Msg.fr.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.fr.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Renvoie la partie entière de la division des deux nombres.\";\n","FioiBlockly.Msg.it = {};\n\nFioiBlockly.Msg.it.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.it.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.it.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Crea un dizionario\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_INPUT_WITH = \"crea un dizionario :\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_KEY = \"chiave\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TITLE = \"chiave/valore\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.it.DICT_GET = \"recupera la chiave\";\nFioiBlockly.Msg.it.DICT_GET_TO = \"di\";\nFioiBlockly.Msg.it.DICT_KEYS = \"elenco delle chiavi di\";\nFioiBlockly.Msg.it.DICT_SET_TITLE = \"assegna la chiave\";\nFioiBlockly.Msg.it.DICT_SET_OF = \"del dizionario\";\nFioiBlockly.Msg.it.DICT_SET_TO = \"a\";\n\nFioiBlockly.Msg.it.TEXT_PRINT_TITLE = \"mostra la riga %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_TOOLTIP = \"Mostra il testo, numero o altro valore specificato, con interruzione di riga dopo.\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TITLE = \"mostra %1\";\nFioiBlockly.Msg.it.TEXT_PRINT_NOEND_TOOLTIP = \"Mostra il testo, il numero o altro valore specificato, senza interruzioni di riga.\";\n\nFioiBlockly.Msg.it.TEXT_EVAL_TITLE = \"valuta\";\nFioiBlockly.Msg.it.TEXT_EVAL_TOOLTIP = \"Valuta l'espressione aritmetica specificata.\";\nFioiBlockly.Msg.it.TEXT_EVAL_INVALID = \"Attenzione : %1 ; questo blocco sarà \\\"falso\\\" !\";\n\nFioiBlockly.Msg.it.EVAL_ERROR_SEMICOLON = \"il punto e virgola ';' non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_SYNTAX = \"l'espressione non è sintatticamente valida\";\nFioiBlockly.Msg.it.EVAL_ERROR_TYPE = \"questo tipo di espressione (%1) non è autorizzato\";\nFioiBlockly.Msg.it.EVAL_ERROR_VAR = \"questa espressione utilizza una variabile '%1' non definita\";\n\nFioiBlockly.Msg.it.LISTS_APPEND_MSG = \"all'elenco %1 aggiungi l'elemento %2\";\nFioiBlockly.Msg.it.LISTS_APPEND_TOOLTIP = \"Aggiungi un elemento all'elenco '%1'\";\nFioiBlockly.Msg.it.LISTS_CREATE_WITH_TOO_LARGE = \"Dimensione della lista troppo grande: %1 > dimensione massima consentita %2\"\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FIRST = \"all'inizio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_END = \"sull'indice dalla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_FROM_START = \"all'indice\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET = \"ottieni il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_GET_REMOVE = \"ottieni e rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_LAST = \"alla fine\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_RANDOM = \"su un indice aleatorio\";\nFioiBlockly.Msg.it.LISTS_GET_INDEX_REMOVE = \"rimuovi il valore\";\nFioiBlockly.Msg.it.LISTS_SET_INDEX_INSERT = \"inserisci\";\nFioiBlockly.Msg.it.LISTS_SORT_TITLE = \"sposta la selezione %1 %2 dell'elenco %3\"\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_MSG = \"seleziona l'elenco %1 sul posto\";\nFioiBlockly.Msg.it.LISTS_SORT_PLACE_TOOLTIP = \"Seleziona la lista '%1' e modificala istantaneamentela.\";\n\nFioiBlockly.Msg.it.INPUT_NUM = \"leggi un nome solo su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_TOOLTIP = \"Leggi un numero solo su una riga, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST = \"leggi un elenco di numeri su una riga\";\nFioiBlockly.Msg.it.INPUT_NUM_LIST_TOOLTIP = \"Leggi un elenco di numeri sull'elenco, sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT = \"leggi un numero\";\nFioiBlockly.Msg.it.INPUT_NUM_NEXT_TOOLTIP = \"Leggi il prossimo numero sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_CHAR = \"leggi un carattere\";\nFioiBlockly.Msg.it.INPUT_CHAR_TOOLTIP = \"Leggi un carattere sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_WORD = \"leggi una parola\";\nFioiBlockly.Msg.it.INPUT_WORD_TOOLTIP = \"Leggi una parola sull'input del programma.\";\nFioiBlockly.Msg.it.INPUT_LINE = \"leggi una riga\";\nFioiBlockly.Msg.it.INPUT_LINE_TOOLTIP = \"Leggi una riga sull'input del programma.\";\n\nFioiBlockly.Msg.it.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossibile rimuovere la variabile '%1', utilizzata dalla procedura '%2'.\";\n\nFioiBlockly.Msg.it.DATA_REPLACEITEMOFLIST_TITLE = \"rimpiazza l'elemento %1 dell'elenco %2 con %3\";\nFioiBlockly.Msg.it.DATA_ITEMOFLIST_TITLE = \"elemento %1 in %2\";\nFioiBlockly.Msg.it.DATA_LISTREPEAT_TITLE = \"inizializza l'elenco %1 con %2 ripetuto %3 volte\";\n\nFioiBlockly.Msg.it.INVALID_NAME = \"Nome non valido, si prega di utilizzare solo lettere, lettere accentate in francese, numeri (eccetto come primo carattere) e trattini bassi '_'.\";\n\nFioiBlockly.Msg.it.TABLES_2D_INIT = \"inizializza la tabella 2D %1 con %2 linee e %3 colonne contenenti %4\";\nFioiBlockly.Msg.it.TABLES_2D_INIT_TOOLTIP = \"Crea una tabella con il numero di righe e colonne specificato e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_2D_SET = \"in %1[%2] [%3] inserisci %4\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_2D_GET = \"%1[%2] [%3]\";\nFioiBlockly.Msg.it.TABLES_2D_GET_TOOLTIP = \"Recupera il valore dalla casella [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_3D_INIT = \"inizializza la tabella 3D %1 con %2 livelli, %3 linee, %4 colonne contenenti %5\";\nFioiBlockly.Msg.it.TABLES_3D_INIT_TOOLTIP = \"Crea una tabella con il numero specificato di righe, colonne e livelli, e inizializza ogni cella al valore dato.\";\nFioiBlockly.Msg.it.TABLES_3D_SET = \"in %1[%2] [%3] [%4] inserisci %5\";\nFioiBlockly.Msg.it.TABLES_3D_SET_TOOLTIP = \"Inserisci il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\nFioiBlockly.Msg.it.TABLES_3D_GET = \"%1[%2] [%3] [%4]\";\nFioiBlockly.Msg.it.TABLES_3D_GET_TOOLTIP = \"Recupera il valore nella casella [livello] [riga] [colonna] della tabella %1.\";\n\nFioiBlockly.Msg.it.TABLES_VAR_NAME = \"tabella\";\nFioiBlockly.Msg.it.TABLES_TOO_BIG = \"Dimensioni della tabella troppo grandi !\";\nFioiBlockly.Msg.it.TABLES_OUT_OF_BOUNDS = \"Tentativo d'accesso a una casella fuori da una tabella !\";\n\nFioiBlockly.Msg.it.MATH_DIVISIONFLOOR_SYMBOL = ' // ';\nFioiBlockly.Msg.it.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = \"Riporta la parte intera della divisione dei due numeri.\";\n","FioiBlockly.Msg.nl = {};\nFioiBlockly.Msg.nl.VARIABLES_DEFAULT_NAME = 'element';\nFioiBlockly.Msg.nl.DICTS_CREATE_EMPTY_TITLE = 'leeg woordenboek';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_INPUT_WITH = 'Een woordenboek maken';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_KEY = 'sleutel';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_MAPPING = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TITLE = 'sleutel/waarde';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_ITEM_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICTS_CREATE_WITH_TOOLTIP = '';\nFioiBlockly.Msg.nl.DICT_GET = 'de sleutel ophalen';\nFioiBlockly.Msg.nl.DICT_GET_TO = 'van';\nFioiBlockly.Msg.nl.DICT_KEYS = 'lijst van de sleutels van';\nFioiBlockly.Msg.nl.DICT_SET_TITLE = 'de sleutel toewijzen';\nFioiBlockly.Msg.nl.DICT_SET_OF = 'van het woordenboek';\nFioiBlockly.Msg.nl.DICT_SET_TO = 'aan';\nFioiBlockly.Msg.nl.TEXT_PRINT_TITLE = 'de regel weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, gevolgd door een regeleinde.';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TITLE = 'weergeven %1';\nFioiBlockly.Msg.nl.TEXT_PRINT_NOEND_TOOLTIP = 'De tekst, het getal of een andere opgegeven waarde weergeven, zonder regeleinde.';\nFioiBlockly.Msg.nl.TEXT_EVAL_TITLE = 'evalueren';\nFioiBlockly.Msg.nl.TEXT_EVAL_TOOLTIP = 'Evalueert de opgegeven rekenkundige bewerking.';\nFioiBlockly.Msg.nl.TEXT_EVAL_INVALID = \"Opgelet : %1 ; dit blok zal terugkeren 'fout' !\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SEMICOLON = \"de puntkomma ';' is niet toegestaan\";\nFioiBlockly.Msg.nl.EVAL_ERROR_SYNTAX = 'de uitdrukking is syntactisch niet geldig';\nFioiBlockly.Msg.nl.EVAL_ERROR_TYPE = 'dit type uitdrukking (%1) is niet toegestaan';\nFioiBlockly.Msg.nl.EVAL_ERROR_VAR = \"deze uitdrukking gebruikt een ongedefinieerde '%1' variabele\";\nFioiBlockly.Msg.nl.LISTS_APPEND_MSG = 'voeg element %2 toe aan lijst %1';\nFioiBlockly.Msg.nl.LISTS_APPEND_TOOLTIP = \"Voeg een element toe aan de lijst '%1'\";\nFioiBlockly.Msg.nl.LISTS_CREATE_WITH_TOO_LARGE = 'Lijstgrootte te groot: %1 > maximaal toegestane grootte %2';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FIRST = 'in het begin';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_END = 'aan de index vanaf het einde ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_FROM_START = 'aan de index  ';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET = 'de waarde bekomen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_GET_REMOVE = 'de waarde bekomen en wissen';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_LAST = 'op het einde';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_RANDOM = 'naar een willekeurige hint';\nFioiBlockly.Msg.nl.LISTS_GET_INDEX_REMOVE = 'de waarde wissen';\nFioiBlockly.Msg.nl.LISTS_SET_INDEX_INSERT = 'invoegen';\nFioiBlockly.Msg.nl.LISTS_SORT_TITLE = 'stuur het gesorteerde terug %1 %2 van de lijst %3';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_MSG = 'de lijst sorteren %1 ter plaatse';\nFioiBlockly.Msg.nl.LISTS_SORT_PLACE_TOOLTIP = \"Sorteer de lijst ' %1' en wijzig ze onmiddellijk.\";\nFioiBlockly.Msg.nl.INPUT_NUM = 'één enkel getal op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_TOOLTIP = 'Leest één enkel getal op één regel, op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST = 'een lijst met getallen op één regel lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_LIST_TOOLTIP = 'Leest een lijst getallen op één regel, uit de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT = 'een getal lezen';\nFioiBlockly.Msg.nl.INPUT_NUM_NEXT_TOOLTIP = 'Leest het volgende getal op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_CHAR = 'Een karakter lezen';\nFioiBlockly.Msg.nl.INPUT_CHAR_TOOLTIP = 'Leest een karakter op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_WORD = 'een woord lezen';\nFioiBlockly.Msg.nl.INPUT_WORD_TOOLTIP = 'Leest een woord op de programma-invoer.';\nFioiBlockly.Msg.nl.INPUT_LINE = 'een regel lezen';\nFioiBlockly.Msg.nl.INPUT_LINE_TOOLTIP = 'Leest een regel op de programma-invoer.';\nFioiBlockly.Msg.nl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Variabele '%1', gebruikt door procedure '%2', kan niet worden verwijderd.\";\nFioiBlockly.Msg.nl.DATA_REPLACEITEMOFLIST_TITLE = 'vervang het element %1 in lijst %2 door %3';\nFioiBlockly.Msg.nl.DATA_ITEMOFLIST_TITLE = 'element %1 in %2';\nFioiBlockly.Msg.nl.DATA_LISTREPEAT_TITLE = 'initialiseer lijst %1 met %2 herhaald %3 keer';\nFioiBlockly.Msg.nl.INVALID_NAME = \"Ongeldige naam, gebruik alleen letters, letters met Franse accenten, cijfers (behalve als eerste teken) en underscore '_'.\";\nFioiBlockly.Msg.nl.TABLES_2D_INIT = 'initialiseer de 2D-tabel %1 met %2 rijen en %3 kolommen die %4 bevatten';\nFioiBlockly.Msg.nl.TABLES_2D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen en kolommen en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_2D_SET = 'in %1[%2] [%3] zet %4';\nFioiBlockly.Msg.nl.TABLES_3D_SET_TOOLTIP = 'Zet de waarde in het veld [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_2D_GET = '%1[%2] [%3]';\nFioiBlockly.Msg.nl.TABLES_2D_GET_TOOLTIP = 'Haal de waarde op uit het veld [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_3D_INIT = 'initialiseer de 3D-tabel %1 met %2 lagen, %3 rijen, %4 kolommen met %5';\nFioiBlockly.Msg.nl.TABLES_3D_INIT_TOOLTIP = 'Creëer een tabel met het opgegeven aantal rijen, kolommen en niveaus en initialiseer elk veld met de opgegeven waarde.';\nFioiBlockly.Msg.nl.TABLES_3D_SET = 'in %1[%2] [%3] [%4] zet %5';\nFioiBlockly.Msg.nl.TABLES_3D_GET = '%1[%2] [%3] [%4]';\nFioiBlockly.Msg.nl.TABLES_3D_GET_TOOLTIP = 'Haal de waarde op uit het vak [laag] [rij] [kolom] in de tabel %1.';\nFioiBlockly.Msg.nl.TABLES_VAR_NAME = 'tabel';\nFioiBlockly.Msg.nl.TABLES_TOO_BIG = 'Afmetingen van de tabel te groot!';\nFioiBlockly.Msg.nl.TABLES_OUT_OF_BOUNDS = 'Poging tot toegang tot een veld buiten de tabel!';\nFioiBlockly.Msg.nl.MATH_DIVISIONFLOOR_SYMBOL = '//';\nFioiBlockly.Msg.nl.MATH_ARITHMETIC_TOOLTIP_DIVIDEFLOOR = 'Geeft het gehele getal van de deling van de twee getallen.';","FioiBlockly.Msg.sl = {};\n\nFioiBlockly.Msg.sl.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.sl.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.sl.DICTS_CREATE_EMPTY_TITLE = \"prazen slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Ustvari slovar\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_INPUT_WITH = \"ustvari slovar :\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_KEY = \"ključ\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TITLE = \"ključ/vrednost\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.sl.DICT_GET = \"get the key\";\nFioiBlockly.Msg.sl.DICT_GET_TO = \"iz\";\nFioiBlockly.Msg.sl.DICT_KEYS = \"tabela ključev iz\";\nFioiBlockly.Msg.sl.DICT_SET_TITLE = \"nastavi vrednost ključa\";\nFioiBlockly.Msg.sl.DICT_SET_OF = \"iz slovarja\";\nFioiBlockly.Msg.sl.DICT_SET_TO = \"na\";\n\nFioiBlockly.Msg.sl.TEXT_PRINT_TITLE = \"izpiši vrstico %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost in se premakni v novo vrsto.\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TITLE = \"izpiši %1\";\nFioiBlockly.Msg.sl.TEXT_PRINT_NOEND_TOOLTIP = \"Izpiši tekst, številko ali drugo vrednost brez premika v novo vrsto.\";\n\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"v seznam %1 dodaj element %2\";\nFioiBlockly.Msg.sl.LISTS_APPEND_TOOLTIP = \"Dodaj element v seznam '%1'\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FIRST = \"na začetku\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_END = \"na mestu št. od konca\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_FROM_START = \"na mestu št.\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET = \"vrni vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_GET_REMOVE = \"vrni in odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_LAST = \"na koncu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_RANDOM = \"na naključnem mestu\";\nFioiBlockly.Msg.sl.LISTS_GET_INDEX_REMOVE = \"odstrani vrednost\";\nFioiBlockly.Msg.sl.LISTS_SET_INDEX_INSERT = \"vstavi\";\nFioiBlockly.Msg.sl.LISTS_SORT_TITLE = \"uredi %1 %2 tabelo %3\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_NUMERIC = \"številčno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_TEXT = \"abecedno\";\nFioiBlockly.Msg.sl.LISTS_SORT_TYPE_IGNORECASE = \"abecedno, brez velikosti črk\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_MSG = \"uredi tabelo %1 na mestu\";\nFioiBlockly.Msg.sl.LISTS_SORT_PLACE_TOOLTIP = \"Sorts list '%1' and modifies it directly.\";\nFioiBlockly.Msg.sl.LISTS_APPEND_MSG = \"tabeli %1 dodaj element %2\";\n\nFioiBlockly.Msg.sl.INPUT_NUM = \"read a single number on the whole line\";\nFioiBlockly.Msg.sl.INPUT_NUM_TOOLTIP = \"Reads a single number on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST = \"read a list of numbers on a line\";\nFioiBlockly.Msg.sl.INPUT_NUM_LIST_TOOLTIP = \"Reads a list of numbers on a line, on the program input.\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT = \"read a number\";\nFioiBlockly.Msg.sl.INPUT_NUM_NEXT_TOOLTIP = \"Reads the next number on the program input.\";\nFioiBlockly.Msg.sl.INPUT_CHAR = \"read a character\";\nFioiBlockly.Msg.sl.INPUT_CHAR_TOOLTIP = \"Reads a character on the program input.\";\nFioiBlockly.Msg.sl.INPUT_WORD = \"read a word\";\nFioiBlockly.Msg.sl.INPUT_WORD_TOOLTIP = \"Reads a word on the program input.\";\nFioiBlockly.Msg.sl.INPUT_LINE = \"read a line\";\nFioiBlockly.Msg.sl.INPUT_LINE_TOOLTIP = \"Reads a line on the program input.\";\n\nFioiBlockly.Msg.sl.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Cannot delete variable '%1', used by procedure '%2'.\";\n\nFioiBlockly.Msg.sl.DATA_REPLACEITEMOFLIST_TITLE = \"replace element %1 of list %2 with %3\";\nFioiBlockly.Msg.sl.DATA_ITEMOFLIST_TITLE = \"element %1 in %2\";\nFioiBlockly.Msg.sl.DATA_LISTREPEAT_TITLE = \"initialize list %1 with %2 repeated %3 times\";\n\nFioiBlockly.Msg.sl.INVALID_NAME = \"Neveljavno ime. Uporabite lahko črke angleške abecede, števke (razen za prvi znak) in podrčrtaj '_'.\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_set_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var key = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var value = Blockly.Python.valueToCode(block, 'VAL',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + key + '] = ' + value + '\\n';\n  return code;\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  var code = 'int(input())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_next'] = function(block) {\n  // TODO :: make a more optimized version of this\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_num_list'] = function(block) {\n  var code = 'list(map(int, input().split()))';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n\nBlockly.Python['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.Python.valueToCode(block, 'LIST',\n      Blockly.Python.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.Python.valueToCode(block, 'TO',\n      Blockly.Python.ORDER_NONE) || 'None';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.Python.variableDB_.getDistinctName(\n        'tmp_list', Blockly.Variables.NAME_TYPE);\n    var code = listVar + ' = ' + list + '\\n';\n    list = listVar;\n    return code;\n  }\n\n  if(mode == 'SET') {\n    // TODO :: set this as an option\n/*    Blockly.Python.definitions_['lists_assignIndex'] = '' +\n      'def assignIndex(l, i, x):\\n' +\n      '    if i > 1000000:\\n' +\n      '        raise IndexError(\"list index > 1000000\")\\n' +\n      '    n = len(l)\\n' +\n      '    if i >= n:\\n' +\n      '        l.extend([None]*(i-n+1))\\n' +\n      '    l[i] = x\\n';*/\n  }\n  function makeAssignIndex(l, a, v) {\n    // TODO :: set this as an option\n//    return 'assignIndex(' + l + ', ' + a + ', ' + v + ')\\n';\n    return list + '[' + a + '] = ' + v + '\\n';\n  }\n\n  switch (where) {\n    case 'FIRST':\n      if (mode == 'SET') {\n        return makeAssignIndex(list, 0, value);\n      } else if (mode == 'INSERT') {\n        return list + '.insert(0, ' + value + ')\\n';\n      }\n      break;\n    case 'LAST':\n        if (mode == 'SET') {\n          return makeAssignIndex(list, -1, value);\n        } else if (mode == 'INSERT') {\n          return list + '.append(' + value + ')\\n';\n        }\n      break;\n    case 'FROM_START':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT');\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'FROM_END':\n      var at = Blockly.Python.getAdjustedInt(block, 'AT', 1, true);\n        if (mode == 'SET') {\n          return makeAssignIndex(list, at, value);\n        } else if (mode == 'INSERT') {\n          return list + '.insert(' + at + ', ' + value + ')\\n';\n        }\n      break;\n    case 'RANDOM':\n        Blockly.Python.definitions_['import_random'] = 'import random';\n        var code = cacheList();\n        var xVar = Blockly.Python.variableDB_.getDistinctName(\n            'tmp_x', Blockly.Variables.NAME_TYPE);\n        code += xVar + ' = int(random.random() * len(' + list + '))\\n';\n        if (mode == 'SET') {\n          code += makeAssignIndex(list, xVar, value);\n          return code;\n        } else if (mode == 'INSERT') {\n          code += list + '.insert(' + xVar + ', ' + value + ')\\n';\n          return code;\n        }\n      break;\n  }\n  throw 'Unhandled combination (lists_setIndex).';\n};\n\nBlockly.Python['lists_sort_place'] = function(block) {\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  return varName + '.sort()\\n';\n};\n\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  var OPERATORS = {\n    'ADD': [' + ', Blockly.Python.ORDER_ADDITIVE],\n    'MINUS': [' - ', Blockly.Python.ORDER_ADDITIVE],\n    'MULTIPLY': [' * ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDE': [' / ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'DIVIDEFLOOR': [' // ', Blockly.Python.ORDER_MULTIPLICATIVE],\n    'POWER': [' ** ', Blockly.Python.ORDER_EXPONENTIATION]\n  };\n  var tuple = OPERATORS[block.getFieldValue('OP')];\n  var operator = tuple[0];\n  var order = tuple[1];\n  var argument0 = Blockly.Python.valueToCode(block, 'A', order) || '0';\n  var argument1 = Blockly.Python.valueToCode(block, 'B', order) || '0';\n  var code = argument0 + operator + argument1;\n  return [code, order];\n  // In case of 'DIVIDE', division between integers returns different results\n  // in Python 2 and 3. However, is not an issue since Blockly does not\n  // guarantee identical results in all languages.  To do otherwise would\n  // require every operator to be wrapped in a function call.  This would kill\n  // legibility of the generated code.\n};\n\n","Blockly.Python['tables_2d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_2d_init'] = '' +\n    'def table2dInit(x, y, a):\\n' +\n    '    if x > 1000000 or y > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[a] * y for i in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table2dInit(' + at1 + ', ' + at2 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_2d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_2d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\nBlockly.Python['tables_3d_init'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  // Use a function to keep scope contained\n  Blockly.Python.definitions_['tables_3d_init'] = '' +\n    'def table3dInit(x, y, z, a):\\n' +\n    '    if x > 1000000 or y > 1000000 or z > 1000000: raise IndexError(\"' + Blockly.Msg.TABLES_TOO_BIG +'\")\\n' +\n    '    return [[[a] * z for i in range(y)] for j in range(x)]';\n\n  var at1 = Blockly.Python.valueToCode(block, 'LAYERS', Blockly.Python.ORDER_COMMA) || '0';\n  var at2 = Blockly.Python.valueToCode(block, 'LINES', Blockly.Python.ORDER_COMMA) || '0';\n  var at3 = Blockly.Python.valueToCode(block, 'COLS', Blockly.Python.ORDER_COMMA) || '0';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_ASSIGNMENT) || 'null';\n\n  return varName + ' = table3dInit(' + at1 + ', ' + at2 + ', ' + at3 + ', ' + value + ');\\n';\n}\n\nBlockly.Python['tables_3d_set'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || 'None';\n\n  var code = '';\n  // TODO :: set this as an option\n//  code += 'if ' + at1 + ' >= len(' + varName + ') or ' + at2 + ' >= len(' + varName + '[' + at1 + ']) or ' + at3 + ' >= len(' + varName + '[' + at1 + '][' + at2 + ']): raise IndexError(\"' + Blockly.Msg.TABLES_OUT_OF_BOUNDS + '\")\\n';\n  code += varName + '[' + at1 + '][' + at2 + '][' + at3 + '] = ' + value + \"\\n\";\n  return code;\n}\n\nBlockly.Python['tables_3d_get'] = function(block) {\n  var blockVarName = block.getFieldValue('VAR');\n  if(blockVarName) {\n    var varName = Blockly.Python.variableDB_.getName(blockVarName, Blockly.Variables.NAME_TYPE);\n  } else {\n    var varName = 'unnamed_variable'; // Block is still loading\n  }\n\n  var at1 = Blockly.Python.getAdjustedInt(block, 'LAYER');\n  var at2 = Blockly.Python.getAdjustedInt(block, 'LINE');\n  var at3 = Blockly.Python.getAdjustedInt(block, 'COL');\n  var code = varName + '[' + at1 + '][' + at2 + '][' + at3 + ']';\n  return [code, Blockly.Python.ORDER_MEMBER];\n}\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n\nBlockly.Python['text_eval'] = function(block) {\n  var expr = block.getFieldValue('EXPR');\n  var reindexExpr = Blockly.reindexExpression(expr);\n  if(reindexExpr === null) {\n    return ['false', Blockly.Python.ORDER_ATOMIC];\n  } else {\n    return [reindexExpr, Blockly.Python.ORDER_NONE];\n  }\n};\n\nBlockly.Python['text_str'] = function (block) {\n  var expr = Blockly.JavaScript.valueToCode(block, 'EXPR', Blockly.JavaScript.ORDER_NONE) || 'null';\n  return 'str(' + expr + ')';\n}","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n\n  // Create a dictionary of external functions to be registered by the\n  // interpreter\n  Blockly.JavaScript.externalFunctions = {};\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n/**\n * Altered version of the default blockToCode function. Store all blocks in a global variable.\n**/\nBlockly.Python.blockToCodeUnaltered = Blockly.Python.blockToCode;\n\nBlockly.Python.blockToCode = function(block, opt_thisOnly) {\n  if (block) {\n    var func = this[block.type];\n    // Define altered functions for each block\n    if (typeof func === 'function' && func.pyfeAltered === undefined) {\n      this[block.type] = function (block) {\n        if (!block || window.sortedBlocksList === undefined) {\n          return func.call(block, block);\n        }\n        sortedBlocksList.push([block.id, 1]);\n        var code = func.call(block, block);\n\n        if (typeof code == \"string\") {\n          codeOfBlock[block.id] = String(code)\n        } else if (code) {\n          codeOfBlock[block.id] = String(code[0]);\n        } else {\n          codeOfBlock[block.id] = \"\";\n        }\n        sortedBlocksList.push([block.id, -1]);\n        return code;\n      }\n      this[block.type].pyfeAltered = true;\n    }\n  }\n  return Blockly.Python.blockToCodeUnaltered(block, opt_thisOnly);\n}\n\n/**\n * Add blocks ids in comments to a python code\n * @param {function} Function that takes no parameters and returns the generated python code.\n * @return {string} Python code.\n */\nBlockly.Python.blocksToCommentedCode = function(codeGenerator) {\n  window.sortedBlocksList = [];\n  window.codeOfBlock = {};\n\n  var code = String(codeGenerator());\n\n  var codeLines = code.split('\\n');\n  var blocksAtLines = new Array(codeLines.length);\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    blocksAtLines[i] = [];\n  }\n\n  // For each block, find where it can be in the code\n  var firstLine = 0;\n  var lastLineStack = [codeLines.length];\n  for (var iEvent = 0; iEvent < sortedBlocksList.length; iEvent++) {\n    var blockId = sortedBlocksList[iEvent][0];\n\n    if (sortedBlocksList[iEvent][1] == -1) {\n      firstLine = lastLineStack.pop()-1;\n    } else {\n      var blockCode = codeOfBlock[blockId].split(\"\\n\");\n      // Remove indentation\n      for (var iLine = 0; iLine < blockCode.length; iLine++) {\n        blockCode[iLine] = blockCode[iLine].trim();\n      }\n\n      // Find matching lines\n      var lastLine = lastLineStack[lastLineStack.length-1];\n      var startAt = -1;\n      for (var iCodeLine = firstLine; iCodeLine < lastLine-blockCode.length+1; iCodeLine++) {\n        var blockIsHere = true;\n        for (var iBlockLine = 0; iBlockLine < blockCode.length && blockIsHere; iBlockLine++) {\n          if (codeLines[iCodeLine+iBlockLine].indexOf(blockCode[iBlockLine]) === -1) {\n            blockIsHere = false;\n          }\n        }\n        if (blockIsHere) {\n          startAt = iCodeLine;\n          break;\n        }\n      }\n      // Push sub-interval\n      if (startAt == -1) {\n        lastLineStack.push(lastLineStack[lastLineStack.length-1]);\n        // console.log(\"Can't match\", blockId);\n      } else {\n        firstLine = startAt;\n        lastLineStack.push(startAt+blockCode.length);\n\n        // Mark the maching lines\n        for (var iBlockLine = 0; iBlockLine < blockCode.length; iBlockLine++) {\n          if (blockCode[iBlockLine]) {\n            blocksAtLines[startAt+iBlockLine].push(blockId);\n          }\n        }\n      }\n    }\n  }\n\n  // Add comments to the code\n  for (var i = 0; i < blocksAtLines.length; i++) {\n    if (blocksAtLines[i].length) {\n      codeLines[i] += \"#BlockIds=\" + blocksAtLines[i].join(\"'\");\n    }\n  }\n\n  window.sortedBlocksList = undefined;\n  window.codeOfBlock = undefined;\n  return codeLines.join(\"\\n\");\n}","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n"]}