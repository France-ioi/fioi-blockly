{"version":3,"sources":["base.js","dropdowndiv.js","field_variable.js","procedures.js","scrollbar.js","touch.js","utils.js","variables.js","workspace_svg.js","fr.js","msg_fill.js","dicts.js","inputs.js","lists.js","logic.js","text.js","javascript.js","python.js","loops.js","math.js"],"names":["FioiBlockly","Msg","OriginalBlocks","defaultLang","loadLanguage","lang","console","error","msgName","Blockly","reimportOriginalBlocks","blockNames","blockName","indexOf","Blocks","goog","provide","require","DropDownDiv","DIV_","boundsElement_","owner_","ARROW_SIZE","BORDER_SIZE","ARROW_HORIZONTAL_PADDING","PADDING_Y","ANIMATION_TIME","animateOutTimer_","onHide_","isInAnimation","isInAnimationTimer","listenerActive","createDom","dom","document","body","appendChild","content_","arrow_","style","transition","setBoundsElement","boundsElement","getContentDiv","clearContent","innerHTML","setColour","backgroundColour","borderColour","backgroundColor","borderColor","setCategory","category","setAttribute","showPositionedByBlock","owner","block","opt_onHide","opt_secondaryYOffset","scale","workspace","bBox","width","height","blockSvg","getSvgRoot","i","children","length","classList","position","getBoundingClientRect","primaryX","left","primaryY","top","secondaryX","secondaryY","getParentSvg","parentNode","show","this","removeListener","window","addEventListener","hideIfNotShowing","addListener","clearTimeout","setTimeout","div","metrics","getPositionMetrics","transform","arrowX","arrowY","arrowAtTop","initialX","initialY","display","opacity","dx","finalX","dy","finalY","renderX","renderY","renderedSecondary","boundPosition","boundSize","getSize","divSize","Math","max","min","centerX","isVisible","hideIfOwner","hide","hideWithoutAnimation","FieldVariable","prototype","classValidator","text","sourceBlock_","RENAME_VARIABLE","oldVar","getText","hideChaff","cb","renameVariable","Variables","promptName","RENAME_VARIABLE_TITLE","replace","DELETE_VARIABLE","deleteVariable","Procedures","flyoutOptions","includedBlocks","noret","ret","ifret","flyoutCategory","populateProcedures","procedureList","templateName","name","args","mutation","j","arg","xmlList","push","incl","nameField","PROCEDURES_DEFNORETURN_PROCEDURE","tuple","allProcedures","Scrollbar","resizeViewHorizontal","hostMetrics","viewSize","viewWidth","flyoutWidth","pair_","scrollbarThickness","setScrollViewSize_","xCoordinate","absoluteLeft","workspace_","RTL","yCoordinate","absoluteTop","viewHeight","setPosition","resizeContentHorizontal","setVisible","scrollViewSize_","contentWidth","ratio_","Infinity","isNaN","handleLength","setHandleLength_","handlePosition","viewLeft","contentLeft","setHandlePosition","constrainHandle_","onMouseUp_","e","getMainWorkspace","dragMode_","DRAG_NONE","Touch","clearTouchIdentifier","Css","setCursor","Cursor","OPEN","onTouchUpWrapper_","unbindEvent_","onMouseMoveWrapper_","genUid","soup_","eventsBound","bindEventWithChecks_","node","thisObject","func","opt_noCaptureIdentifier","handled","wrapFunc","event","captureIdentifier","events","splitEventByTouches","shouldHandleEvent","setClientFromTouch","call","bindData","TOUCH_MAP","eventName","touchWrapFunc","preventDefault","removeEvents","documentEventsBound_","removeEventListener","eData","any","anyButton","fixed","get","set","incr","shortList","options","scratchMode","fullVariableList","variableList","newVarIdx","idx","splice","sort","string","caseInsensitiveCompare","button","NEW_VARIABLE","registerButtonCallback","createVariable","getTargetWorkspace","concat","field","createVariableDom_","createTextDom_","createMathNumberDom_","value","shadowBlock","numberField","variableIndexOf","displayHelper","showPopupMessage","VARIABLE_ALREADY_EXISTS","toLowerCase","NEW_VARIABLE_TITLE","promptText","defaultText","callback","newVar","UNDO","WorkspaceSvg","reportValue","id","getBlockById","contentDiv","valueReportBox","createElement","translate","x","y","translation","svgBlockCanvas_","svgBubbleCanvas_","dragSurface","translateAndScaleGroup","fr","VARIABLES_DEFAULT_NAME","TEXT_APPEND_VARIABLE","DICTS_CREATE_EMPTY_TITLE","DICTS_CREATE_WITH_CONTAINER_TITLE_ADD","DICTS_CREATE_WITH_CONTAINER_TOOLTIP","DICTS_CREATE_WITH_INPUT_WITH","DICTS_CREATE_WITH_ITEM_KEY","DICTS_CREATE_WITH_ITEM_MAPPING","DICTS_CREATE_WITH_ITEM_TITLE","DICTS_CREATE_WITH_ITEM_TOOLTIP","DICTS_CREATE_WITH_TOOLTIP","DICT_GET","DICT_GET_TO","DICT_KEYS","TEXT_PRINT_TITLE","TEXT_PRINT_TOOLTIP","TEXT_PRINT_NOEND_TITLE","TEXT_PRINT_NOEND_TOOLTIP","LISTS_APPEND_MSG","LISTS_APPEND_TOOLTIP","LISTS_GET_INDEX_FIRST","LISTS_GET_INDEX_FROM_END","LISTS_GET_INDEX_FROM_START","LISTS_GET_INDEX_GET","LISTS_GET_INDEX_GET_REMOVE","LISTS_GET_INDEX_LAST","LISTS_GET_INDEX_RANDOM","LISTS_GET_INDEX_REMOVE","LISTS_SET_INDEX_INSERT","INPUT_NUM","INPUT_NUM_TOOLTIP","INPUT_CHAR","INPUT_CHAR_TOOLTIP","INPUT_WORD","INPUT_WORD_TOOLTIP","INPUT_LINE","INPUT_LINE_TOOLTIP","CANNOT_DELETE_VARIABLE_PROCEDURE","DATA_REPLACEITEMOFLIST_TITLE","DATA_ITEMOFLIST_TITLE","DATA_LISTREPEAT_TITLE","fillLanguage","dicts","HUE","init","appendValueInput","setCheck","appendField","setInputsInline","setOutput","newQuote_","FieldTextInput","open","file","FieldImage","appendDummyInput","appendStatementInput","setTooltip","contextMenu","setPreviousStatement","setNextStatement","itemCount_","updateShape_","setMutator","Mutator","mutationToDom","container","domToMutation","xmlElement","parseInt","getAttribute","getInput","removeInput","setAlign","ALIGN_RIGHT","decompose","containerBlock","Block","obtain","initSvg","connection","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","valueConnection_","targetBlock","saveConnections","value_input","targetConnection","inputs","setOutputShape","OUTPUT_SHAPE_HEXAGONAL","lists","jsonInit","message0","args0","type","variable","check","previousStatement","nextStatement","colour","thisBlock","getFieldValue","MODE","LISTS_SET_INDEX_SET","WHERE_OPTIONS","setHelpUrl","LISTS_SET_INDEX_HELPURL","LISTS_SET_INDEX_INPUT_IN_LIST","FieldDropdown","LISTS_SET_INDEX_TOOLTIP","updateAt_","mode","where","tooltip","LISTS_SET_INDEX_TOOLTIP_SET_FROM","LISTS_SET_INDEX_TOOLTIP_SET_FIRST","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM","LISTS_INDEX_FROM_START_TOOLTIP","oneBasedIndex","isAt","INPUT_VALUE","ORDINAL_NUMBER_SUFFIX","menu","newAt","setFieldValue","moveInputBefore","rtlOperators","ltrOperators","OPERATORS","LOGIC_COMPARE_HELPURL","logic","op","TOOLTIPS","EQ","LOGIC_COMPARE_TOOLTIP_EQ","NEQ","LOGIC_COMPARE_TOOLTIP_NEQ","LT","LOGIC_COMPARE_TOOLTIP_LT","LTE","LOGIC_COMPARE_TOOLTIP_LTE","GT","LOGIC_COMPARE_TOOLTIP_GT","GTE","LOGIC_COMPARE_TOOLTIP_GTE","prevBlocks_","onchange","blockA","blockB","outputConnection","checkType_","Events","setGroup","group","unplug","bumpNeighbours_","rename","setSpellcheck","PROCEDURES_DEFNORETURN_TITLE","comments","parentWorkspace","PROCEDURES_DEFNORETURN_COMMENT","setCommentText","procedures","PROCEDURES_DEFNORETURN_TOOLTIP","PROCEDURES_DEFNORETURN_HELPURL","arguments_","setStatements_","statementConnection_","PROCEDURES_DEFRETURN_TITLE","PROCEDURES_DEFRETURN_RETURN","PROCEDURES_DEFRETURN_COMMENT","PROCEDURES_DEFRETURN_TOOLTIP","PROCEDURES_DEFRETURN_HELPURL","Colours","texts","primary","colourSecondary","secondary","colourTertiary","tertiary","helpUrl","TEXT_PRINT_HELPURL","JavaScript","definitions_","Object","create","functionNames_","variableDB_","reset","Names","RESERVED_WORDS_","quote_","variable0","getName","NAME_TYPE","argument0","valueToCode","ORDER_ASSIGNMENT","argument1","increment","branch","statementToCode","addLoopTrap","code","isNumber","up","parseFloat","step","abs","startVar","match","getDistinctName","endVar","incVar","INDENT","varName","Python","PASS","dict","ORDER_MEMBER","ORDER_NONE","ORDER_ATOMIC","Array","n","key","join","getField","repeats","String","Number","loopVar","ORDER_ADDITION","incrCode","reportCode","assignCode","msg"],"mappings":"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","file":"fioi-blockly.min.js","sourcesContent":["FioiBlockly = {};\nFioiBlockly.Msg = {};\nFioiBlockly.OriginalBlocks = {};\n\nFioiBlockly.defaultLang = 'fr';\n\n// Import messages for a language\nFioiBlockly.loadLanguage = function(lang) {\n  if(!FioiBlockly.Msg[lang]) {\n    console.error(\"Language '+lang+' doesn't exist in fioi-blockly!\");\n    return;\n  }\n\n  for(var msgName in FioiBlockly.Msg[lang]) {\n    Blockly.Msg[msgName] = FioiBlockly.Msg[lang][msgName];\n  }\n};\n\n// Get back original Blockly blocks\nFioiBlockly.reimportOriginalBlocks = function(blockNames) {\n  for(var blockName in FioiBlockly.OriginalBlocks) {\n    if(!blockNames || blockNames.indexOf(blockName) != -1) {\n      Blockly.Blocks[blockName] = FioiBlockly.OriginalBlocks[blockName];\n    }\n  }\n};\n","/**\n * @license\n * Visual Blocks Editor\n *\n * Copyright 2016 Massachusetts Institute of Technology\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A div that floats on top of the workspace, for drop-down menus.\n * The drop-down can be kept inside the workspace, animate in/out, etc.\n * @author tmickel@mit.edu (Tim Mickel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.DropDownDiv');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\n\n/**\n * Class for drop-down div.\n * @constructor\n */\nBlockly.DropDownDiv = function() {\n};\n\n/**\n * The div element. Set once by Blockly.DropDownDiv.createDom.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.DIV_ = null;\n\n/**\n * Drop-downs will appear within the bounds of this element if possible.\n * Set in Blockly.DropDownDiv.setBoundsElement.\n * @type {Element}\n * @private\n */\nBlockly.DropDownDiv.boundsElement_ = null;\n\n/**\n * The object currently using the drop-down.\n * @type {Object}\n * @private\n */\nBlockly.DropDownDiv.owner_ = null;\n\n/**\n * Arrow size in px. Should match the value in CSS (need to position pre-render).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_SIZE = 16;\n\n/**\n * Drop-down border size in px. Should match the value in CSS (need to position the arrow).\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.BORDER_SIZE = 1;\n\n/**\n * Amount the arrow must be kept away from the edges of the main drop-down div, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ARROW_HORIZONTAL_PADDING = 12;\n\n/**\n * Amount drop-downs should be padded away from the source, in px.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.PADDING_Y = 20;\n\n/**\n * Length of animations in seconds.\n * @type {number}\n * @const\n */\nBlockly.DropDownDiv.ANIMATION_TIME = 0.25;\n\n/**\n * Timer for animation out, to be cleared if we need to immediately hide\n * without disrupting new shows.\n * @type {number}\n */\nBlockly.DropDownDiv.animateOutTimer_ = null;\n\n/**\n * Callback for when the drop-down is hidden.\n * @type {Function}\n */\nBlockly.DropDownDiv.onHide_ = 0;\n\n// Don't hide a DropDownDiv we're showing\nBlockly.DropDownDiv.isInAnimation = false;\nBlockly.DropDownDiv.isInAnimationTimer = null;\n\n// Is the mousedown listener active?\nBlockly.DropDownDiv.listenerActive = false;\n\n/**\n * Create and insert the DOM element for this div.\n * @param {Element} container Element that the div should be contained in.\n */\nBlockly.DropDownDiv.createDom = function() {\n  if (Blockly.DropDownDiv.DIV_) {\n    return;  // Already created.\n  }\n  Blockly.DropDownDiv.DIV_ = goog.dom.createDom('div', 'blocklyDropDownDiv');\n  document.body.appendChild(Blockly.DropDownDiv.DIV_);\n  Blockly.DropDownDiv.content_ = goog.dom.createDom('div', 'blocklyDropDownContent');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.content_);\n  Blockly.DropDownDiv.arrow_ = goog.dom.createDom('div', 'blocklyDropDownArrow');\n  Blockly.DropDownDiv.DIV_.appendChild(Blockly.DropDownDiv.arrow_);\n\n  // Transition animation for transform: translate() and opacity.\n  Blockly.DropDownDiv.DIV_.style.transition = 'transform ' +\n    Blockly.DropDownDiv.ANIMATION_TIME + 's, ' +\n    'opacity ' + Blockly.DropDownDiv.ANIMATION_TIME + 's';\n};\n\n/**\n * Set an element to maintain bounds within. Drop-downs will appear\n * within the box of this element if possible.\n * @param {Element} boundsElement Element to bound drop-down to.\n */\nBlockly.DropDownDiv.setBoundsElement = function(boundsElement) {\n  Blockly.DropDownDiv.boundsElement_ = boundsElement;\n};\n\n/**\n * Provide the div for inserting content into the drop-down.\n * @return {Element} Div to populate with content\n */\nBlockly.DropDownDiv.getContentDiv = function() {\n  return Blockly.DropDownDiv.content_;\n};\n\n/**\n * Clear the content of the drop-down.\n */\nBlockly.DropDownDiv.clearContent = function() {\n  Blockly.DropDownDiv.content_.innerHTML = '';\n};\n\n/**\n * Set the colour for the drop-down.\n * @param {string} backgroundColour Any CSS color for the background\n * @param {string} borderColour Any CSS color for the border\n */\nBlockly.DropDownDiv.setColour = function(backgroundColour, borderColour) {\n  Blockly.DropDownDiv.DIV_.style.backgroundColor = backgroundColour;\n  Blockly.DropDownDiv.DIV_.style.borderColor = borderColour;\n};\n\n/**\n * Set the category for the drop-down.\n * @param {string} category The new category for the drop-down.\n */\nBlockly.DropDownDiv.setCategory = function(category) {\n  Blockly.DropDownDiv.DIV_.setAttribute('data-category', category);\n};\n\n// Modified: find blocklyPath\nBlockly.DropDownDiv.showPositionedByBlock = function(owner, block,\n      opt_onHide, opt_secondaryYOffset) {\n  var scale = block.workspace.scale;\n  var bBox = {width: block.width, height: block.height};\n  bBox.width *= scale;\n  bBox.height *= scale;\n  var blockSvg = block.getSvgRoot();\n  for(var i=0; i<blockSvg.children.length; i++) {\n     if(blockSvg.children[i].classList[0] == 'blocklyPath') {\n        blockSvg = blockSvg.children[i];\n        break;\n     }\n  }\n  var position = blockSvg.getBoundingClientRect();\n  // If we can fit it, render below the block.\n  var primaryX = position.left + position.width / 2;\n  var primaryY = position.top + position.height;\n  // If we can't fit it, render above the entire parent block.\n  var secondaryX = primaryX;\n  var secondaryY = position.top;\n  if (opt_secondaryYOffset) {\n    secondaryY += opt_secondaryYOffset;\n  }\n  // Set bounds to workspace; show the drop-down.\n  Blockly.DropDownDiv.setBoundsElement(block.workspace.getParentSvg().parentNode);\n  return Blockly.DropDownDiv.show(this, primaryX, primaryY, secondaryX, secondaryY, opt_onHide);\n};\n\n// Remove mousedown listener\nBlockly.DropDownDiv.removeListener = function() {\n  if(Blockly.DropDownDiv.listenerActive) {\n    window.addEventListener('mousedown', Blockly.DropDownDiv.hideIfNotShowing, true);\n    Blockly.DropDownDiv.listenerActive = false;\n  }\n};\n\n// Add mousedown listener\nBlockly.DropDownDiv.addListener = function() {\n  if(!Blockly.DropDownDiv.listenerActive) {\n    window.addEventListener('mousedown', Blockly.DropDownDiv.hideIfNotShowing, true);\n    Blockly.DropDownDiv.listenerActive = true;\n  }\n};\n\n/**\n * Show and place the drop-down.\n * The drop-down is placed with an absolute \"origin point\" (x, y) - i.e.,\n * the arrow will point at this origin and box will positioned below or above it.\n * If we can maintain the container bounds at the primary point, the arrow will\n * point there, and the container will be positioned below it.\n * If we can't maintain the container bounds at the primary point, fall-back to the\n * secondary point and position above.\n * @param {Object} owner The object showing the drop-down\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @param {Function=} opt_onHide Optional callback for when the drop-down is hidden\n * @return {boolean} True if the menu rendered at the primary origin point.\n */\nBlockly.DropDownDiv.show = function(owner, primaryX, primaryY, secondaryX, secondaryY, opt_onHide) {\n  // Do not hide the div while we're showing it\n  Blockly.DropDownDiv.isInAnimation = true;\n  if(Blockly.DropDownDiv.animateOutTimer_) {\n    window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n    Blockly.DropDownDiv.animateOutTimer_ = null;\n  }\n  if(Blockly.DropDownDiv.isInAnimationTimer) {\n    window.clearTimeout(Blockly.DropDownDiv.isInAnimationTimer);\n    Blockly.DropDownDiv.isInAnimationTimer = null;\n  }\n  Blockly.DropDownDiv.isInAnimationTimer = window.setTimeout(function () { Blockly.DropDownDiv.isInAnimation = false; }, Blockly.DropDownDiv.ANIMATION_TIME*1000);\n\n  Blockly.DropDownDiv.addListener();\n\n  Blockly.DropDownDiv.owner_ = owner;\n  Blockly.DropDownDiv.onHide_ = opt_onHide;\n  var div = Blockly.DropDownDiv.DIV_;\n  var metrics = Blockly.DropDownDiv.getPositionMetrics(primaryX, primaryY, secondaryX, secondaryY);\n  // Update arrow CSS\n  Blockly.DropDownDiv.arrow_.style.transform = 'translate(' +\n    metrics.arrowX + 'px,' + metrics.arrowY + 'px) rotate(45deg)';\n  Blockly.DropDownDiv.arrow_.setAttribute('class',\n    metrics.arrowAtTop ? 'blocklyDropDownArrow arrowTop' : 'blocklyDropDownArrow arrowBottom');\n\n  // When we change `translate` multiple times in close succession,\n  // Chrome may choose to wait and apply them all at once.\n  // Since we want the translation to initial X, Y to be immediate,\n  // and the translation to final X, Y to be animated,\n  // we saw problems where both would be applied after animation was turned on,\n  // making the dropdown appear to fly in from (0, 0).\n  // Using both `left`, `top` for the initial translation and then `translate`\n  // for the animated transition to final X, Y is a workaround.\n\n  // First apply initial translation.\n  div.style.left = metrics.initialX + 'px';\n  div.style.top = metrics.initialY + 'px';\n  // Show the div.\n  div.style.display = 'block';\n  div.style.opacity = 1;\n  // Add final translate, animated through `transition`.\n  // Coordinates are relative to (initialX, initialY),\n  // where the drop-down is absolutely positioned.\n  var dx = (metrics.finalX - metrics.initialX);\n  var dy = (metrics.finalY - metrics.initialY);\n  div.style.transform = 'translate(' + dx + 'px,' + dy + 'px)';\n  return metrics.arrowAtTop;\n};\n\n/**\n * Helper to position the drop-down and the arrow, maintaining bounds.\n * See explanation of origin points in Blockly.DropDownDiv.show.\n * @param {number} primaryX Desired origin point x, in absolute px\n * @param {number} primaryY Desired origin point y, in absolute px\n * @param {number} secondaryX Secondary/alternative origin point x, in absolute px\n * @param {number} secondaryY Secondary/alternative origin point y, in absolute px\n * @returns {Object} Various final metrics, including rendered positions for drop-down and arrow.\n */\nBlockly.DropDownDiv.getPositionMetrics = function(primaryX, primaryY, secondaryX, secondaryY) {\n  var div = Blockly.DropDownDiv.DIV_;\n  var boundPosition = Blockly.DropDownDiv.boundsElement_.getBoundingClientRect();\n\n  var boundSize = goog.style.getSize(Blockly.DropDownDiv.boundsElement_);\n  var divSize = goog.style.getSize(div);\n\n  // First decide if we will render at primary or secondary position\n  // i.e., above or below\n  // renderX, renderY will eventually be the final rendered position of the box.\n  var renderX, renderY, renderedSecondary;\n  // Can the div fit inside the bounds if we render below the primary point?\n  if (secondaryY - divSize.height < boundPosition.top) {\n    // We can't fit below in terms of y. Can we fit above?\n    if (primaryY + divSize.height > boundPosition.top + boundSize.height) {\n      // We also can't fit above, so just render below anyway.\n      renderX = secondaryX;\n      renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = true;\n    } else {\n      // We can fit above, render secondary\n      renderX = primaryX;\n      renderY = primaryY + Blockly.DropDownDiv.PADDING_Y;\n      renderedSecondary = false;\n    }\n  } else {\n    // We can fit below, render primary\n    renderX = secondaryX;\n    renderY = secondaryY - divSize.height - Blockly.DropDownDiv.PADDING_Y;\n    renderedSecondary = true;\n  }\n  // First calculate the absolute arrow X\n  // This needs to be done before positioning the div, since the arrow\n  // wants to be as close to the origin point as possible.\n  var arrowX = renderX - Blockly.DropDownDiv.ARROW_SIZE / 2;\n  // Keep in overall bounds\n  arrowX = Math.max(boundPosition.left, Math.min(arrowX, boundPosition.left + boundSize.width));\n\n  // Adjust the x-position of the drop-down so that the div is centered and within bounds.\n  var centerX = divSize.width / 2;\n  renderX -= centerX;\n  // Fit horizontally in the bounds.\n  renderX = Math.max(\n    boundPosition.left,\n    Math.min(renderX, boundPosition.left + boundSize.width - divSize.width)\n  );\n  // After we've finished caclulating renderX, adjust the arrow to be relative to it.\n  arrowX -= renderX;\n\n  // Pad the arrow by some pixels, primarily so that it doesn't render on top of a rounded border.\n  arrowX = Math.max(\n    Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING,\n    Math.min(arrowX, divSize.width - Blockly.DropDownDiv.ARROW_HORIZONTAL_PADDING - Blockly.DropDownDiv.ARROW_SIZE)\n  );\n\n  // Calculate arrow Y. If we rendered secondary, add on bottom.\n  // Extra pixels are added so that it covers the border of the div.\n  var arrowY = (renderedSecondary) ? divSize.height - Blockly.DropDownDiv.BORDER_SIZE : 0;\n  arrowY -= (Blockly.DropDownDiv.ARROW_SIZE / 2) + Blockly.DropDownDiv.BORDER_SIZE;\n\n  // Initial position calculated without any padding to provide an animation point.\n  var initialX = renderX; // X position remains constant during animation.\n  var initialY;\n  if (renderedSecondary) {\n    initialY = secondaryY - divSize.height; // No padding on Y\n  } else {\n    initialY = primaryY; // No padding on Y\n  }\n\n  return {\n    initialX: initialX,\n    initialY : initialY+10,\n    finalX: renderX,\n    finalY: renderY+10,\n    arrowX: arrowX,\n    arrowY: arrowY,\n    arrowAtTop: !renderedSecondary\n  };\n};\n\n/**\n * Is the container visible?\n * @return {boolean} True if visible.\n */\nBlockly.DropDownDiv.isVisible = function() {\n  return !!Blockly.DropDownDiv.owner_;\n};\n\n/**\n * Hide the menu only if it is owned by the provided object.\n * @param {Object} owner Object which must be owning the drop-down to hide\n * @return {Boolean} True if hidden\n */\nBlockly.DropDownDiv.hideIfOwner = function(owner) {\n  if (Blockly.DropDownDiv.owner_ === owner) {\n    Blockly.DropDownDiv.hide();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Hide the menu, triggering animation.\n */\nBlockly.DropDownDiv.hide = function() {\n  Blockly.DropDownDiv.isInAnimation = false;\n  // Start the animation by setting the translation and fading out.\n  var div = Blockly.DropDownDiv.DIV_;\n  // Reset to (initialX, initialY) - i.e., no translation.\n  if(div) {\n    div.style.transform = 'translate(0px, 0px)';\n    div.style.opacity = 0;\n    Blockly.DropDownDiv.animateOutTimer_ = setTimeout(function() {\n      // Finish animation - reset all values to default.\n      Blockly.DropDownDiv.hideWithoutAnimation();\n    }, Blockly.DropDownDiv.ANIMATION_TIME * 1000);\n  }\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n\n// Hide after a timeout\nBlockly.DropDownDiv.hideIfNotShowing = function () {\n  if(!Blockly.DropDownDiv.isInAnimation) {\n    Blockly.DropDownDiv.hide();\n  }\n}\n\n/**\n * Hide the menu, without animation.\n */\nBlockly.DropDownDiv.hideWithoutAnimation = function() {\n  if (!Blockly.DropDownDiv.isVisible()) {\n    return;\n  }\n  var div = Blockly.DropDownDiv.DIV_;\n  Blockly.DropDownDiv.animateOutTimer_ && window.clearTimeout(Blockly.DropDownDiv.animateOutTimer_);\n  div.style.transform = '';\n  div.style.top = '';\n  div.style.left = '';\n  div.style.display = 'none';\n  Blockly.DropDownDiv.clearContent();\n  Blockly.DropDownDiv.removeListener();\n  Blockly.DropDownDiv.owner_ = null;\n  if (Blockly.DropDownDiv.onHide_) {\n    Blockly.DropDownDiv.onHide_();\n    Blockly.DropDownDiv.onHide_ = null;\n  }\n};\n","// Adapt to our custom Blockly.Variables.promptName behavior\nBlockly.FieldVariable.prototype.classValidator = function(text) {\n  var workspace = this.sourceBlock_.workspace;\n  if (text == Blockly.Msg.RENAME_VARIABLE) {\n    var oldVar = this.getText();\n    Blockly.hideChaff();\n    var cb = function(text) {\n      if (text) {\n        workspace.renameVariable(oldVar, text);\n      }\n    };\n    text = Blockly.Variables.promptName(\n        Blockly.Msg.RENAME_VARIABLE_TITLE.replace('%1', oldVar), oldVar, cb);\n    return null;\n  } else if (text == Blockly.Msg.DELETE_VARIABLE.replace('%1',\n      this.getText())) {\n    workspace.deleteVariable(this.getText());\n    return null;\n  }\n  return undefined;\n};\n","if(Blockly.Blocks['procedures_defnoreturn']) {\n  Blockly.Blocks['procedures_defnoreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n\nif(Blockly.Blocks['procedures_defreturn']) {\n  Blockly.Blocks['procedures_defreturn'].init = function() {\n    var nameField = new Blockly.FieldTextInput('',\n        Blockly.Procedures.rename);\n    nameField.setSpellcheck(false);\n    this.appendDummyInput()\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_TITLE)\n        .appendField(nameField, 'NAME')\n        .appendField('', 'PARAMS');\n    this.appendValueInput('RETURN')\n        .setAlign(Blockly.ALIGN_RIGHT)\n        .appendField(Blockly.Msg.PROCEDURES_DEFRETURN_RETURN);\n    this.setMutator(new Blockly.Mutator(['procedures_mutatorarg']));\n    if ((this.workspace.options.comments ||\n         (this.workspace.options.parentWorkspace &&\n          this.workspace.options.parentWorkspace.options.comments)) &&\n        Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT) {\n      this.setCommentText(Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT);\n    }\n    this.setColour(Blockly.Blocks.procedures.HUE);\n    this.setTooltip(Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP);\n    this.setHelpUrl(Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL);\n    this.arguments_ = [];\n    this.setStatements_(true);\n    this.statementConnection_ = null;\n  };\n}\n","/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - hostMetrics.flyoutWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + hostMetrics.flyoutWidth + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Object} hostMetrics A data structure describing all the\n *     required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio_ = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio_ == -Infinity || this.ratio_ == Infinity ||\n      isNaN(this.ratio_)) {\n    this.ratio_ = 0;\n  }\n\n  var handleLength = (hostMetrics.viewWidth - hostMetrics.flyoutWidth) * this.ratio_;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio_;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n","// Fix case where there's no workspace (we're probably unloading)\nBlockly.onMouseUp_ = function(e) {\n  var workspace = Blockly.getMainWorkspace();\n  if (!workspace || workspace.dragMode_ == Blockly.DRAG_NONE) {\n    return;\n  }\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Css.setCursor(Blockly.Css.Cursor.OPEN);\n  workspace.dragMode_ = Blockly.DRAG_NONE;\n  // Unbind the touch event if it exists.\n  if (Blockly.Touch.onTouchUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Touch.onTouchUpWrapper_);\n    Blockly.Touch.onTouchUpWrapper_ = null;\n  }\n  if (Blockly.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.onMouseMoveWrapper_);\n    Blockly.onMouseMoveWrapper_ = null;\n  }\n};\n\n","// Remove some characters which make JavaScript.STATEMENT_PREFIX instructions\n// generation go wrong\nBlockly.genUid.soup_ = '!#()*+,-./:;=?@[]_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n// Modify to save somewhere all bound events\nBlockly.eventsBound = [];\n\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; event = events[i]; i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  node.addEventListener(name, wrapFunc, false);\n  Blockly.eventsBound.push({node: node, name: name, func: func});\n  var bindData = [[node, name, wrapFunc]];\n\n  // Add equivalent touch event.\n  if (name in Blockly.Touch.TOUCH_MAP) {\n    var touchWrapFunc = function(e) {\n      wrapFunc(e);\n      // Stop the browser from scrolling/zooming the page.\n      if (handled) {\n        e.preventDefault();\n      }\n    };\n    for (var i = 0, eventName;\n         eventName = Blockly.Touch.TOUCH_MAP[name][i]; i++) {\n      node.addEventListener(eventName, touchWrapFunc, false);\n      Blockly.eventsBound.push({node: node, name: eventName, func: func});\n      bindData.push([node, eventName, touchWrapFunc]);\n    }\n  }\n  return bindData;\n};\n\n\n// Function to remove all bound events\nBlockly.removeEvents = function() {\n  if(Blockly.documentEventsBound_) {\n    document.removeEventListener('mouseup', Blockly.onMouseUp_);\n  }\n  for(var i=0; i<Blockly.eventsBound.length; i++) {\n    var eData = Blockly.eventsBound[i];\n    try {\n      eData.node.removeEventListener(eData.name, eData.func);\n    } catch(e) {}\n  }\n  Blockly.eventsBound = [];\n  Blockly.DropDownDiv.removeListener();\n}\n","Blockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var assignCode = varName + ' = ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return assignCode + reportCode;\n};\n","// reportValue allows to show a popup next to a block\nBlockly.WorkspaceSvg.prototype.reportValue = function(id, value) {\n  var block = this.getBlockById(id);\n  if (!block) {\n    throw 'Tried to report value on block that does not exist.';\n  }\n  Blockly.DropDownDiv.createDom();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  Blockly.DropDownDiv.clearContent();\n  var contentDiv = Blockly.DropDownDiv.getContentDiv();\n  var valueReportBox = goog.dom.createElement('div');\n  valueReportBox.setAttribute('class', 'valueReportBox');\n  valueReportBox.innerHTML = value;\n  contentDiv.appendChild(valueReportBox);\n  Blockly.DropDownDiv.setColour(\"#FFFFFF\", \"#AAAAAA\");\n  Blockly.DropDownDiv.showPositionedByBlock(this, block);\n};\n\n// Fix issue when unloading\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  var translation = 'translate(' + x + ',' + y + ') ' +\n      'scale(' + this.scale + ')';\n  if(this.svgBlockCanvas_) {\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n  }\n  if(this.svgBubbleCanvas_) {\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  if(this.dragSurface) {\n    this.dragSurface.translateAndScaleGroup(x, y, this.scale);\n  }\n};\n","FioiBlockly.Msg.fr = {};\n\nFioiBlockly.Msg.fr.VARIABLES_DEFAULT_NAME = \"element\";\nFioiBlockly.Msg.fr.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;\n\nFioiBlockly.Msg.fr.DICTS_CREATE_EMPTY_TITLE = \"dictionnaire vide\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = \"Créer un dictionnaire\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_INPUT_WITH = \"créer un dictionnaire :\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_KEY = \"cle\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_MAPPING = \":\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TITLE = \"clé/valeur\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_ITEM_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICTS_CREATE_WITH_TOOLTIP = \"\";\nFioiBlockly.Msg.fr.DICT_GET = \"récupérer la clé\";\nFioiBlockly.Msg.fr.DICT_GET_TO = \"de\";\nFioiBlockly.Msg.fr.DICT_KEYS = \"liste des clés de\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TITLE = \"afficher la ligne %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, avec retour à la ligne après.\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TITLE = \"afficher %1\";\nFioiBlockly.Msg.fr.TEXT_PRINT_NOEND_TOOLTIP = \"Afficher le texte, le nombre ou une autre valeur spécifiée, sans retour à la ligne.\";\n\nFioiBlockly.Msg.fr.LISTS_APPEND_MSG = \"à la liste %1 ajouter l'élément %2\";\nFioiBlockly.Msg.fr.LISTS_APPEND_TOOLTIP = \"Ajouter un élément à la liste '%1'\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FIRST = \"au début\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_END = \"à l'indice depuis la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_FROM_START = \"à l'indice\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET = \"obtenir la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_GET_REMOVE = \"obtenir et supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_LAST = \"à la fin\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_RANDOM = \"à un indice aléatoire\";\nFioiBlockly.Msg.fr.LISTS_GET_INDEX_REMOVE = \"supprimer la valeur\";\nFioiBlockly.Msg.fr.LISTS_SET_INDEX_INSERT = \"insérer\";\n\nFioiBlockly.Msg.fr.INPUT_NUM = \"lire un nombre\";\nFioiBlockly.Msg.fr.INPUT_NUM_TOOLTIP = \"Lit un nombre sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_CHAR = \"lire un caractère\";\nFioiBlockly.Msg.fr.INPUT_CHAR_TOOLTIP = \"Lit un caractère sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_WORD = \"lire un mot\";\nFioiBlockly.Msg.fr.INPUT_WORD_TOOLTIP = \"Lit un mot sur l'entrée du programme.\";\nFioiBlockly.Msg.fr.INPUT_LINE = \"lire une ligne\";\nFioiBlockly.Msg.fr.INPUT_LINE_TOOLTIP = \"Lit une ligne sur l'entrée du programme.\";\n\nFioiBlockly.Msg.fr.CANNOT_DELETE_VARIABLE_PROCEDURE = \"Impossible de supprimer la variable '%1', utilisée par la procédure '%2'.\";\n\nFioiBlockly.Msg.fr.DATA_REPLACEITEMOFLIST_TITLE = \"remplacer l'élément %1 de la liste %2 par %3\";\nFioiBlockly.Msg.fr.DATA_ITEMOFLIST_TITLE = \"élément %1 dans %2\";\nFioiBlockly.Msg.fr.DATA_LISTREPEAT_TITLE = \"initialiser la liste %1 avec %2 répété %3 fois\";\n","// Fill undefined Blockly.Msg messages with messages from the default language\nFioiBlockly.fillLanguage = function() {\n  for(var msgName in FioiBlockly.Msg[FioiBlockly.defaultLang]) {\n    if(typeof Blockly.Msg[msgName] == 'undefined') {\n      Blockly.Msg[msgName] = FioiBlockly.Msg[FioiBlockly.defaultLang][msgName];\n    }\n  }\n}\nFioiBlockly.fillLanguage();\n","Blockly.Python['dict_get'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dict_get_literal'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var value = Blockly.Python.quote_(block.getFieldValue('ITEM'));\n  var code = dict + '[' + value + ']';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n\nBlockly.Python['dicts_create_with'] = function(block) {\n    var value_keys = Blockly.Python.valueToCode(block, 'keys', Blockly.   Python.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    var code = new Array(block.itemCount_);\n  \n    for (var n = 0; n < block.itemCount_; n++) {\n        var key = Blockly.Python.quote_(block.getFieldValue('KEY' + n));\n        var value = Blockly.Python.valueToCode(block, 'VALUE' + n,\n                Blockly.Python.ORDER_NONE) || '___';\n        code[n] = key +\": \"+ value;\n    }\n    code = '{' + code.join(', ') + '}';\n    return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['dict_keys'] = function(block) {\n  var dict = Blockly.Python.valueToCode(block, 'DICT',\n      Blockly.Python.ORDER_MEMBER) || '___';\n  var code = dict + '.keys()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\n","Blockly.Python['input_num'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'int(input_word())';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_char'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.read(1)';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_word'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  Blockly.Python.definitions_['from_string_import_whitespace'] = 'from string import whitespace';\n  Blockly.Python.definitions_['input_word'] = \"def input_word():\\n\"\n                                            + \"    buffer = ''\\n\"\n                                            + \"    newchar = 'c'\\n\"\n                                            + \"    while newchar:\\n\"\n                                            + \"        newchar = sys.stdin.read(1)\\n\"\n                                            + \"        if newchar in whitespace:\\n\"\n                                            + \"            if buffer: break\\n\"\n                                            + \"        else:\\n\"\n                                            + \"            buffer += newchar\\n\"\n                                            + \"    return buffer\\n\";\n  var code = 'input_word()';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['input_line'] = function(block) {\n  Blockly.Python.definitions_['import_sys'] = 'import sys';\n  var code = 'sys.stdin.readline()[:-1]';\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n","Blockly.Python['lists_append'] = function(block) {\n  // Append\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.Variables.NAME_TYPE);\n  var value = Blockly.Python.valueToCode(block, 'ITEM',\n      Blockly.Python.ORDER_NONE) || '___';\n  return varName + '.append(' + value + ')\\n';\n};\n","FioiBlockly.OriginalBlocks['logic_compare'] = Blockly.Blocks['logic_compare'];\n\n// Use standard operator names (for instance '!=' instead of '≠')\nBlockly.Blocks['logic_compare'] = {\n  /**\n   * Block for comparison operator.\n   * @this Blockly.Block\n   */\n  init: function() {\n    var rtlOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['>', 'LT'],\n      ['>=', 'LTE'],\n      ['<', 'GT'],\n      ['<=', 'GTE']\n    ];\n    var ltrOperators = [\n      ['==', 'EQ'],\n      ['!=', 'NEQ'],\n      ['<', 'LT'],\n      ['<=', 'LTE'],\n      ['>', 'GT'],\n      ['>=', 'GTE']\n    ];\n    var OPERATORS = this.RTL ? rtlOperators : ltrOperators;\n    this.setHelpUrl(Blockly.Msg.LOGIC_COMPARE_HELPURL);\n    this.setColour(Blockly.Blocks.logic.HUE);\n    this.setOutput(true, 'Boolean');\n    this.appendValueInput('A');\n    this.appendValueInput('B')\n        .appendField(new Blockly.FieldDropdown(OPERATORS), 'OP');\n    this.setInputsInline(true);\n    // Assign 'this' to a variable for use in the tooltip closure below.\n    var thisBlock = this;\n    this.setTooltip(function() {\n      var op = thisBlock.getFieldValue('OP');\n      var TOOLTIPS = {\n        'EQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ,\n        'NEQ': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ,\n        'LT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT,\n        'LTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE,\n        'GT': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT,\n        'GTE': Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE\n      };\n      return TOOLTIPS[op];\n    });\n    this.prevBlocks_ = [null, null];\n  },\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this Blockly.Block\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType_(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Disconnect previous and bump it away.\n      // Ensure that any disconnections are grouped with the causing event.\n      Blockly.Events.setGroup(e.group);\n      for (var i = 0; i < this.prevBlocks_.length; i++) {\n        var block = this.prevBlocks_[i];\n        if (block === blockA || block === blockB) {\n          block.unplug();\n          block.bumpNeighbours_();\n        }\n      }\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = blockA;\n    this.prevBlocks_[1] = blockB;\n  }\n};\n\n","Blockly.Python['text_print_noend'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Python.valueToCode(block, 'TEXT',\n      Blockly.Python.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ', end=\"\")\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.JavaScript.init = function(workspace) {\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.JavaScript.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.JavaScript.functionNames_ = Object.create(null);\n\n  if (!Blockly.JavaScript.variableDB_) {\n    Blockly.JavaScript.variableDB_ =\n        new Blockly.Names(Blockly.JavaScript.RESERVED_WORDS_);\n  } else {\n    Blockly.JavaScript.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @private\n */\nBlockly.JavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n\n\nBlockly.JavaScript['controls_for'] = function(block) {\n  // For loop.\n  var variable0 = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var argument1 = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var increment = Blockly.JavaScript.valueToCode(block, 'BY',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '1';\n  var branch = Blockly.JavaScript.statementToCode(block, 'DO');\n  branch = Blockly.JavaScript.addLoopTrap(branch, block.id);\n  var code;\n  if (Blockly.isNumber(argument0) && Blockly.isNumber(argument1) &&\n      Blockly.isNumber(increment)) {\n    // All arguments are simple numbers.\n    var up = parseFloat(argument0) <= parseFloat(argument1);\n    code = 'for (var ' + variable0 + ' = ' + argument0 + '; ' +\n        variable0 + (up ? ' <= ' : ' >= ') + argument1 + '; ' +\n        variable0;\n    var step = Math.abs(parseFloat(increment));\n    if (step == 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    var startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !Blockly.isNumber(argument0)) {\n      startVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_start', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    var endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !Blockly.isNumber(argument1)) {\n      var endVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          variable0 + '_end', Blockly.Variables.NAME_TYPE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    var incVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        variable0 + '_inc', Blockly.Variables.NAME_TYPE);\n    code += 'var ' + incVar + ' = ';\n    if (Blockly.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += Blockly.JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' +\n        incVar + ' >= 0 ? ' +\n        variable0 + ' <= ' + endVar + ' : ' +\n        variable0 + ' >= ' + endVar + '; ' +\n        variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nBlockly.JavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  return 'var ' + varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * Initialise the database of variable names.\n * @param {!Blockly.Workspace} workspace Workspace to generate code from.\n */\nBlockly.Python.init = function(workspace) {\n  /**\n   * Empty loops or conditionals are not allowed in Python.\n   */\n  Blockly.Python.PASS = this.INDENT + 'pass\\n';\n  // Create a dictionary of definitions to be printed before the code.\n  Blockly.Python.definitions_ = Object.create(null);\n  // Create a dictionary mapping desired function names in definitions_\n  // to actual function names (to avoid collisions with user functions).\n  Blockly.Python.functionNames_ = Object.create(null);\n\n  if (!Blockly.Python.variableDB_) {\n    Blockly.Python.variableDB_ =\n        new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n  } else {\n    Blockly.Python.variableDB_.reset();\n  }\n};\n\n/**\n * Encode a string as a properly escaped Python string, complete with quotes.\n * @param {string} string Text to encode.\n * @return {string} Python string.\n * @private\n */\nBlockly.Python.quote_ = function(string) {\n  // Can't use goog.string.quote since % must also be escaped.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n                 .replace(/\\n/g, '\\\\\\n')\n                 .replace(/\\%/g, '\\\\%')\n                 .replace(/\"/g, '\\\\\"');\n  return '\"' + string + '\"';\n};\n","Blockly.Python['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  if (block.getField('TIMES')) {\n    // Internal number.\n    var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));\n  } else {\n    // External number.\n    var repeats = Blockly.Python.valueToCode(block, 'TIMES',\n        Blockly.Python.ORDER_NONE) || '0';\n  }\n  if (Blockly.isNumber(repeats)) {\n    repeats = parseInt(repeats, 10);\n  } else {\n    repeats = 'int(' + repeats + ')';\n  }\n  var branch = Blockly.Python.statementToCode(block, 'DO');\n  branch = Blockly.Python.addLoopTrap(branch, block.id) ||\n      Blockly.Python.PASS;\n  var loopVar = Blockly.Python.variableDB_.getDistinctName(\n      'loop', Blockly.Variables.NAME_TYPE);\n  var code = 'for ' + loopVar + ' in range(' + repeats + '):\\n' + branch;\n  return code;\n};\n\nBlockly.Python['controls_repeat'] = Blockly.Python['controls_repeat_ext'];\n","Blockly.JavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  var argument0 = Blockly.JavaScript.valueToCode(block, 'DELTA',\n      Blockly.JavaScript.ORDER_ADDITION) || '0';\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);\n  var incrCode = varName + ' = (typeof ' + varName + ' == \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n\n  // Report value if available\n  var reportCode = \"reportBlockValue('\" + block.id + \"', \"+varName+\", '\"+varName+\"');\\n\";\n\n  return incrCode + reportCode;\n};\n"]}